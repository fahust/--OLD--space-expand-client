<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1304428537</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialise loading the online highscores
post = '';
post2 = '';
postGuild = '';
postBio = '';
//alarm[0] = 10;

//addr = "http://localhost:31095/"
addr = "http://fosthome.synology.me:31095/"
//addr = "90.22.181.183:31095"
player_name = global.idfixe;
global.bioT = "";
global.bioD = "";
global.bioD1 = "";
global.bioPage = 1;
global.bioPageMax = 1;
global.listBio = ds_list_create(); 
ds_list_set(global.listBio, 0, '');
ds_list_set(global.listBio, 1, '');
ds_list_set(global.listBio, 2, '');
ds_list_set(global.listBio, 3, '');
ds_list_set(global.listBio, 4, '');
ds_list_set(global.listBio, 5, '');
ds_list_set(global.listBio, 6, '');
ds_list_set(global.listBio, 7, '');
ds_list_set(global.listBio, 8, '');
ds_list_set(global.listBio, 9, '');
global.idguildressource = "";
//alarm[5] = 70
get_highscores = ""
array_sample = 0
enterKey = 0;
//alarm[6] = 4000
//get_planet(obj_planetary.buildaffect2);
    //get_scores(player_name,3);
alarm[8] = 10
text = "Please wait for the highscores to load...";
//send_score(global.name,0);
textChat = "-----------|"
text2 = "-----------|
-----------|
-----------"
str4 = "-----------|
-----------|
-----------"
randomize();
    //if obj_planetary.menuplanet = 3 {
    //alarm[1] = 1//room_speed;//}
    
    
if obj_planetary.menuplanet = 3 {
if obj_planetary.menuplanet3 = 0 {
    with(obj_planetary){if scoreshipsvalid &gt; 0 {
update_score(global.name,scoretotal,global.idfixe,scoreressvalid,scoreshipsvalid,scoresciencevalid,scoredefvalid,global.idguildname,global.idguild,global.grade);
}}
get_scores(player_name,9);
}

if obj_planetary.menuplanet3 = 1 {get_chat(global.idfixe,1);}
if obj_planetary.menuplanet3 = 2 {get_chat(global.idfixe,2);}
if obj_planetary.guildchannel = 1 {
if obj_planetary.menuplanet3 = 3 {get_chat(global.idfixe,3);}
}else{
get_listguild(global.idguild);
}


}else{
get_planet(obj_planetary.buildaffect2);
 text = "playrs list bug";

    }


    global.recup1 = 0
    global.recup2 = 0
    global.recup3 = 0
    //rajouter
    global.recup4 = 0
    global.recup5 = 0
    global.recup6 = 0
    global.recup7 = 0
    
    global.recup8 = 0
    global.recup9 = 0
    global.recup10 = 0
    global.recup11 = 0
    global.recup12 = 0
    global.recup13 = 0
    global.recup14 = 0
    global.recup15 = 0
    global.recup16 = 0
    
    global.recup17 = 0
    global.recup18 = 0
    global.recup19 = 0
    global.recup20 = 0
    global.recup21 = 0
    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_planetary.menuplanet = 3 &amp;&amp; obj_planetary.menuplanet3 &gt;= 0  {
    if obj_planetary.guildchannel = 0 &amp;&amp; obj_planetary.menuplanet3 = 3{
        var hiscore_map, i, str;
        hiscore_map = ds_map_create();
        ds_map_set(hiscore_map,'id', obj_planetary.buildaffect);
        ds_map_set(hiscore_map,'gn', global.idguildname);
        str = json_encode(hiscore_map);
        ds_map_destroy(hiscore_map); 
        post2 = http_post_string(addr+"universe/loadusersguild" , str);
    }else{
        if obj_planetary.menuplanet = 3 &amp;&amp; obj_planetary.menuplanet3 = 0{
            if obj_planetary.planetnowid = 0 {
                    idSend = 1
                }else{
                    idSend = obj_planetary.planetnowid
                }
            var hiscore_map, i, str;
            hiscore_map = ds_map_create();
            ds_map_set(hiscore_map,'r', obj_planetary.scoreressvalid);
            ds_map_set(hiscore_map,'s', obj_planetary.scoreshipsvalid);
            ds_map_set(hiscore_map,'t', obj_planetary.scoresciencevalid);
            ds_map_set(hiscore_map,'d', obj_planetary.scoredefvalid);
            ds_map_set(hiscore_map,'id', idSend);
            ds_map_set(hiscore_map,'cu', global.idfixe);
            ds_map_set(hiscore_map,'n', global.name);
            //ds_map_set(hiscore_map,'cu', global.idfixe);
            str = json_encode(hiscore_map);
            ds_map_destroy(hiscore_map); 
            post = http_post_string(addr+"universe/loadusersscore" , str);
        }else{
            var hiscore_map, i, str;
            hiscore_map = ds_map_create();
            ds_map_set(hiscore_map,'id', obj_planetary.buildaffect);
            if obj_planetary.menuplanet3 = 1 {
            ds_map_set(hiscore_map,'g', "");
            }else{
            ds_map_set(hiscore_map,'g', global.idguild);
            }
            ds_map_set(hiscore_map,'t', obj_planetary.menuplanet3);
            str = json_encode(hiscore_map);
            ds_map_destroy(hiscore_map); 
            post2 = http_post_string(addr+"universe/loadlasttenmessage" , str);
        }
    }
}

if obj_planetary.menuplanet = 3 &amp;&amp; obj_planetary.menuplanet3 = 3{
    var hiscore_map, i, str;
    hiscore_map = ds_map_create();
    ds_map_set(hiscore_map,'n', global.idguildname);
    ds_map_set(hiscore_map,'cu', global.idfixe);
    str = json_encode(hiscore_map);
    ds_map_destroy(hiscore_map); 
    postGuild = http_post_string(addr+"universe/loadGuild" , str);
}


    
    alarm[8] = 100;
    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///
/*instance_destroy();
instance_create(x,y,obj_highscore)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_planetary.menuplanet = 3 {
obj_planetary.menuplanet = 0
scr_addinfo(" ",9,0)
//instance_destroy();
}
alarm[6] = 3000
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if text = "Please wait for the highscores to load..." {
instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if obj_planetary.buildaffect &lt; ds_grid_height(obj_planetary.planetary)-1 {
        obj_planetary.buildaffect += 1 }else{obj_planetary.buildaffect = 0}
        instance_destroy();*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///LATENCE
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if obj_planetary.menuplanet = 3 {
    with(obj_planetary){if scoreshipsvalid &gt; 0 {
update_score(global.name,scoretotal,global.idfixe,scoreressvalid,scoreshipsvalid,scoresciencevalid,scoredefvalid,global.idguildname,global.idguild,global.grade);
}}

get_scores(player_name,10);
}else{
get_planet(obj_planetary.buildaffect2);
 text = "playrs list bug";

    }
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
alarm[0] = 20
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Receiving the result from Altervista





//show_debug_message(post)

var r_str = "null";
if ds_map_find_value(async_load, "id") == postGuild
   {
   if ds_map_find_value(async_load, "status") == 0
      {
        r_str = ds_map_find_value(async_load, "result");
        resultMap = json_decode(r_str)
        if !is_undefined(resultMap[? "cg"]){//createguild
            if resultMap[? "cg"] = 1 {
                global.idguildname = string(resultMap[? "n"]);
                global.idguild = resultMap[? "idg"];
                with(obj_planetary){scr_save();}
            }
        }
    
    
        if !is_undefined(resultMap[? "n"]) {
            global.idguildname = resultMap[? "n"]
            global.idguild = resultMap[? "idg"]
        }
        
        if !is_undefined(resultMap[? "r"]) {
            global.idguildressource = resultMap[? "r"]
        }
        
        if !is_undefined(resultMap[? "rgain"]) {
            if resultMap[? "rgain"] = 1{
                ds_grid_add(obj_planetary.planetary,35,0,1000000) 
                ds_grid_add(obj_planetary.planetary,90,0,1000000/9)
                ds_grid_add(obj_planetary.planetary,91,0,1000000/9)
                ds_grid_add(obj_planetary.planetary,92,0,1000000/9)
                ds_grid_add(obj_planetary.planetary,93,0,1000000/9)
                ds_grid_add(obj_planetary.planetary,94,0,1000000/9)
                ds_grid_add(obj_planetary.planetary,95,0,1000000/9)
                ds_grid_add(obj_planetary.planetary,96,0,1000000/9)
                ds_grid_add(obj_planetary.planetary,97,0,1000000/9)
                ds_grid_add(obj_planetary.planetary,98,0,1000000/9)
                with(obj_planetary){scr_save();}
            }
        }
       
        if !is_undefined(resultMap[? "icu"]){
            global.idguildinvitname = resultMap[? "icu"]
        }
                    
      }
      
   }

var r_str = "null";
if ds_map_find_value(async_load, "id") == post2
   {
   if ds_map_find_value(async_load, "status") == 0
      {
        r_str = ds_map_find_value(async_load, "result");
        resultMap = json_decode(r_str);
        if resultMap[? "chat"] != "" &amp;&amp; !is_undefined(resultMap[? "chat"])
            obj_highscore.textChat = resultMap[? "chat"];     
      }
      
   }
   
   var r_str = "null";
if ds_map_find_value(async_load, "id") == postBio
   {
   if ds_map_find_value(async_load, "status") == 0
      {
        r_str = ds_map_find_value(async_load, "result");
        resultMap = json_decode(r_str);
        if resultMap[? "listbio"] != "" &amp;&amp; !is_undefined(resultMap[? "listbio"]){
        scr_bioClearList();
            string_split_ds_list("|",resultMap[? "listbio"],true,global.listBio);
            global.bioPageMax = resultMap[? "nbrpage"];
        }
        if resultMap[? "t"] != "" &amp;&amp; !is_undefined(resultMap[? "t"]){
            //show_debug_message(resultMap[? "t"]);
            global.bioT = resultMap[? "t"];
            global.bioD = resultMap[? "d"];
            global.bioD1 = resultMap[? "d1"];
        }
            //show_debug_message(resultMap[? "listbio"]);
      }
   }
if ds_map_find_value(async_load, "id") == post
   {
   if ds_map_find_value(async_load, "status") == 0
      {
      r_str = ds_map_find_value(async_load, "result");
            var resultMap = json_decode(r_str);
            
            if resultMap[? "id"]{
                if resultMap[? "id"] != 0 {
                    /*if resultMap[? "sc1"]*/ ds_grid_set(obj_planetary.planetary,43,resultMap[? "id"],real(resultMap[? "sc1"]))
                    /*if resultMap[? "sc2"]*/ ds_grid_set(obj_planetary.planetary,44,resultMap[? "id"],real(resultMap[? "sc2"]))
                    /*if resultMap[? "sc3"]*/ ds_grid_set(obj_planetary.planetary,45,resultMap[? "id"],real(resultMap[? "sc3"]))
                    /*if resultMap[? "sc4"]*/ ds_grid_set(obj_planetary.planetary,46,resultMap[? "id"],real(resultMap[? "sc4"]))
                    /*if resultMap[? "sc5"]*/ ds_grid_set(obj_planetary.planetary,47,resultMap[? "id"],real(resultMap[? "sc5"]))
                    /*if resultMap[? "sc6"]*/ ds_grid_set(obj_planetary.planetary,48,resultMap[? "id"],real(resultMap[? "sc6"]))
                    /*if resultMap[? "sc7"]*/ ds_grid_set(obj_planetary.planetary,49,resultMap[? "id"],real(resultMap[? "sc7"]))
                    /*if resultMap[? "dba"]*/ ds_grid_set(obj_planetary.planetary,51,resultMap[? "id"],real(resultMap[? "dba"]))
                    /*if resultMap[? "tbe"]*/ ds_grid_set(obj_planetary.planetary,52,resultMap[? "id"],real(resultMap[? "tbe"]))
                    /*if resultMap[? "aby"]*/ ds_grid_set(obj_planetary.planetary,34,resultMap[? "id"],real(resultMap[? "aby"]))
                    /*if resultMap[? "asc1"]*/ ds_grid_set(obj_planetary.planetary,231,resultMap[? "id"],real(resultMap[? "asc1"]))
                    /*if resultMap[? "asc2"]*/ ds_grid_set(obj_planetary.planetary,232,resultMap[? "id"],real(resultMap[? "asc2"]))
                    /*if resultMap[? "asc3"]*/ ds_grid_set(obj_planetary.planetary,233,resultMap[? "id"],real(resultMap[? "asc3"]))
                    /*if resultMap[? "asc4"]*/ ds_grid_set(obj_planetary.planetary,234,resultMap[? "id"],real(resultMap[? "asc4"]))
                    /*if resultMap[? "asc5"]*/ ds_grid_set(obj_planetary.planetary,235,resultMap[? "id"],real(resultMap[? "asc5"]))
                    /*if resultMap[? "asc6"]*/ ds_grid_set(obj_planetary.planetary,236,resultMap[? "id"],real(resultMap[? "asc6"]))
                    /*if resultMap[? "asc7"]*/ ds_grid_set(obj_planetary.planetary,237,resultMap[? "id"],real(resultMap[? "asc7"]))
                    /*if resultMap[? "o"]*/ ds_grid_set(obj_planetary.planetary,32,resultMap[? "id"],real(resultMap[? "o"]))
                    /*if resultMap[? "t"]*/ ds_grid_set(obj_planetary.planetary,37,resultMap[? "id"],real(resultMap[? "t"]))
                    /*if resultMap[? "d"]*/ ds_grid_set(obj_planetary.planetary,38,resultMap[? "id"],real(resultMap[? "d"]))
                                            //ds_grid_set(obj_planetary.planetary,89,resultMap[? "id"],real(resultMap[? "at0"]))//shield bonus
                                            ds_grid_set(obj_planetary.planetary,101,resultMap[? "id"],real(resultMap[? "at0"]))//atk t0
                                            ds_grid_set(obj_planetary.planetary,102,resultMap[? "id"],real(resultMap[? "at2"]))//atk t2
                                            ds_grid_set(obj_planetary.planetary,103,resultMap[? "id"],real(resultMap[? "at3"]))//atk t3
                                            ds_grid_set(obj_planetary.planetary,104,resultMap[? "id"],real(resultMap[? "at4"]))//atk t4
                                            ds_grid_set(obj_planetary.planetary,105,resultMap[? "id"],real(resultMap[? "at5"]))//atk t5
                                            ds_grid_set(obj_planetary.planetary,106,resultMap[? "id"],real(resultMap[? "at6"]))//atk t6
                                            ds_grid_set(obj_planetary.planetary,242,resultMap[? "id"],real(resultMap[? "g"]))//guild
                                            ds_grid_set(obj_planetary.planetary,291,resultMap[? "id"],real(resultMap[? "p"]))//guild
                                            //show_debug_message(ds_grid_get(obj_planetary.planetary,242,resultMap[? "id"]));
                    /*if resultMap[? "dn"]*/ global.dateNow = resultMap[? "dn"]
                    if !is_undefined(resultMap[? "t0"]) ds_grid_set(obj_planetary.planetary,72,resultMap[? "id"],real(resultMap[? "t0"]))
                    //if !is_undefined(resultMap[? "t2"]) 
                    if !is_undefined(resultMap[? "t3"]) ds_grid_set(obj_planetary.planetary,89,resultMap[? "id"],real(resultMap[? "t3"]))
                    if !is_undefined(resultMap[? "t4"]) ds_grid_set(obj_planetary.planetary,75,resultMap[? "id"],real(resultMap[? "t4"]))
                    //if !is_undefined(resultMap[? "t5"]) 
                    if !is_undefined(resultMap[? "t6"]) ds_grid_set(obj_planetary.planetary,74,resultMap[? "id"],real(resultMap[? "t6"]))
                    global.resultMapId = real(resultMap[? "id"])
                    if !is_undefined(resultMap[? "gift"]){
                        gift = real(resultMap[? "gift"])*1000000
                        //show_debug_message(gift);
                        ds_grid_add(obj_planetary.planetary,35,0,gift) 
                        ds_grid_add(obj_planetary.planetary,90,0,gift/9)
                        ds_grid_add(obj_planetary.planetary,91,0,gift/9)
                        ds_grid_add(obj_planetary.planetary,92,0,gift/9)
                        ds_grid_add(obj_planetary.planetary,93,0,gift/9)
                        ds_grid_add(obj_planetary.planetary,94,0,gift/9)
                        ds_grid_add(obj_planetary.planetary,95,0,gift/9)
                        ds_grid_add(obj_planetary.planetary,96,0,gift/9)
                        ds_grid_add(obj_planetary.planetary,97,0,gift/9)
                        ds_grid_add(obj_planetary.planetary,98,0,gift/9)
                        with(obj_planetary){scr_save();}
                    }
                    if is_undefined(resultMap[? "aopsc2"]){}else{
                            maxSendShipTravel = 0
                        for (var i = 0; i &lt; 5; i += 1)
                        {
                            global.il = i;
                            if i = 0 {shipCatCreate = resultMap[? "aopsc2"]}
                            if i = 1 {shipCatCreate = resultMap[? "aopsc3"]}
                            if i = 2 {shipCatCreate = resultMap[? "aopsc4"]}
                            if i = 3 {shipCatCreate = resultMap[? "aopsc5"]}
                            if i = 4 {shipCatCreate = resultMap[? "aopsc6"]}
                            if i = 5 {shipCatCreate = resultMap[? "aopsc7"]}
                            for (i2 = 0; i2 &lt; shipCatCreate; i2 += 1)
                                {
                                    maxSendShipTravel += 1
                                    if maxSendShipTravel &lt; 500 {
                                        with(instance_create(x,y,obj_shipcommerce)){
                                            modenew = global.il+2
                                            fuyard = 1
                                            partir = 2
                                            planetparent = global.resultMapId
                                            colorshiprgb = ds_grid_get(obj_planetary.planetary,30,planetparent)
                                            colorship = ds_grid_get(obj_planetary.planetary,32,planetparent);enemy = 0
                                            vardist = ds_grid_get(obj_planetary.planetary,39,planetparent)
                                            alarm[0] = (3000/(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/100)))*(1+(20/50))
                                            alarm[1] = 1
                                            alarm[3] = 4
                                            alarm[7] = 5000
                                            rotaaleatdecol = random(360)
                                            trace = 5
                                            plusdecol = random_range(2000,2500)*obj_planetary.optiportabletaille
                                            xx = room_width/2+lengthdir_x(random_range(1400,1800)*obj_planetary.optiportabletaille,rotaaleatdecol)
                                            yy = room_height/2+lengthdir_y(random_range(1400,1800)*obj_planetary.optiportabletaille,rotaaleatdecol)
                                            vargetdsgrid[1] = ds_grid_get(obj_planetary.planetary,51,planetparent)
                                            vargetdsgrid[2] = ds_grid_get(obj_planetary.planetary,34,planetparent)
                                            vargetdsgrid[3] = ((ds_grid_get(obj_planetary.planetary,7,planetparent)/25)*obj_planetary.optiportabletaille)
                                            vargetdsgrid[4] = ds_grid_get(obj_planetary.planetary,32,planetparent)
                                        }
                                    }else{break;}
                                }
                            
                        }
                        
                    }
                    
                    if resultMap[? "lts"] != "" &amp;&amp; resultMap[? "lts"] != "none" &amp;&amp; !is_undefined(resultMap[? "lts"]) {
                        global.lts = resultMap[? "lts"]
                    }else if resultMap[? "lts"] = "" or resultMap[? "lts"] = "none" {
                        global.lts = "none|"
                    }
                    if resultMap[? "lfs"] != "" &amp;&amp; resultMap[? "lfs"] != "none" &amp;&amp; !is_undefined(resultMap[? "lfs"]){
                        global.lfs = resultMap[? "lfs"]
                    }else if resultMap[? "lfs"] = "" or resultMap[? "lfs"] = "none" {
                        global.lfs = "none|"
                    }
                    
                    
                    
                    /*var count = string_count("|",str);
                    var str2 = string_split("|",str,true);
                    
                    for(var i=0; i&lt;count+1; i+=1)
                    {
                    var count2 = string_count("-",str3[i]);
                    var str4 = string_split("-",str3[i],false);
                    for(var i=0; i&lt;count; i+=1)
                    {
                        str3[i+1] = str2[i];
                    } 
                    }*/
                    //show_debug_message(resultMap[? "tsl"]);
                    if resultMap[? "tsl"]{
                        for (i = 0; i &lt; 20; i += 1)
                        {
                        obj_planetary.listPlanetOwned[i] = -1
                        }
                        obj_planetary.scoresciencevalid = resultMap[? "tsl"];
                        for (var i = array_length_1d(obj_planetary.listPlanetOwned) - 1; i &gt; -1; i--;)
                        {
                           obj_planetary.listPlanetOwned[i] = -1;
                        }
                        i2 = 1;
                        for (i = 1; i &lt; 500; i += 1)
                        {
                            if(resultMap[? string(i)]){//show_debug_message(i);
                                ds_grid_set(obj_planetary.planetary,32,i,global.idfixe);
                                obj_planetary.listPlanetOwned[i2] = i
                                i2 += 1;
                                
                                
                            }
                        }
                    }
                    varshipattack = real(resultMap[? "asc1"])+real(resultMap[? "asc2"])+real(resultMap[? "asc3"])+real(resultMap[? "asc4"])+real(resultMap[? "asc5"])+real(resultMap[? "asc6"])+real(resultMap[? "asc7"]);
                    if(resultMap[? "ua"] == 1){
                        ds_grid_set(obj_planetary.planetary,51,resultMap[? "id"],0)
                        ds_grid_set(obj_planetary.planetary,52,resultMap[? "id"],varshipattack)
                    }else{//show_debug_message(date_current_datetime());
                        ds_grid_set(obj_planetary.planetary,51,resultMap[? "id"],-floor(real(resultMap[? "dba"])/1000))
                        ds_grid_set(obj_planetary.planetary,52,resultMap[? "id"],varshipattack)
                    }
                    if(!is_undefined(resultMap[? "on"])){
                        ds_grid_set(obj_planetary.planetary,230,resultMap[? "id"],resultMap[? "on"])
                    }
                    
                    if(!is_undefined(resultMap[? "score"])){//show_debug_message(resultMap[? "score"])
                        obj_highscore.text2 = resultMap[? "score"];
                    }
                    
                    
                    
                    ds_grid_set(obj_planetary.planetary,35,resultMap[? "id"],real(resultMap[? "r"]))
                    ressourcevar = floor(ds_grid_get(obj_planetary.planetary,35,resultMap[? "id"])/9)
                    
                    if ressourcevar &gt; 0 {}else{ressourcevar = 0}
                    ds_grid_set(obj_planetary.planetary,90,resultMap[? "id"],ressourcevar)
                    ds_grid_set(obj_planetary.planetary,91,resultMap[? "id"],ressourcevar)
                    ds_grid_set(obj_planetary.planetary,92,resultMap[? "id"],ressourcevar)
                    ds_grid_set(obj_planetary.planetary,93,resultMap[? "id"],ressourcevar)
                    ds_grid_set(obj_planetary.planetary,94,resultMap[? "id"],ressourcevar)
                    ds_grid_set(obj_planetary.planetary,95,resultMap[? "id"],ressourcevar)
                    ds_grid_set(obj_planetary.planetary,96,resultMap[? "id"],ressourcevar)
                    ds_grid_set(obj_planetary.planetary,97,resultMap[? "id"],ressourcevar)
                    ds_grid_set(obj_planetary.planetary,98,resultMap[? "id"],ressourcevar)
                //show_debug_message(ds_grid_get(obj_planetary.planetary,32,resultMap[? "id"]))
                //show_debug_message(ds_grid_get(obj_planetary.planetary,34,resultMap[? "id"]))
                
                
                    varship = ds_grid_get(obj_planetary.planetary,43,resultMap[? "id"])+
                    ds_grid_get(obj_planetary.planetary,44,resultMap[? "id"])+
                    ds_grid_get(obj_planetary.planetary,45,resultMap[? "id"])+
                    ds_grid_get(obj_planetary.planetary,46,resultMap[? "id"])+
                    ds_grid_get(obj_planetary.planetary,47,resultMap[? "id"])+
                    ds_grid_get(obj_planetary.planetary,48,resultMap[? "id"])+
                    ds_grid_get(obj_planetary.planetary,49,resultMap[? "id"])
                    ds_grid_set(obj_planetary.planetary,36,resultMap[? "id"],varship) 
                    
                    //DEFENSE
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 5 {ds_grid_set(obj_planetary.planetary,61,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,61,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 10 {ds_grid_set(obj_planetary.planetary,62,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,62,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 15 {ds_grid_set(obj_planetary.planetary,63,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,63,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 20 {ds_grid_set(obj_planetary.planetary,64,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,64,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 25 {ds_grid_set(obj_planetary.planetary,65,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,65,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 30 {ds_grid_set(obj_planetary.planetary,66,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,66,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 35 {ds_grid_set(obj_planetary.planetary,67,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,67,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 40 {ds_grid_set(obj_planetary.planetary,68,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,68,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 45 {ds_grid_set(obj_planetary.planetary,69,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,69,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 50 {ds_grid_set(obj_planetary.planetary,70,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,70,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 55 {ds_grid_set(obj_planetary.planetary,280,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,280,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 60 {ds_grid_set(obj_planetary.planetary,281,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,281,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 65 {ds_grid_set(obj_planetary.planetary,282,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,282,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 70 {ds_grid_set(obj_planetary.planetary,283,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,283,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 75 {ds_grid_set(obj_planetary.planetary,284,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,284,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 80 {ds_grid_set(obj_planetary.planetary,285,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,285,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 85 {ds_grid_set(obj_planetary.planetary,286,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,286,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 90 {ds_grid_set(obj_planetary.planetary,287,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,287,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt; 95 {ds_grid_set(obj_planetary.planetary,288,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,288,resultMap[? "id"],0)}
                    if ds_grid_get(obj_planetary.planetary,38,resultMap[? "id"]) &gt;= 100 {ds_grid_set(obj_planetary.planetary,289,resultMap[? "id"],1)}else{ds_grid_set(obj_planetary.planetary,289,resultMap[? "id"],0)}
                    
            
                }
            }
            ds_map_destroy(resultMap);
            
        
      
      }
   }
   
   
   
/*
text3 = string(ds_map_find_value(async_load, "result"));
       // show_message(text3)
        
        
if ds_map_find_value(async_load, "id") == get_highscores
{

    if ds_map_find_value(async_load, "status") == 0
    {
        text2 = string(ds_map_find_value(async_load, "result"));
        //show_message(text2)
        //show_debug_message(text2);
        if text2 == "IOException" or text2 == ""
        {
        //show_message("error")
            text = "Please check your internet connection...";
            text2 = "";
        }
        else
        {
        //show_message(text2)
            text = "Ready";
           // alarm[1] = -1;
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drawing the highscores if available
//draw_set_valign(fa_bottom);
//get_planet(obj_planetary.buildaffect);

/*if obj_planetary.menuplanet3 = 3 {}else{
if obj_planetary.guildchannel = 0 {obj_planetary.guildchannel = 1;if instance_exists(obj_highscore){with(obj_highscore){instance_destroy();}}}}*/

if obj_planetary.menuplanet = 3 {
if obj_planetary.menuplanet3 = 0 {
draw_set_colour(c_black);
//draw_set_font(fnt_poly);
/*if text == "Ready"
{
//show_message("ready")
alarm[2] = 10
    draw_text_highscore(0, 50, "line", "Name", "Score", string(text2), player_name, c_green,"RESS","SHIP","SCIENCE","DEF","guildname","guildid","guildinvit","grade");
}
else
{
    draw_text(room_width/2-110, 50, text);
}*/    
draw_text_highscore(0, 50, "line", "Name", "Score", string(text2), player_name, c_green,"RESS","SHIP","SCIENCE","DEF","guildname","guildid","guildinvit","grade");

}
if obj_planetary.menuplanet3 &gt; 0 {
draw_set_colour(c_black);
//draw_set_font(fnt_poly);
//if text == "Ready"
//{
//show_message("ready")
//alarm[2] = 10
if obj_planetary.menuplanet3 &gt; 0 {
//send_message("teststr",global.idfixe,floor(date_current_datetime()*100000),global.idfixe,"",global.name,1)
//get_chat(global.idfixe,1);
}
    draw_text_chat(0, 50,string(textChat));
/*}
else
{
    draw_text(room_width/2-110, 50, text);
}*/
}
}else{

//if alarm[2] &lt; 0 {
draw_set_colour(c_white);
//draw_set_font(fnt_poly);
if text == "Ready" //&amp;&amp; alarm[1] &lt; 0 
{
//show_message("ready")

   // draw_text_planet(0, 50, "id", "alarmatk", "flotteatk", string(text2), player_name, c_green,"idatk","date","ress","type1","type2","type3","type4","type5","type6","type7","science","def");

var xx = 0;
var str = string(text2);
var yy = 50;
var idstr = "id";
var name = "alarmatk";
var obj1 = "flotteatk";
//var obj2 = string(text2);
var obj3 = player_name;
var colour = c_green;
var obj4 = "idatk";
var obj5 = "date";
var obj6 = "ress";
var obj7 = "typea";
var obj8 = "typeb";
var obj9 = "typec";
var obj10 = "typed";
var obj11 = "typee";
var obj12 = "typef";
var obj13 = "typeg";
var obj14 = "science";
var obj15 = "def";
var obj16 = "idnow";
var obj17 = "idname";
//var obj17 = "idname";
//var obj17 = "idname";
var obj20 = "varress";
var obj21 = "varship";
var obj22 = "varscience";
var obj23 = "vardef";
var obj24 = "idguildname";
var obj25 = "idguild";


// Initialise the drawing by splitting up the text
var def_color = draw_get_colour();
var count = string_count("|",str);
var str2 = string_split("|",str,true);
var str3,str3a,str3b,str3c,str3d,str3e,str3f,str3g,str3h,str3i,str3j,str3k,str3l,str3m,str3n,str3o,str3p,str3q,str3r,str3s,str3t,str3u,str3v,str3w;
str3[0] = string(idstr)+".-"+string(name)+"-"+string(obj1)
+"-"+string(obj4)+"-"+string(obj5)+"-"+string(obj6)+"-"+string(obj7)//fin de l ancien
+"-"+string(obj8)+"-"+string(obj9)+"-"+string(obj10)+"-"+string(obj11)
+"-"+string(obj12)+"-"+string(obj13)+"-"+string(obj14)+"-"+string(obj15)
+"-"+string(obj16)+"-"+string(obj17)+"-"+string(obj20)+"-"+string(obj21)
+"-"+string(obj22)+"-"+string(obj23)+"-"+string(obj24)+"-"+string(obj25)
+"-"+string(obj25)+"-"+string(obj25);
for(var i=0; i&lt;count; i+=1)
{

    str3[i+1] = str2[i];
} 

// Setting some parameters, if you wish, you can change them to values you think are convenient.
var height = 0;


// Splitting up the text into a part with the number (3a), the name (3b) and the score (3c)
// Currently, the return is encoded by Nr.-Name-Score

for(var i=0; i&lt;count+1; i+=1)
{

 
    var str4 = string_split("-",str3[i],false);
    txt3a[i] = str4[0];
    txt3b[i] = str4[1]; 
    txt3c[i] = str4[2];
    //rajouter
    txt3d[i] = str4[3];
    txt3e[i] = str4[4];
    txt3f[i] = str4[5];
    txt3g[i] = str4[6];
    
    txt3h[i] = str4[7];
    txt3i[i] = str4[8];
    txt3j[i] = str4[9];
    txt3k[i] = str4[10];
    txt3l[i] = str4[11];
    txt3m[i] = str4[12];
    txt3n[i] = str4[13];
    txt3o[i] = str4[14];
    txt3p[i] = str4[15];
    
    txt3q[i] = str4[16];
    txt3r[i] = str4[17];
    txt3s[i] = str4[18];
    txt3t[i] = str4[19];
    txt3u[i] = str4[20];
    
    txt3v[i] = str4[21];
    txt3w[i] = str4[22];
    ///GLOBAL RECUP
    if str4[0] = 0 or str4[0] = "" or str4[0] = "id." {}else{ global.recup1 = str4[0];cnt = string_length(global.recup1);global.recup1 = string_delete(global.recup1,cnt,1);
    
    }
    if str4[1] = 0 or str4[1] = "" or str4[1] = "alarmatk" {}else{ global.recup2 = str4[1];} 
    if str4[2] = 0 or str4[2] = "" or str4[2] = "flotteatk"  {}else{ global.recup3 = str4[2];}
    //rajouter
    if str4[3] = 0 or str4[3] = "" or str4[3] = "idatk"  {}else{ global.recup4 = str4[3];}
    if str4[4] = 0 or str4[4] = "" or str4[4] = "date"  {}else{ global.recup5 = str4[4];}
    if str4[5] = 0 or str4[5] = "" or str4[5] = "ress"  {}else{ global.recup6 = str4[5];}
    if str4[6] = 0 or str4[6] = "" or str4[6] = "typea"  {}else{ global.recup7 = str4[6];}
    
    if str4[7] = 0 or str4[7] = "" or str4[7] = "typeb"  {}else{ global.recup8 = str4[7];}
    if str4[8] = 0 or str4[8] = "" or str4[8] = "typec"  {}else{ global.recup9 = str4[8];}
    if str4[9] = 0 or str4[9] = "" or str4[9] = "typed"  {}else{ global.recup10 = str4[9];}
    if str4[10] = 0 or str4[10] = "" or str4[10] = "typee"  {}else{ global.recup11 = str4[10];}
    if str4[11] = 0 or str4[11] = "" or str4[11] = "typef"  {}else{ global.recup12 = str4[11];}
    if str4[12] = 0 or str4[12] = "" or str4[12] = "typeg"  {}else{ global.recup13 = str4[12];}
    if str4[13] = 0 or str4[13] = "" or str4[13] = "science"  {}else{ global.recup14 = str4[13];}
    if str4[14] = 0 or str4[14] = "" or str4[14] = "def"  {}else{ global.recup15 = str4[14];}
    if str4[15] = 0 or str4[15] = "" or str4[15] = "idnow"  {}else{ global.recup16 = str4[15];}
    
    if str4[16] = 0 or str4[16] = "" or str4[16] = "idname"  {}else{ global.recup17 = str4[16];}
    if str4[17] = 0 or str4[17] = "" or str4[17] = "varress"  {}else{ global.recup18 = str4[17];}
    if str4[18] = 0 or str4[18] = "" or str4[18] = "varship"  {}else{ global.recup19 = str4[18];}
    if str4[19] = 0 or str4[19] = "" or str4[19] = "varscience"  {}else{ global.recup20 = str4[19];}
    if str4[20] = 0 or str4[20] = "" or str4[20] = "vardef"  {}else{ global.recup21 = str4[20];}
    if str4[21] = 0 or str4[21] = "" or str4[21] = "idguildname"  {}else{ global.recup23 = str4[21];}
    if str4[22] = 0 or str4[22] = "" or str4[22] = "idguild"  {}else{ global.recup24 = str4[22];}
    
 


}
txt3a[0] = "";

//if alarm[3] &lt; 0 {

with(obj_planetary){if buildaffect2 = 0 {}else{scr_datephp();


}

//if buildaffect = 100 {show_message(buildaffect)}
}
//if real(global.recup1) = 0 or real(global.recup1) = "" or real(global.recup1) = "id." {}else{

        //show_message(real(global.recup1))
        //show_message(obj_planetary.buildaffect)//}
        //if obj_planetary.buildaffect = obj_planetary.lastbuildaffect {
        
        //if alarm[4] &lt; 0 {alarm[4] = 1}
        
        
        if obj_planetary.planetnowid = obj_planetary.buildaffect2 &amp;&amp; alarm[7] &gt; 0 {}else{
        if obj_planetary.echelle = 0 &amp;&amp; obj_planetary.planetnowid &gt; 0 {
        obj_planetary.buildaffect2 = obj_planetary.planetnowid
        alarm[7] = 500
        get_planet(obj_planetary.buildaffect2);
        }}
        
        //instance_destroy();
        if obj_planetary.buildaffect2 &gt;= 497 {
        global.phpload = 1
        }
        
        text = "playrs list bug";
        //instance_create(x,y,obj_highscore)
        //instance_destroy();
        //}

//alarm[3] = 1}
    }
else
{
    //draw_text(room_width/2-110, 50, text);
}
//}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
