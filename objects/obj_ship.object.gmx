<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ship</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Decolage
scienceflotte = 1
colonisateur = 0
clickquit = 0
plusdecol = 0
toutcequeturate = 1
rotaaleatdecol = random(360)
vardist = 0
planetparent = 0
enemy = 0
eventenemy = 0
randomize();
coter = choose(1,2,3,4)
alarm[2] = 3
alarm[5] = 1
alarm[9] = random_range(1300,1700)
alarm[6] = random_range(700,1200)
i2 = 0
mode = 1
colorship = 0
hpshield = 500
stationaire = 0
modeplus = 0
suislepatron = 0
partir = 0
destinationship = 0
type = 0
xxcursor = 0
yycursor = 0
particlelife = 1
xxdecol = 0
yydecol = 0
createtp = 0
vargetdsgrid[1] = 0
vargetdsgrid[2] = 0
vargetdsgrid[3] = 0
vargetdsgrid[4] = 0
vargetdsgrid[5] = 0
vargetdsgrid[6] = 0
vargetdsgrid[7] = 0
vargetdsgrid[8] = 0
soute = 0
dgt = 1
cible = 0
trace = 1
tracelerp = 1

alarm[8] = random_range(1,10)
objprocheid[1] = 0
    objprocheid[2] = 0
    objprocheid[3] = 0
    objprocheid[4] = 0
    objprocheid[5] = 0
    objprocheid[6] = 0
    objprocheid[7] = 0
    objprocheid[8] = 0
    objprocheid[9] = 0
    objprocheid[10] = 0
    objprocheid[11] = 0

alarmshootvar = 3
if mode = 1 {
hp = 30
vitesseship = random_range(0.5,1)
accellerationship = 0.009
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red
distdetir = 250}
attakguy = 0
alarm[4] = 1


if mode = 2 {
hp = 50
vitesseship = random_range(0.5,1)
accellerationship = 0.012
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red}
if mode = 3 {
hp = 70
vitesseship = random_range(0.7,1.2)
accellerationship = 0.009
vitessedetir = 10
tourelleauto = 2}
if mode = 4 {
hp = 210
vitesseship = random_range(0.3,0.5)
accellerationship = 0.005
vitessedetir = 10
tourelleauto = 3
colorshoot = c_red}
if mode = 5 {
hp = 550
vitesseship = random_range(0.2,0.4)
accellerationship = 0.001
vitessedetir = 10
tourelleauto = 10
colorshoot = c_red}
hp = 350
distenemy = 30000
dir = 0

if coter = 1 {xx = random_range(0,room_width);yy = 0}
if coter = 2 {xx = random_range(0,room_width);yy = room_height}
if coter = 3 {xx = 0;yy = random_range(0,room_height)}
if coter = 4 {xx = room_width;yy = random_range(0,room_height)}
xx2 = 0
yy2 = 0

image_xscale = 0
image_yscale = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//remet les ship au sol
//if partir = 0 {
/*if ds_grid_get(obj_planetary.planetary,53,planetparent) &gt; 0 {// ds_grid_get(obj_planetary.planetary,53,planetparent) {
if enemy = ds_grid_get(obj_planetary.planetary,32,planetparent) {
ds_grid_add(obj_planetary.planetary,53,planetparent,-1)
ds_grid_add(obj_planetary.planetary,53+type,planetparent,-1)

}else if enemy = 0 {ds_grid_add(obj_planetary.planetary,53,planetparent,-1)

}
}*/
//show_debug_message(planetparent);
//show_debug_message(enemy);
if hp &lt;= 0 {
    if planetparent != 0 {
        //attaquant
        if ds_grid_get(obj_planetary.planetary,34,planetparent) = global.idfixe {
            with(obj_highscore){
                var hiscore_map, i, str;
                hiscore_map = ds_map_create();
                ds_map_set(hiscore_map,'cat', other.type);
                ds_map_set(hiscore_map,'owner', other.enemy);
                ds_map_set(hiscore_map,'id', other.planetparent);
                ds_map_set(hiscore_map,'cu', global.idfixe);
                str = json_encode(hiscore_map);
                ds_map_destroy(hiscore_map); 
                post = http_post_string("http://localhost:3000/universe/deleteship" , str);
            }
            //defensseur
        }else if ds_grid_get(obj_planetary.planetary,32,planetparent) = global.idfixe or ds_grid_get(obj_planetary.planetary,32,planetparent) &lt; 7 or ds_grid_get(obj_planetary.planetary,34,planetparent) &lt; 7  {
            with(obj_highscore){
                var hiscore_map, i, str;
                hiscore_map = ds_map_create();
                ds_map_set(hiscore_map,'cat', other.type);
                ds_map_set(hiscore_map,'owner', other.enemy);
                ds_map_set(hiscore_map,'id', other.planetparent);
                str = json_encode(hiscore_map);
                ds_map_destroy(hiscore_map); 
                post = http_post_string("http://localhost:3000/universe/deleteship" , str);
            }
        }
    }
if enemy = ds_grid_get(obj_planetary.planetary,32,planetparent) {
if planetparent = obj_planetary.planetnowid {scr_addinfo2(1,7+type,planetparent)}}
repeat(1+(type*2)){
with(instance_create(
xx+random_range((-25*type)*obj_planetary.optiportabletaille,(25*type)*obj_planetary.optiportabletaille),
yy+random_range((-25*type)*obj_planetary.optiportabletaille,(25*type)*obj_planetary.optiportabletaille),obj_debris)){
size = random_range(0.3,0.5)*(1+(other.type/10))
angle = random(360)
dist = (point_distance(room_width/2,room_height/2,other.x,other.y)+random_range(-20*other.type,20*other.type))/obj_planetary.optiportabletaille
rotaplanet = (point_direction(room_width/2,room_height/2,other.x,other.y)+random_range(-1*other.type,1*other.type))-obj_planetary.rotaplanet
vitangle = random_range(0.5,1.5)
c = choose(1,2)
sub = choose(0,1,2,3,4,5)
planetparent = other.planetparent
}
}
}else{
if soute &gt; 0 and planetparent = 0{
if enemy = ds_grid_get(obj_planetary.planetary,32,planetparent) {
ds_grid_add(obj_planetary.planetary,35,planetparent,floor((soute*100)*8))
ds_grid_add(obj_planetary.planetary,90,planetparent,floor((soute*100)))
ds_grid_add(obj_planetary.planetary,91,planetparent,floor((soute*100)))
ds_grid_add(obj_planetary.planetary,92,planetparent,floor((soute*100)))
ds_grid_add(obj_planetary.planetary,93,planetparent,floor((soute*100)))
ds_grid_add(obj_planetary.planetary,94,planetparent,floor((soute*100)))
ds_grid_add(obj_planetary.planetary,95,planetparent,floor((soute*100)))
ds_grid_add(obj_planetary.planetary,96,planetparent,floor((soute*100)))
ds_grid_add(obj_planetary.planetary,97,planetparent,floor((soute*100)))
ds_grid_add(obj_planetary.planetary,98,planetparent,floor((soute*100)))}
}}


if partir = 4 {}else{
//si defensseur basique
if enemy = ds_grid_get(obj_planetary.planetary,32,planetparent) or enemy = 0 {
if ds_grid_get(obj_planetary.planetary,53+type,planetparent) &gt; 0 {
ds_grid_add(obj_planetary.planetary,53+type,planetparent,-1)
ds_grid_add(obj_planetary.planetary,53,planetparent,-1)}
//si attaquant et joueur //suprimer des vaisseau de mere
}else if enemy = ds_grid_get(obj_planetary.planetary,34,planetparent) &amp;&amp; enemy = global.idfixe {
//if type = 1 or type = 2 {
if ds_grid_get(obj_planetary.planetary,53+type,0) &gt; 0 {
ds_grid_add(obj_planetary.planetary,53+type,0,-1)
ds_grid_add(obj_planetary.planetary,53,0,-1)}//}
}
}


//}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ROCKET
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TROP LONGTEMPS QUE T LA
if enemy = ds_grid_get(obj_planetary.planetary,32,planetparent) {}else{
//instance_destroy();
}
//if enemy = ds_grid_get(obj_planetary.planetary,34,planetparent) {hp = 1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///alarm DS_GET OPTI
vargetdsgrid[1] = ds_grid_get(obj_planetary.planetary,51,planetparent)
vargetdsgrid[2] = ds_grid_get(obj_planetary.planetary,34,planetparent)
vargetdsgrid[3] = ((ds_grid_get(obj_planetary.planetary,7,planetparent)/25)*obj_planetary.optiportabletaille)
vargetdsgrid[4] = ds_grid_get(obj_planetary.planetary,32,planetparent)

if obj_planetary.planetnowid = planetparent {
alarm[8] = 1}else{
alarm[8] = random_range(1,20)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///partir
if partir = 3 {ds_grid_add(obj_planetary.planetary,42+type,destinationship,1)
ds_grid_add(obj_planetary.planetary,42+type,planetparent,-1)
if obj_info.alarm[2] &lt; 0 {obj_info.alarm[2] = 30
scr_addinfo(ds_grid_get(obj_planetary.planetary,8,planetparent),7,planetparent)}
}
//JOUEUR
if partir = 5 {if global.phpload = 1 {

ds_grid_add(obj_planetary.planetary,42+type,destinationship,1)
ds_grid_add(obj_planetary.planetary,42+type,planetparent,-1)
if obj_info.alarm[2] &lt; 0 {//obj_info.alarm[2] = 30
//scr_addinfo(ds_grid_get(obj_planetary.planetary,8,planetparent),7,planetparent)
}
obj_planetary.alarm[8] = 3
if type = 1 {obj_planetary.sendship1 += 1}
if type = 2 {obj_planetary.sendship2 += 1}
if type = 3 {obj_planetary.sendship3 += 1}
if type = 4 {obj_planetary.sendship4 += 1}
if type = 5 {obj_planetary.sendship5 += 1}
if type = 6 {obj_planetary.sendship6 += 1}
if type = 7 {obj_planetary.sendship7 += 1}
obj_planetary.sendplanetparent = destinationship}
}
instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///STATIONAIRE FIN
stationaire = 0


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///demarage retard pour eviter bug
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEMARAGE MODE

//alarm[4] = random_range(1,obj_planetary.nbrdobjship)
if enemy =  ds_grid_get(obj_planetary.planetary,34,planetparent) {
scienceflotte = ds_grid_get(obj_planetary.planetary,240,planetparent)}else{
scienceflotte = ds_grid_get(obj_planetary.planetary,37,planetparent)
}
if scienceflotte &lt; 1 {scienceflotte = 1}else if scienceflotte &gt; 100 {scienceflotte = 100}
 vargetdsgrid[5] = ds_grid_get(obj_planetary.planetary,72,planetparent)
vargetdsgrid[6] = ds_grid_get(obj_planetary.planetary,73,planetparent)
vargetdsgrid[7] = (1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vargetdsgrid[8] = ds_grid_get(obj_planetary.planetary,75,planetparent)

if enemy = 2 or enemy = 1 or enemy = 3 or enemy = 4 {
if mode &gt; 5 {mode = 5}
}

if enemy = ds_grid_get(obj_planetary.planetary,34,planetparent) {//attaquant
modeplus = (ds_grid_get(obj_planetary.planetary,34,planetparent)-1)*5
}else if enemy = ds_grid_get(obj_planetary.planetary,32,planetparent) {//defensseur
modeplus = (ds_grid_get(obj_planetary.planetary,32,planetparent)-1)*5
}else if enemy = 0 {
modeplus = (ds_grid_get(obj_planetary.planetary,32,planetparent)-1)*5
}




if modeplus &gt; 30 {

}else{
mode += modeplus}



if mode = 1 {particlelife = 0.2
type = 1
hp = 10
dgt = 1
if enemy &gt; 0  {
hp = (10*(vargetdsgrid[6]/25))
dgt = (1*(vargetdsgrid[5]/25))
vitesseship = random_range(0.5,1)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}

vitesseship = random_range(0.5,1)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red
distdetir = 250}
if mode = 2 {particlelife = 0.3
type = 2
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (30*(vargetdsgrid[6]/25))
dgt = (2*(vargetdsgrid[5]/25))
vitesseship = random_range(0.5,1)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.012*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 30
dgt = 2
vitesseship = random_range(0.5,1)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.012*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red}
if mode = 3 {particlelife = 0.7
type = 3
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (50*(vargetdsgrid[6]/25))
dgt = (3*(vargetdsgrid[5]/25))
vitesseship = random_range(0.7,1.2)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 50
dgt = 3
vitesseship = random_range(0.7,1.2)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 2}
if mode = 4 {particlelife = 1
type = 4
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (220*(vargetdsgrid[6]/25))
dgt = (4*(vargetdsgrid[5]/25))
vitesseship = random_range(0.3,0.5)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.005*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 220
dgt = 4
vitesseship = random_range(0.3,0.5)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.005*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 3
colorshoot = c_red}
if mode = 5 {particlelife = 1.3
type = 5
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (550*(vargetdsgrid[6]/25))
dgt = (5*(vargetdsgrid[5]/25))
vitesseship = random_range(0.2,4)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.001*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 550
dgt = 5
vitesseship = random_range(0.2,0.4)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.001*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 10
colorshoot = c_red}

//dominion
if mode = 6 {particlelife = 0.2
type = 1
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (10*(vargetdsgrid[6]/25))
dgt = (1*(vargetdsgrid[5]/25))
vitesseship = random_range(0.5,1)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 10
dgt = 1
vitesseship = random_range(0.5,1)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red
distdetir = 250}
if mode = 7 {particlelife = 0.3
type = 2
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (30*(vargetdsgrid[6]/25))
dgt = (2*(vargetdsgrid[5]/25))
vitesseship = random_range(0.5,1)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.012*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 30
dgt = 2
vitesseship = random_range(0.5,1)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.012*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red}
if mode = 8 {particlelife = 0.7
type = 3
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (50*(vargetdsgrid[6]/25))
dgt = (3*(vargetdsgrid[5]/25))
vitesseship = random_range(0.7,1.2)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 50
dgt = 3
vitesseship = random_range(0.7,1.2)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 2}
if mode = 9 {particlelife = 1
type = 4
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (220*(vargetdsgrid[6]/25))
dgt = (4*(vargetdsgrid[5]/25))
vitesseship = random_range(0.3,0.5)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.005*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 220
dgt = 4
vitesseship = random_range(0.3,0.5)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.005*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 3
colorshoot = c_red}
if mode = 10 {particlelife = 1.3
type = 5
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (550*(vargetdsgrid[6]/25))
dgt = (5*(vargetdsgrid[5]/25))
vitesseship = random_range(0.2,4)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.001*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 550
dgt = 5
vitesseship = random_range(0.2,0.4)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.001*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 10
colorshoot = c_red}

//alien hostile
if mode = 11 {particlelife = 0.2
type = 1
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (10*(vargetdsgrid[6]/25))
dgt = (1*(vargetdsgrid[5]/25))
vitesseship = random_range(0.5,1)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 10
dgt = 1
vitesseship = random_range(0.5,1)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red
distdetir = 250}
if mode = 12 {particlelife = 0.3
type = 2
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (30*(vargetdsgrid[6]/25))
dgt = (2*(vargetdsgrid[5]/25))
vitesseship = random_range(0.5,1)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.012*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 30
dgt = 2
vitesseship = random_range(0.5,1)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.012*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red}
if mode = 13 {particlelife = 0.7
type = 3
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (50*(vargetdsgrid[6]/25))
dgt = (3*(vargetdsgrid[5]/25))
vitesseship = random_range(0.7,1.2)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 50
dgt = 3
vitesseship = random_range(0.7,1.2)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 2}
if mode = 14 {particlelife = 1
type = 4
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (220*(vargetdsgrid[6]/25))
dgt = (4*(vargetdsgrid[5]/25))
vitesseship = random_range(0.3,0.5)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.005*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 220
dgt = 4
vitesseship = random_range(0.3,0.5)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.005*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 3
colorshoot = c_red}
if mode = 15 {particlelife = 1.3
type = 5
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (550*(vargetdsgrid[6]/25))
dgt = (5*(vargetdsgrid[5]/25))
vitesseship = random_range(0.2,4)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.001*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 550
dgt = 5
vitesseship = random_range(0.2,0.4)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.001*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 10
colorshoot = c_red}

//alien passif
if mode = 16 {particlelife = 0.2
type = 1
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (10*(vargetdsgrid[6]/25))
dgt = (1*(vargetdsgrid[5]/25))
vitesseship = random_range(0.5,1)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 10
dgt = 1
vitesseship = random_range(0.5,1)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red
distdetir = 250}
if mode = 17 {particlelife = 0.3
type = 2
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (30*(vargetdsgrid[6]/25))
dgt = (2*(vargetdsgrid[5]/25))
vitesseship = random_range(0.5,1)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.012*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 30
dgt = 2
vitesseship = random_range(0.5,1)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.012*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red}
if mode = 18 {particlelife = 0.7
type = 3
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (50*(vargetdsgrid[6]/25))
dgt = (3*(vargetdsgrid[5]/25))
vitesseship = random_range(0.7,1.2)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 50
dgt = 3
vitesseship = random_range(0.7,1.2)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 2}
if mode = 19 {particlelife = 1
type = 4
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (220*(vargetdsgrid[6]/25))
dgt = (4*(vargetdsgrid[5]/25))
vitesseship = random_range(0.3,0.5)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.005*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 220
dgt = 4
vitesseship = random_range(0.3,0.5)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.005*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 3
colorshoot = c_red}
if mode = 20 {particlelife = 1.3
type = 5
if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy or enemy = global.idfixe {
hp = (550*(vargetdsgrid[6]/25))
dgt = (5*(vargetdsgrid[5]/25))
vitesseship = random_range(0.2,0.4)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.001*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))}
hp = 550
dgt = 5
vitesseship = random_range(0.2,0.4)*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.001*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 10
colorshoot = c_red}

//SUPER SHIP
if enemy &gt; 5 {
if mode = 6 {
particlelife = 1.3
type = 6
hp = (7050*(1+(scienceflotte/100)))
dgt = (8*(1+(scienceflotte/100)))
vitesseship = random_range(0.4,0.5)*(1+(scienceflotte/100))
accellerationship = 0.0022*(1+(scienceflotte/100))
vitessedetir = 10
tourelleauto = 8
colorshoot = c_red
}

if mode = 7 {
particlelife = 1.3
type = 7
hp = (10050*(1+(scienceflotte/100)))
dgt = (8*(1+(scienceflotte/100)))
vitesseship = random_range(0.4,0.5)*(1+(scienceflotte/100))
accellerationship = 0.0025*(1+(scienceflotte/100))
vitessedetir = 10
tourelleauto = 10
colorshoot = c_red
}
}


//SUPER STAT



if type = 1 {

hp = (10*(1+(scienceflotte/100)))
dgt = (1*(1+(scienceflotte/100)))
vitesseship = random_range(0.6,0.8)*(1+(scienceflotte/100))
accellerationship = 0.009*(1+(scienceflotte/100))
}

if type = 2 {

hp = (30*(1+(scienceflotte/100)))
dgt = (2*(1+(scienceflotte/100)))
vitesseship = random_range(0.6,0.8)*(1+(scienceflotte/100))
accellerationship = 0.012*(1+(scienceflotte/100))
}

if type = 3 {
tourelleauto = 2
hp = (50*(1+(scienceflotte/100)))
dgt = (3*(1+(scienceflotte/100)))
vitesseship = random_range(0.7,0.9)*(1+(scienceflotte/100))
accellerationship = 0.009*(1+(scienceflotte/100))
}

if type = 4 {
tourelleauto = 3
hp = (220*(1+(scienceflotte/100)))
dgt = (4*(1+(scienceflotte/100)))
vitesseship = random_range(0.6,0.7)*(1+(scienceflotte/100))
accellerationship = 0.005*(1+(1+(scienceflotte/100)))
}

if type = 5 {
tourelleauto = 5
hp = (550*(1+(scienceflotte/100)))
dgt = (5*(1+(scienceflotte/100)))
vitesseship = random_range(0.5,0.6)*(1+(scienceflotte/100))
accellerationship = 0.003*(1+(scienceflotte/100))
}

//attaquant ET JOUEUR
if enemy = ds_grid_get(obj_planetary.planetary,34,planetparent) &amp;&amp; enemy = global.idfixe {
ds_grid_add(obj_planetary.planetary,53+type,0,1)
if ds_grid_get(obj_planetary.planetary,53+type,0) &gt;
 ds_grid_get(obj_planetary.planetary,42+type,0) {
 //instance_destroy();
 }

}
//defensseur
if enemy = ds_grid_get(obj_planetary.planetary,32,planetparent) {

if ds_grid_get(obj_planetary.planetary,53+type,planetparent) &gt;
 ds_grid_get(obj_planetary.planetary,42+type,planetparent) {
 instance_destroy();
 }else{ds_grid_add(obj_planetary.planetary,53+type,planetparent,1)
ds_grid_add(obj_planetary.planetary,53,planetparent,1)
}
 }
 
hpshield = hp 

alarm[9] += (type*75)



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CHANGE DE CIBLE

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MULTI SHOOT
if alarm[6] &lt; 0 &amp;&amp; enemy = ds_grid_get(obj_planetary,32,planetparent) {
}else{
if enemy = 0 {}else{
if tourelleauto &gt; 0 {
if instance_exists(obj_ship){

    if i2 &lt;= tourelleauto { i2 += 1}else{i2 = 1
    objprocheid[1] = 0
    objprocheid[2] = 0
    objprocheid[3] = 0
    objprocheid[4] = 0
    objprocheid[5] = 0
    objprocheid[6] = 0
    objprocheid[7] = 0
    objprocheid[8] = 0
    objprocheid[9] = 0
    objprocheid[10] = 0
    objprocheid[11] = 0
    
    with(obj_ship){
    if other.planetparent = planetparent {
    if other.enemy = enemy or enemy = 0
    or other.id = id 
    {}else{if  point_distance(xx,yy,other.xx,other.yy) &lt; 350*obj_planetary.optiportabletaille {
    if other.objprocheid[1] = 0 {other.objprocheid[1] = id}else
    if other.objprocheid[2] = 0 {other.objprocheid[2] = id}else
    if other.objprocheid[3] = 0 {other.objprocheid[3] = id}else
    if other.objprocheid[4] = 0 {other.objprocheid[4] = id}else
    if other.objprocheid[5] = 0 {other.objprocheid[5] = id}else
    if other.objprocheid[6] = 0 {other.objprocheid[6] = id}else
    if other.objprocheid[7] = 0 {other.objprocheid[7] = id}else
    if other.objprocheid[8] = 0 {other.objprocheid[8] = id}else
    if other.objprocheid[9] = 0 {other.objprocheid[9] = id}else
    if other.objprocheid[10] = 0 {other.objprocheid[10] = id}else
    if other.objprocheid[11] = 0 {other.objprocheid[11] = id}
    }}}}
    if instance_exists(obj_shipcommand){
    with(obj_shipcommand){
    if other.planetparent = planetparent {
    if other.enemy = enemy or enemy = 0
    or other.id = id 
    {}else{if  point_distance(xx,yy,other.xx,other.yy) &lt; 350*obj_planetary.optiportabletaille {
    if other.objprocheid[1] = 0 {other.objprocheid[1] = id}else
    if other.objprocheid[2] = 0 {other.objprocheid[2] = id}else
    if other.objprocheid[3] = 0 {other.objprocheid[3] = id}else
    if other.objprocheid[4] = 0 {other.objprocheid[4] = id}else
    if other.objprocheid[5] = 0 {other.objprocheid[5] = id}else
    if other.objprocheid[6] = 0 {other.objprocheid[6] = id}else
    if other.objprocheid[7] = 0 {other.objprocheid[7] = id}else
    if other.objprocheid[8] = 0 {other.objprocheid[8] = id}else
    if other.objprocheid[9] = 0 {other.objprocheid[9] = id}else
    if other.objprocheid[10] = 0 {other.objprocheid[10] = id}else
    if other.objprocheid[11] = 0 {other.objprocheid[11] = id}
    }}}}}
    
    if instance_exists(obj_defence){
    with(obj_defence){
    if other.planetparent = planetparent {
    if other.enemy = enemy or enemy = 0
    or other.id = id 
    {}else{if  point_distance(xx,yy,other.xx,other.yy) &lt; 350*obj_planetary.optiportabletaille {
    if other.objprocheid[1] = 0 {other.objprocheid[1] = id}else
    if other.objprocheid[2] = 0 {other.objprocheid[2] = id}else
    if other.objprocheid[3] = 0 {other.objprocheid[3] = id}else
    if other.objprocheid[4] = 0 {other.objprocheid[4] = id}else
    if other.objprocheid[5] = 0 {other.objprocheid[5] = id}else
    if other.objprocheid[6] = 0 {other.objprocheid[6] = id}else
    if other.objprocheid[7] = 0 {other.objprocheid[7] = id}else
    if other.objprocheid[8] = 0 {other.objprocheid[8] = id}else
    if other.objprocheid[9] = 0 {other.objprocheid[9] = id}else
    if other.objprocheid[10] = 0 {other.objprocheid[10] = id}else
    if other.objprocheid[11] = 0 {other.objprocheid[11] = id}
    }}}}}
    
    if obj_planetary.echelle = 0 {
    if planetparent = obj_planetary.planetnowid {
    if instance_exists(obj_turretmoon){
    with(obj_turretmoon){
    if other.planetparent = planetparent {
    if other.enemy = enemy or enemy = 0
    or other.id = id 
    {}else{if  point_distance(xx,yy,other.xx,other.yy) &lt; 350*obj_planetary.optiportabletaille {
    if other.objprocheid[1] = 0 {other.objprocheid[1] = id}else
    if other.objprocheid[2] = 0 {other.objprocheid[2] = id}else
    if other.objprocheid[3] = 0 {other.objprocheid[3] = id}else
    if other.objprocheid[4] = 0 {other.objprocheid[4] = id}else
    if other.objprocheid[5] = 0 {other.objprocheid[5] = id}else
    if other.objprocheid[6] = 0 {other.objprocheid[6] = id}else
    if other.objprocheid[7] = 0 {other.objprocheid[7] = id}else
    if other.objprocheid[8] = 0 {other.objprocheid[8] = id}else
    if other.objprocheid[9] = 0 {other.objprocheid[9] = id}else
    if other.objprocheid[10] = 0 {other.objprocheid[10] = id}else
    if other.objprocheid[11] = 0 {other.objprocheid[11] = id}
    }}}}}
    }}
    
    }
    if i2 &lt;= 11 or i2 &gt; 0 {
    if objprocheid[i2] &gt; 0 &amp;&amp; instance_exists(objprocheid[i2]){
    //varxshoot = objprocheid[i2].xx
    //varyshoot = objprocheid[i2].yy
    varxshoot = objprocheid[i2].xx+((objprocheid[i2].xx2*obj_planetary.optiportabletaille)*20)
    varyshoot = objprocheid[i2].yy+((objprocheid[i2].yy2*obj_planetary.optiportabletaille)*20)
    xxshootlength = xx+lengthdir_x((2.5*type)*obj_planetary.optiportabletaille,(36*i2))
    yyshootlength = yy+lengthdir_y((2.5*type)*obj_planetary.optiportabletaille,(36*i2))
    if obj_planetary.echelle = 0 &amp;&amp; planetparent = obj_planetary.planetnowid {
    lasersound = choose(snd_lasera)//,snd_laserb,snd_laserc,snd_laserd,snd_lasere,snd_laserf,snd_laserg,snd_laserh,snd_laseri,snd_laserj)
global.shootaudio += 2//(1+(global.shootaudio/50))
audio_sound_gain(lasersound,(1/(1+(global.shootaudio/20)))*obj_planetary.optiportabletaille,0)
audio_play_sound(lasersound,2,false);}
    with(instance_create(xxshootlength,yyshootlength,obj_laser)){
    dgt = other.dgt
    planetparent = other.planetparent
    enemy = other.enemy
    image_angle = point_direction(other.xxshootlength,other.yyshootlength,
    other.varxshoot,other.varyshoot)
    alarm[0] = 30
    }}
    }
 }
 alarm[2] = alarmshootvar//2
}


if tourelleauto &lt; 1 {
///SHOOT
if cible &gt; 0 &amp;&amp; instance_exists(cible){
if (abs(angle_difference(dir, image_angle)) &lt; 25) &amp;&amp; point_distance(xx,yy,cible.xx,cible.yy) &lt; 350*obj_planetary.optiportabletaille {
if obj_planetary.echelle = 0 &amp;&amp; planetparent = obj_planetary.planetnowid {
lasersound = choose(snd_lasera)//,snd_laserb,snd_laserc,snd_laserd,snd_lasere,snd_laserf,snd_laserg,snd_laserh,snd_laseri,snd_laserj)
global.shootaudio += 2//(1+(global.shootaudio/20))
audio_sound_gain(lasersound,(1/(1+(global.shootaudio/20)))*obj_planetary.optiportabletaille,0)
audio_play_sound(lasersound,2,false);
}
with(instance_create(xx,yy,obj_laser)){
dgt = other.dgt
planetparent = other.planetparent
enemy = other.enemy
image_angle = other.image_angle
alarm[0] = 30
}}
}
alarm[2] = alarmshootvar*5
//alarm[2] = alarmshootvar*15//random_range(10,15)
}else{
///ROCKET
if alarm[10] &lt; 0 {
repeat(floor(random_range(1,tourelleauto))){
if cible &gt; 0 &amp;&amp; instance_exists(cible){
if (abs(angle_difference(dir, image_angle)) &lt; 25) &amp;&amp; point_distance(xx,yy,cible.xx,cible.yy) &lt; 350*obj_planetary.optiportabletaille {
/*if obj_planetary.echelle = 0 &amp;&amp; planetparent = obj_planetary.planetnowid {
lasersound = choose(snd_lasera)//,snd_laserb,snd_laserc,snd_laserd,snd_lasere,snd_laserf,snd_laserg,snd_laserh,snd_laseri,snd_laserj)
global.shootaudio += 2//(1+(global.shootaudio/20))
audio_sound_gain(lasersound,(1/(1+(global.shootaudio/20)))*obj_planetary.optiportabletaille,0)
audio_play_sound(lasersound,2,false);
}*/
with(instance_create(xx,yy,obj_rocket)){
dgt = other.dgt
planetparent = other.planetparent
enemy = other.enemy
image_angle = other.image_angle
alarm[0] = 150
}}
}
alarm[10] = alarmshootvar*50//random_range(10,15)
}//repeat
}}

}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///RETURN
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///FIN DE COMMERCE
ds_grid_add(obj_planetary.planetary,90,planetparent,floor((random_range(1,2)*vardist)*(type*2)))
ds_grid_add(obj_planetary.planetary,91,planetparent,floor((random_range(1,2)*vardist)*(type*2)))
ds_grid_add(obj_planetary.planetary,92,planetparent,floor((random_range(1,2)*vardist)*(type*2)))
ds_grid_add(obj_planetary.planetary,93,planetparent,floor((random_range(1,2)*vardist)*(type*2)))
ds_grid_add(obj_planetary.planetary,94,planetparent,floor((random_range(1,2)*vardist)*(type*2)))
ds_grid_add(obj_planetary.planetary,95,planetparent,floor((random_range(1,2)*vardist)*(type*2)))
ds_grid_add(obj_planetary.planetary,96,planetparent,floor((random_range(1,2)*vardist)*(type*2)))
ds_grid_add(obj_planetary.planetary,97,planetparent,floor((random_range(1,2)*vardist)*(type*2)))
ds_grid_add(obj_planetary.planetary,98,planetparent,floor((random_range(1,2)*vardist)*(type*2)))

if ds_grid_get(obj_planetary.planetary,53,planetparent) &gt; 0 {
ds_grid_add(obj_planetary.planetary,53,planetparent,-1)}

instance_destroy();
//if floor(random_range(1,100)) = 9 {ds_grid_add(obj_planetary.planetary,36,planetparent,-1)}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_asteorid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///
if colonisateur = 1 {
ds_grid_set(obj_planetary.planetary,33,planetparent,0)}

if enemy = other.enemy  {}else{
if planetparent = other.planetparent {
if hpshield &gt; 0 {
if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
part_type_shape(obj_planetary.particlesh,pt_shape_flare);
part_type_color3(obj_planetary.particlesh,c_blue,c_blue,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particlesh,0.8,1);
part_type_life(obj_planetary.particlesh,8*obj_planetary.optiportabletaille,14*obj_planetary.optiportabletaille);
part_type_blend(obj_planetary.particlesh,1);
part_type_size(obj_planetary.particlesh,0.06*obj_planetary.optiportabletaille,0.1*obj_planetary.optiportabletaille,-0.001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particlesh,0.3*obj_planetary.optiportabletaille,0.25*obj_planetary.optiportabletaille,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particlesh,other.image_angle+90,other.image_angle-90,0,0);
part_particles_create(obj_planetary.Snamesh,other.x,other.y,obj_planetary.particlesh,10);}}
hpshield -= 20*other.image_xscale
}else{
hp -= 20*other.image_xscale}

if hp &lt;= 0 {//ATTAQUANT
if eventenemy = 0 {
if enemy = ds_grid_get(obj_planetary.planetary,34,planetparent) {if ds_grid_get(obj_planetary.planetary,34,planetparent) = global.idfixe {
ds_grid_add(obj_planetary.planetary,52,planetparent,-1)
//ds_grid_add(obj_planetary.planetary,230+type,planetparent,-1)
/*ds_grid_add(obj_planetary.planetary,36,0,-1)//PERDS VAISSEAU DE LA PLANETE MERE QUAND C TOI QUI ATTAQUE
ds_grid_add(obj_planetary.planetary,42+type,0,-1)//shiptype
//si plu de vaisseau sur planete maire arreter bataille
if ds_grid_get(obj_planetary.planetary,36,0) &lt; 3 {
prochaineguerre = floor(random_range(1000,50000))
ds_grid_set(obj_planetary.planetary,51,planetparent,prochaineguerre)//fin de guerre relancer tout
ds_grid_set(obj_planetary.planetary,52,planetparent,prochaineguerre/100)
}*/
}else{
//if ds_grid_get(obj_planetary.planetary,36,planetparent) &gt; 2 {
ds_grid_add(obj_planetary.planetary,52,planetparent,-1)//}
//ds_grid_add(obj_planetary.planetary,230+type,planetparent,-1)
}
}
}//if eventenemy = 0 {
//DEFENSEUR
if enemy = ds_grid_get(obj_planetary.planetary,32,planetparent) {if ds_grid_get(obj_planetary.planetary,36,planetparent) &gt; 2 {
if ds_grid_get(obj_planetary.planetary,32,planetparent) &gt; 0 {//si planet parent = planete mere
if planetparent = 0 {
    ds_grid_add(obj_planetary.planetary,36,planetparent,-1)
    ds_grid_add(obj_planetary.planetary,42+type,planetparent,-1)
}
/*}else{
ds_grid_add(obj_planetary.planetary,52,planetparent,-mode)
//ds_grid_add(obj_planetary.planetary,36,0,-mode)
}*/}}}//allie

if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,c_red,c_orange,c_white);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,10*1,50*1);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.01*obj_planetary.optiportabletaille,0.05*obj_planetary.optiportabletaille,-0.001*obj_planetary.optiportabletaille,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,0.1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,-0.002*obj_planetary.optiportabletaille,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);

//ANNEAU
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,c_blue,c_white,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,80*1,100*1);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.01*obj_planetary.optiportabletaille,0.05*obj_planetary.optiportabletaille,-0.0005*obj_planetary.optiportabletaille,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.9*obj_planetary.optiportabletaille,2*obj_planetary.optiportabletaille,-0.002*obj_planetary.optiportabletaille,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);

//explosion
part_type_shape(obj_planetary.particle3,pt_shape_explosion);
part_type_color3(obj_planetary.particle3,c_orange,c_red,c_orange);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,3*1,20*1);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.1*obj_planetary.optiportabletaille,0.2*obj_planetary.optiportabletaille,-0.001*obj_planetary.optiportabletaille,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.5*obj_planetary.optiportabletaille,2*obj_planetary.optiportabletaille,-0.002*obj_planetary.optiportabletaille,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);
}}
//part_type_color3(obj_planetary.particle3,c_blue,c_white,c_blue);
//vague bleue
/*part_type_shape(obj_planetary.particle3,pt_shape_explosion);
part_type_color3(obj_planetary.particle3,c_blue,c_aqua,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,80,120);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.1,0.3,-0.001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.5,2,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,100);*/
/*
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,0,0,0);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,1,10);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.05,0.1,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1,10,0,0);//,12,35,0.01,0);
part_type_colour1(obj_planetary.particle3,c_white);//33023,255,65535);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,100);

part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,0,0,0);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,1,10);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.05,0.1,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1,10,0,0);//,12,35,0.01,0);
part_type_colour1(obj_planetary.particle3,c_yellow);//33023,255,65535);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,100);
*/

if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
if type &lt; 2 {
audio_sound_gain(snd_exploa,1*obj_planetary.optiportabletaille,0)
audio_play_sound(snd_exploa,2,false);
}else if type &lt; 3 {
audio_sound_gain(snd_explob,1*obj_planetary.optiportabletaille,0)
audio_play_sound(snd_explob,2,false);
}else if type &lt; 5 {
audio_sound_gain(snd_exploc,1*obj_planetary.optiportabletaille,0)
audio_play_sound(snd_exploc,2,false);
}else if type &lt; 6 {
audio_sound_gain(snd_explod,1*obj_planetary.optiportabletaille,0)
audio_play_sound(snd_explod,2,false);
}else if type &gt; 5 {
audio_sound_gain(snd_bigexplo,1*obj_planetary.optiportabletaille,0)
audio_play_sound(snd_bigexplo,2,false);
}

}}

instance_destroy();}
//with(other){instance_destroy();}
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_laser">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///


if colonisateur = 1 {
ds_grid_set(obj_planetary.planetary,33,planetparent,0)}

if enemy = other.enemy {}else{
if planetparent = other.planetparent {
//show_message(1*other.dgt)
//if type = 7 {show_message("touchprtant")}
if hpshield &gt; 0 {
if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
part_type_shape(obj_planetary.particlesh,pt_shape_flare);
part_type_color3(obj_planetary.particlesh,c_blue,c_blue,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particlesh,0.5,1);
part_type_life(obj_planetary.particlesh,45*obj_planetary.optiportabletaille,55*obj_planetary.optiportabletaille);
part_type_blend(obj_planetary.particlesh,1);
part_type_size(obj_planetary.particlesh,0.05*obj_planetary.optiportabletaille,0.09*obj_planetary.optiportabletaille,-0.0009,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particlesh,0.2*obj_planetary.optiportabletaille,0.4*obj_planetary.optiportabletaille,-0.001,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particlesh,other.image_angle-90,other.image_angle+90,0,0);
part_type_orientation(obj_planetary.particlesh,other.image_angle-70,other.image_angle+70,0,0,0);
part_particles_create(obj_planetary.Snamesh,other.x,other.y,obj_planetary.particlesh,10);}}
hpshield -= 1*other.dgt
}else{
hp -= 1*other.dgt}
if hp &lt;= 0 {
if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
if type &lt; 2 {
audio_sound_gain(snd_exploa,1*obj_planetary.optiportabletaille,0)
audio_play_sound(snd_exploa,2,false);
}else if type &lt; 3 {
audio_sound_gain(snd_explob,1*obj_planetary.optiportabletaille,0)
audio_play_sound(snd_explob,2,false);
}else if type &lt; 5 {
audio_sound_gain(snd_exploc,1*obj_planetary.optiportabletaille,0)
audio_play_sound(snd_exploc,2,false);
}else if type &lt; 6 {
audio_sound_gain(snd_explod,1*obj_planetary.optiportabletaille,0)
audio_play_sound(snd_explod,2,false);
}else if type &gt; 5 {
audio_sound_gain(snd_bigexplo,1*obj_planetary.optiportabletaille,0)
audio_play_sound(snd_bigexplo,2,false);
}

}}

if eventenemy = 0 {
///AJOUTER DS LA GRID LES PERTES POUR RECHARGER DANS LE NET CODE
if planetparent = 0 {}else{
if enemy = ds_grid_get(obj_planetary.planetary,32,planetparent) &amp;&amp;
enemy = global.idfixe {//si je suis defensseur
ds_grid_add(obj_planetary.planetary,259+type,planetparent,1)
}else if enemy = ds_grid_get(obj_planetary.planetary,32,planetparent) &amp;&amp;
enemy &gt; 5 {//si le joueur est defensseur
ds_grid_add(obj_planetary.planetary,259+type,planetparent,1)
}else if enemy = ds_grid_get(obj_planetary.planetary,34,planetparent) &amp;&amp;
enemy = global.idfixe {//si je suis attakant
ds_grid_add(obj_planetary.planetary,266+type,planetparent,1)
}else if enemy = ds_grid_get(obj_planetary.planetary,34,planetparent) &amp;&amp;
enemy &gt; 5 {//si le joueur est attakant
ds_grid_add(obj_planetary.planetary,266+type,planetparent,1)
}}


//ATTAQUANT
if enemy = ds_grid_get(obj_planetary.planetary,34,planetparent) {if ds_grid_get(obj_planetary.planetary,34,planetparent) = global.idfixe {
ds_grid_add(obj_planetary.planetary,52,planetparent,-1)
//ds_grid_add(obj_planetary.planetary,230+type,planetparent,-1)
/*ds_grid_add(obj_planetary.planetary,36,0,-1)//PERDS VAISSEAU DE LA PLANETE MERE QUAND C TOI QUI ATTAQUE
ds_grid_add(obj_planetary.planetary,42+type,0,-1)//shiptype
//si plu de vaisseau sur planete maire arreter bataille
if ds_grid_get(obj_planetary.planetary,36,0) &lt; 3 {
prochaineguerre = floor(random_range(1000,50000))
ds_grid_set(obj_planetary.planetary,51,planetparent,prochaineguerre)//fin de guerre relancer tout
ds_grid_set(obj_planetary.planetary,52,planetparent,prochaineguerre/100)
//ds_grid_add(obj_planetary.planetary,230+type,planetparent,-1)

}*/
}else{
//if ds_grid_get(obj_planetary.planetary,36,planetparent) &gt; 2 {
ds_grid_add(obj_planetary.planetary,52,planetparent,-1)
//ds_grid_add(obj_planetary.planetary,230+type,planetparent,-1)
//}
}
}
}//eventenemy
//DEFENSEUR
if enemy = ds_grid_get(obj_planetary.planetary,32,planetparent) {if ds_grid_get(obj_planetary.planetary,36,planetparent) &gt; 0 {
if ds_grid_get(obj_planetary.planetary,32,planetparent) &gt; 0 {//si planet parent = planete mere
if type = 1 or type = 2 {nbrvar = 2}else
if type = 3 {nbrvar = 1}else
{nbrvar = 0}
if ds_grid_get(obj_planetary.planetary,42+type,planetparent) &gt; nbrvar {
if planetparent = 0 {
    ds_grid_add(obj_planetary.planetary,36,planetparent,-1)
    ds_grid_add(obj_planetary.planetary,42+type,planetparent,-1)
}
//ds_grid_add(obj_planetary.planetary,238,planetparent,1)//DESTROY SHIP TOTAL
}
/*}else{
ds_grid_add(obj_planetary.planetary,52,planetparent,-mode)
//ds_grid_add(obj_planetary.planetary,36,0,-mode)
}*/}}}//allie

if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,c_red,c_orange,c_white);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,10*1,50*1);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.01*obj_planetary.optiportabletaille,0.05*obj_planetary.optiportabletaille,-0.001*obj_planetary.optiportabletaille,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,0.1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,-0.002*obj_planetary.optiportabletaille,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);

//ANNEAU
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,c_blue,c_white,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,80*1,100*1);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.01*obj_planetary.optiportabletaille,0.05*obj_planetary.optiportabletaille,-0.0005*obj_planetary.optiportabletaille,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.9*obj_planetary.optiportabletaille,2*obj_planetary.optiportabletaille,-0.002*obj_planetary.optiportabletaille,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);

//explosion
part_type_shape(obj_planetary.particle3,pt_shape_explosion);
part_type_color3(obj_planetary.particle3,c_orange,c_red,c_orange);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,3*1,20*1);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.1*obj_planetary.optiportabletaille,0.2*obj_planetary.optiportabletaille,-0.001*obj_planetary.optiportabletaille,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.5*obj_planetary.optiportabletaille,2*obj_planetary.optiportabletaille,-0.002*obj_planetary.optiportabletaille,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);
}}
//part_type_color3(obj_planetary.particle3,c_blue,c_white,c_blue);
//vague bleue
/*part_type_shape(obj_planetary.particle3,pt_shape_explosion);
part_type_color3(obj_planetary.particle3,c_blue,c_aqua,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,80,120);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.1,0.3,-0.001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.5,2,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,100);*/
/*
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,0,0,0);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,1,10);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.05,0.1,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1,10,0,0);//,12,35,0.01,0);
part_type_colour1(obj_planetary.particle3,c_white);//33023,255,65535);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,100);

part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,0,0,0);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,1,10);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.05,0.1,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1,10,0,0);//,12,35,0.01,0);
part_type_colour1(obj_planetary.particle3,c_yellow);//33023,255,65535);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,100);
*/

instance_destroy();}
with(other){instance_destroy();}
}
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_rocket">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///



if colonisateur = 1 {
ds_grid_set(obj_planetary.planetary,33,planetparent,0)}

if enemy = other.enemy  {}else{
if planetparent = other.planetparent {
//show_message(1*other.dgt)
if hpshield &gt; 0 {
if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
part_type_shape(obj_planetary.particlesh,pt_shape_flare);
part_type_color3(obj_planetary.particlesh,c_blue,c_blue,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particlesh,0.8,1);
part_type_life(obj_planetary.particlesh,8*obj_planetary.optiportabletaille,14*obj_planetary.optiportabletaille);
part_type_blend(obj_planetary.particlesh,1);
part_type_size(obj_planetary.particlesh,0.06*obj_planetary.optiportabletaille,0.1*obj_planetary.optiportabletaille,-0.001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particlesh,0.3*obj_planetary.optiportabletaille,0.25*obj_planetary.optiportabletaille,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particlesh,other.image_angle+90,other.image_angle-90,0,0);
part_particles_create(obj_planetary.Snamesh,other.x,other.y,obj_planetary.particlesh,10);}}
hpshield -= 2*other.dgt
}else{
hp -= 2*other.dgt}
if hp &lt;= 0 {

if eventenemy = 0 {
///AJOUTER DS LA GRID LES PERTES POUR RECHARGER DANS LE NET CODE
if planetparent = 0 {}else{
if enemy = ds_grid_get(obj_planetary.planetary,32,planetparent) &amp;&amp;
enemy = global.idfixe {//si je suis defensseur
ds_grid_add(obj_planetary.planetary,259+type,planetparent,1)
}else if enemy = ds_grid_get(obj_planetary.planetary,32,planetparent) &amp;&amp;
enemy &gt; 5 {//si le joueur est defensseur
ds_grid_add(obj_planetary.planetary,259+type,planetparent,1)
}else if enemy = ds_grid_get(obj_planetary.planetary,34,planetparent) &amp;&amp;
enemy = global.idfixe {//si je suis attakant
ds_grid_add(obj_planetary.planetary,266+type,planetparent,1)
}else if enemy = ds_grid_get(obj_planetary.planetary,34,planetparent) &amp;&amp;
enemy &gt; 5 {//si le joueur est attakant
ds_grid_add(obj_planetary.planetary,266+type,planetparent,1)
}}


//ATTAQUANT
if enemy = ds_grid_get(obj_planetary.planetary,34,planetparent) {if ds_grid_get(obj_planetary.planetary,34,planetparent) = global.idfixe {
ds_grid_add(obj_planetary.planetary,52,planetparent,-1)
//ds_grid_add(obj_planetary.planetary,230+type,planetparent,-1)
//ds_grid_add(obj_planetary.planetary,36,0,-1)//PERDS VAISSEAU DE LA PLANETE MERE QUAND C TOI QUI ATTAQUE
//ds_grid_add(obj_planetary.planetary,42+type,0,-1)//shiptype
//si plu de vaisseau sur planete maire arreter bataille
if planetparent = 0 {
if ds_grid_get(obj_planetary.planetary,36,0) &lt; 3 {
prochaineguerre = floor(random_range(1000,50000))
ds_grid_set(obj_planetary.planetary,51,planetparent,prochaineguerre)//fin de guerre relancer tout
ds_grid_set(obj_planetary.planetary,52,planetparent,prochaineguerre/100)
//ds_grid_add(obj_planetary.planetary,230+type,planetparent,-1)

}
}
}else{
//if ds_grid_get(obj_planetary.planetary,36,planetparent) &gt; 2 {
ds_grid_add(obj_planetary.planetary,52,planetparent,-1)
//ds_grid_add(obj_planetary.planetary,230+type,planetparent,-1)
//}
}
}
}//if eventenemy = 0 {
//DEFENSEUR
if enemy = ds_grid_get(obj_planetary.planetary,32,planetparent) {if ds_grid_get(obj_planetary.planetary,36,planetparent) &gt; 0 {
if ds_grid_get(obj_planetary.planetary,32,planetparent) &gt; 0 {//si planet parent = planete mere
if type = 1 or type = 2 {nbrvar = 2}else
if type = 3 {nbrvar = 1}else
{nbrvar = 0}
if ds_grid_get(obj_planetary.planetary,42+type,planetparent) &gt; nbrvar {
if planetparent = 0 {
    ds_grid_add(obj_planetary.planetary,36,planetparent,-1)
    ds_grid_add(obj_planetary.planetary,42+type,planetparent,-1)
}
//ds_grid_add(obj_planetary.planetary,238,planetparent,1)//DESTROY SHIP TOTAL
}
/*}else{
ds_grid_add(obj_planetary.planetary,52,planetparent,-mode)
//ds_grid_add(obj_planetary.planetary,36,0,-mode)
}*/}}}//allie

if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,c_red,c_orange,c_white);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,10*1,50*1);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.01*obj_planetary.optiportabletaille,0.05*obj_planetary.optiportabletaille,-0.001*obj_planetary.optiportabletaille,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,0.1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,-0.002*obj_planetary.optiportabletaille,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);

//ANNEAU
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,c_blue,c_white,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,80*1,100*1);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.01*obj_planetary.optiportabletaille,0.05*obj_planetary.optiportabletaille,-0.0005*obj_planetary.optiportabletaille,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.9*obj_planetary.optiportabletaille,2*obj_planetary.optiportabletaille,-0.002*obj_planetary.optiportabletaille,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);

//explosion
part_type_shape(obj_planetary.particle3,pt_shape_explosion);
part_type_color3(obj_planetary.particle3,c_orange,c_red,c_orange);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,3*1,20*1);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.1*obj_planetary.optiportabletaille,0.2*obj_planetary.optiportabletaille,-0.001*obj_planetary.optiportabletaille,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.5*obj_planetary.optiportabletaille,2*obj_planetary.optiportabletaille,-0.002*obj_planetary.optiportabletaille,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);
}}

if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
if type &lt; 2 {
audio_sound_gain(snd_exploa,1*obj_planetary.optiportabletaille,0)
audio_play_sound(snd_exploa,2,false);
}else if type &lt; 3 {
audio_sound_gain(snd_explob,1*obj_planetary.optiportabletaille,0)
audio_play_sound(snd_explob,2,false);
}else if type &lt; 5 {
audio_sound_gain(snd_exploc,1*obj_planetary.optiportabletaille,0)
audio_play_sound(snd_exploc,2,false);
}else if type &lt; 6 {
audio_sound_gain(snd_explod,1*obj_planetary.optiportabletaille,0)
audio_play_sound(snd_explod,2,false);
}else if type &gt; 5 {
audio_sound_gain(snd_bigexplo,1*obj_planetary.optiportabletaille,0)
audio_play_sound(snd_bigexplo,2,false);
}

}}

instance_destroy();}
with(other){instance_destroy();}
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alarm[5] &lt; 0 &amp;&amp; alarm[4] &lt; 0 {
x = xx
y = yy
colorshiprgb = ds_grid_get(obj_planetary.planetary,30,planetparent)
if createtp = 1 {

vargetdsgrid[3] = ((ds_grid_get(obj_planetary.planetary,7,planetparent)/25)*obj_planetary.optiportabletaille)

dir = point_direction(xx,yy,room_width/2,room_height/2)
if point_distance(xx,yy,room_width/2,room_height/2) &gt; (900*obj_planetary.optiportabletaille) {
//show_message("fini")

xx += lengthdir_x(10,dir)
yy += lengthdir_y(10,dir)
image_angle = dir
colorshiprgb = c_red
if planetparent = obj_planetary.planetnowid &amp;&amp; obj_planetary.echelle = 0 {

part_type_shape(obj_planetary.particlec,pt_shape_flare);
part_type_color3(obj_planetary.particlec,c_white,c_blue,c_white);//33023,255,65535);
part_type_alpha2(obj_planetary.particlec,0.4,0.8);
part_type_life(obj_planetary.particlec,10,15);
part_type_blend(obj_planetary.particlec,1);
part_type_size(obj_planetary.particlec,0.02*obj_planetary.optiportabletaille,0.3*obj_planetary.optiportabletaille,-0.01,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particlec,3,4,0,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particlec,dir+177,dir+183,0,0);
part_particles_create(obj_planetary.Snamec,xx,yy,obj_planetary.particlec,10);
if type = 6 {image_xscale = 1*obj_planetary.optiportabletaille;image_yscale = image_xscale;image_index = 25;mask_index = spr_masktype3;
draw_sprite_ext(spr_ship,25,xx,yy,1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,image_angle,colorshiprgb,1)
}else if type = 7 {image_xscale = 1*obj_planetary.optiportabletaille;image_yscale = image_xscale;image_index = 26;mask_index = spr_masktype7;
draw_sprite_ext(spr_ship,26,xx,yy,1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,image_angle,colorshiprgb,1)
}else{
image_index = mode-1;mask_index = sprite_index;
//if type &lt; 6 {if type &lt; 3 {mask_index = spr_masktype1;}else{mask_index = spr_masktype2;}}
draw_sprite_ext(spr_ship,mode-1,xx,yy,1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,image_angle,colorshiprgb,1)}}
image_xscale = 1*obj_planetary.optiportabletaille
image_yscale = image_xscale

}else{createtp = 0}

}else{
if vargetdsgrid[2] &gt; 0 {
if global.surfok = 1
   {
   
   //REACTEUR A COMBUSTION
   if planetparent = obj_planetary.planetnowid &amp;&amp; obj_planetary.echelle = 0 {
   vitesseparticle = type/2//max(abs(xx2),abs(yy2))
   if type = 6 or type = 7 {
   vitesseparticle = type*1.4
   }
part_type_shape(obj_planetary.particlec,pt_shape_flare);
part_type_color3(obj_planetary.particlec,c_white,c_blue,c_white);//33023,255,65535);
part_type_alpha2(obj_planetary.particlec,0.4,0.8);
part_type_life(obj_planetary.particlec,10,15);
part_type_blend(obj_planetary.particlec,1);
part_type_size(obj_planetary.particlec,0.02*obj_planetary.optiportabletaille,0.3*obj_planetary.optiportabletaille,-0.01/vitesseparticle,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particlec,(0.5*vitesseparticle)*obj_planetary.optiportabletaille,(1*vitesseparticle)*obj_planetary.optiportabletaille,0,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particlec,image_angle+177,image_angle+183,0,0);
part_particles_create(obj_planetary.Snamec,xx,yy,obj_planetary.particlec,1*vitesseparticle);
   }
   
   
   ///COLONISATEUR
   if colonisateur = 1 {
   if obj_planetary.planetnowid = planetparent &amp;&amp; obj_planetary.echelle = 0 {
//MOUVEMENT
dir = point_direction(room_width/2,room_height/2,xxdecol,yydecol)
if ds_grid_get(obj_planetary.planetary,32,planetparent) = global.idfixe {//FIN DE COLO
if plusdecol &gt; 0 {plusdecol -= 1}else{instance_destroy();}
}else{
if plusdecol &lt; 20 {plusdecol = 1500}
if plusdecol &gt; 101 {plusdecol -= 1}else{
if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
part_type_shape(obj_planetary.particlec,pt_shape_flare);
part_type_color3(obj_planetary.particlec,c_orange,c_blue,c_red);//33023,255,65535);
part_type_alpha2(obj_planetary.particlec,0.8,1);
part_type_life(obj_planetary.particlec,29,30);
part_type_blend(obj_planetary.particlec,1);
part_type_size(obj_planetary.particlec,0.01,0.1,-0.001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particlec,3,4,0,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particlec,dir+180,dir+180,0,0);
part_particles_create(obj_planetary.Snamec,xx,yy,obj_planetary.particlec,60);
}else{part_type_destroy(particlec);}}else{part_type_destroy(particlec);}
}}
xxdecol = room_width/2+lengthdir_x(vargetdsgrid[3]+plusdecol,rotaaleatdecol)
yydecol = room_height/2+lengthdir_y(vargetdsgrid[3]+plusdecol,rotaaleatdecol)
xx = xxdecol;
yy = yydecol;
//RETOUR COLLI PLANET
dir = point_direction(room_width/2,room_height/2,xxdecol,yydecol)
//draw_sprite_ext(spr_ship,mode-1,xxdecol,yydecol,1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,rotaaleatdecol,colorshiprgb,1)
if type = 6 {image_xscale = 1*obj_planetary.optiportabletaille;image_yscale = image_xscale;image_index = 25;mask_index = spr_masktype3;
draw_sprite_ext(spr_ship,25,xxdecol,yydecol,1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,rotaaleatdecol,colorshiprgb,1)
}else if type = 7 {image_xscale = 1*obj_planetary.optiportabletaille;image_yscale = image_xscale;image_index = 26;mask_index = spr_masktype7;
draw_sprite_ext(spr_ship,26,xxdecol,xxdecol,1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,rotaaleatdecol,colorshiprgb,1)
}else{image_index = mode-1
draw_sprite_ext(spr_ship,mode-1,xxdecol,xxdecol,1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,rotaaleatdecol,colorshiprgb,1)}
sprite_index = spr_ship
image_index = mode-1;mask_index = sprite_index;
//if type &lt; 6 {if type &lt; 3 {mask_index = spr_masktype1;}else{mask_index = spr_masktype2;}}
image_xscale = 1*obj_planetary.optiportabletaille
image_yscale = 1*obj_planetary.optiportabletaille
xx = xxdecol
yy = yydecol}}else{   
   
x = xx
y = yy
if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
if xxcursor &gt; 0 {
draw_set_alpha(0.1)
draw_set_color(c_red);
draw_circle(xxcursor,yycursor,4,false)
draw_set_alpha(1)
}}}

//SUPRIMER COMERCE OU PARTIR SI  GUERRE EN MEME TEMPS

if vargetdsgrid[1] &lt;= 5 &amp;&amp; partir &gt; 0 &amp;&amp; partir &lt; 4 {instance_destroy();}

if colorship = 0 {colorshiprgb = obj_planetary.planetarycolor}
if colorship = 1 {colorshiprgb = obj_planetary.planetarycolor}
if colorship = 2 {colorshiprgb = c_red}
if colorship = 3 {colorshiprgb = c_purple}
if colorship = 4 {colorshiprgb = c_aqua}
if colorship = 5 {colorshiprgb = c_red}
if colorship = 6 {colorshiprgb = c_red}
if colorship = 7 {colorshiprgb = c_red}




if enemy = vargetdsgrid[2] {colorshiprgb = obj_planetary.planetarycolor}
if enemy = vargetdsgrid[4] {colorshiprgb = obj_planetary.planetarycolor2}
if enemy = 0 {colorshiprgb = obj_planetary.planetarycolor}
if suislepatron = 1 {colorshiprgb = c_red}
vardist2 = point_distance(xx,yy,room_width/2,room_height/2)

if enemy = vargetdsgrid[2] or attakguy = 1 {//ATTAQUANT
//cherche ship
if floor(vargetdsgrid[1]) &lt;= 0 or eventenemy = 1 {
if alarm[3] &lt;= 0 {
if instance_exists(obj_ship){
dir = point_direction(xx,yy,room_width/2,room_height/2)
distenemy = 30000
with(obj_ship){if planetparent = other.planetparent &amp;&amp; enemy &gt; 0 { 
distvaropti = point_distance(other.xx, other.yy, xx, yy)
if enemy = vargetdsgrid[2] or other.distenemy &lt; distvaropti {}else{
other.cible = id
other.dir = point_direction(other.xx, other.yy, xx, yy)
other.distenemy = distvaropti
}}
}}
if instance_exists(obj_shipcommand){
dir = point_direction(xx,yy,room_width/2,room_height/2)
distenemy = 30000
with(obj_shipcommand){if planetparent = other.planetparent &amp;&amp; enemy &gt; 0 { 
distvaropti = point_distance(other.xx, other.yy, xx, yy)
if enemy = vargetdsgrid[2] or other.distenemy &lt; distvaropti {}else{
other.cible = id
other.dir = point_direction(other.xx, other.yy, xx, yy)
other.distenemy = distvaropti
}}
}}
if instance_exists(obj_defence){
with(obj_defence){if planetparent = other.planetparent { 
distvaropti = point_distance(other.xx, other.yy, xx, yy)
if enemy = vargetdsgrid[2] or other.distenemy &lt; distvaropti{}else{
other.cible = id
other.dir = point_direction(other.xx, other.yy, xx, yy)
other.distenemy = distvaropti
}}
}}
alarm[3] = random_range(17,25)
}
//SUIS LE CURSEUR TEST
if  enemy = global.idfixe {
if device_mouse_check_button(0, mb_left) {
if obj_planetary.menuplanet = 0 &amp;&amp; obj_planetary.planetnowid = planetparent &amp;&amp; obj_planetary.echelle = 0 &amp;&amp; suislepatron = 1
&amp;&amp; point_distance(room_width/2,room_height/2,obj_planetary.xxmouse,obj_planetary.yymouse) &lt; vargetdsgrid[3] {
stationaire = 0;suislepatron = 0}}

if xxcursor &gt; 0 {
if point_distance(xx,yy,xxcursor,yycursor) &lt; 50 {
//xxcursor = 0;yycursor = 0
}else{
dir = point_direction(xx,yy,xxcursor,yycursor)
}}


}
//remonte trop bas trop haut
if suislepatron = 0  &amp;&amp; xxcursor = 0{
if vardist2 &lt; (vargetdsgrid[3]+30){//*obj_planetary.optiportabletaille {
dir = point_direction(room_width/2,room_height/2,xx,yy)}
if vardist2 &gt; (vargetdsgrid[3]+1800){//*obj_planetary.optiportabletaille {
dir = point_direction(xx,yy,room_width/2,room_height/2)}
}else{alarm[6] += 1.1;stationaire = 1
if vardist2 &lt; (vargetdsgrid[3]+20){//*obj_planetary.optiportabletaille {
dir = point_direction(room_width/2,room_height/2,xx,yy)}
if vardist2 &gt; (vargetdsgrid[3]+2500){//*obj_planetary.optiportabletaille {
dir = point_direction(xx,yy,room_width/2,room_height/2)}
}

}else{suislepatron = 0
dir = point_direction(room_width/2,room_height/2,xx,yy)
if point_distance(room_width/2,room_height/2,xx,yy) &gt; 4500*obj_planetary.optiportabletaille {instance_destroy();}
if point_distance(room_width/2,room_height/2,xx,yy) &gt; vargetdsgrid[7]+(1000*obj_planetary.optiportabletaille) {
if tracelerp &lt; 50 {tracelerp += 1}
if tracelerp &gt; 5 &amp;&amp; obj_planetary.planetnowid = planetparent &amp;&amp; obj_planetary.echelle = 0 {
part_type_shape(obj_planetary.particlec,pt_shape_flare);
part_type_color3(obj_planetary.particlec,c_white,c_blue,c_white);//33023,255,65535);
part_type_alpha2(obj_planetary.particlec,0.4,0.8);
part_type_life(obj_planetary.particlec,10,15);
part_type_blend(obj_planetary.particlec,1);
part_type_size(obj_planetary.particlec,0.02*obj_planetary.optiportabletaille,0.3*obj_planetary.optiportabletaille,-0.01,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particlec,3,4,0,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particlec,dir+177,dir+183,0,0);
part_particles_create(obj_planetary.Snamec,xx,yy,obj_planetary.particlec,trace);}}
}
if alarm[7] &gt; 0  &amp;&amp; eventenemy = 0 {
suislepatron = 0
dir = point_direction(room_width/2,room_height/2,xx,yy)
}
if alarm[9] &lt;= 700{//TROP LONGTEMPS QUE T EN ATAK FAIS RAMER
suislepatron = 0
dir = point_direction(room_width/2,room_height/2,xx,yy)
if point_distance(room_width/2,room_height/2,xx,yy) &lt; 2000*obj_planetary.optiportabletaille {if tracelerp &lt; 50 {tracelerp += 0.01}}else{
if tracelerp &lt; 50 {tracelerp += 1}}
if point_distance(room_width/2,room_height/2,xx,yy) &gt; 5000*obj_planetary.optiportabletaille {instance_destroy();}
if tracelerp &gt; 5 &amp;&amp; obj_planetary.planetnowid = planetparent &amp;&amp; obj_planetary.echelle = 0 {
part_type_shape(obj_planetary.particlec,pt_shape_flare);
part_type_color3(obj_planetary.particlec,c_white,c_blue,c_white);//33023,255,65535);
part_type_alpha2(obj_planetary.particlec,0.4,0.8);
part_type_life(obj_planetary.particlec,10,15);
part_type_blend(obj_planetary.particlec,1);
part_type_size(obj_planetary.particlec,0.02*obj_planetary.optiportabletaille,0.3*obj_planetary.optiportabletaille,-0.01,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particlec,3,4,0,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particlec,dir+177,dir+183,0,0);
part_particles_create(obj_planetary.Snamec,xx,yy,obj_planetary.particlec,trace);}
}
image_angle += sin(degtorad(dir - image_angle)) * (random_range(1,2)*(vitesseship*trace));
if xx2 &lt; lengthdir_x(vitesseship*vargetdsgrid[7],image_angle) {xx2 += accellerationship*vargetdsgrid[7]}else if xx2 &gt; lengthdir_x(vitesseship*vargetdsgrid[7],image_angle){xx2 -= accellerationship*vargetdsgrid[7]}
if yy2 &lt; lengthdir_y(vitesseship*vargetdsgrid[7],image_angle) {yy2 += accellerationship*vargetdsgrid[7]}else if yy2 &gt; lengthdir_y(vitesseship*vargetdsgrid[7],image_angle){yy2 -= accellerationship*vargetdsgrid[7]}
//yy2 = lengthdir_y(vitesseship,image_angle)
trace = lerp(trace,tracelerp,0.1)
xx += (xx2*obj_planetary.optiportabletaille)*trace
yy += (yy2*obj_planetary.optiportabletaille)*trace
if obj_planetary.planetnowid = planetparent &amp;&amp; obj_planetary.echelle = 0 {
if type = 6 {image_xscale = 1*obj_planetary.optiportabletaille;image_yscale = image_xscale;mask_index = spr_masktype3;
draw_sprite_ext(spr_ship,25,x,y,1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,image_angle,colorshiprgb,1)
}else if type = 7 {image_xscale = 1*obj_planetary.optiportabletaille;image_yscale = image_xscale;mask_index = spr_masktype7;
draw_sprite_ext(spr_ship,26,x,y,1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,image_angle,colorshiprgb,1)
}else{sprite_index =spr_ship;image_index = mode-1;mask_index = sprite_index;
draw_sprite_ext(spr_ship,mode-1,xx,yy,1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,image_angle,colorshiprgb,1)}
//draw_sprite_ext(spr_ship,mode-1,xx,yy,image_xscale,image_yscale,image_angle,colorshiprgb,1)
}
sprite_index = spr_ship
//if type &lt; 6 {if type &lt; 3 {mask_index = spr_masktype1;}else{mask_index = spr_masktype2;}}
image_xscale = 1*obj_planetary.optiportabletaille
image_yscale = 1*obj_planetary.optiportabletaille
}else if enemy = vargetdsgrid[4] {//DEFENSSEUR
//cherche ship

if alarm[3] &lt;= 0 {
dir = point_direction(xx,yy,room_width/2,room_height/2)
distenemy = 1200

if instance_exists(obj_ship){
with(obj_ship){if planetparent = other.planetparent &amp;&amp; enemy &gt; 0 { 
distvaropti = point_distance(other.xx, other.yy, xx, yy)
if enemy = vargetdsgrid[4] or other.distenemy &lt; distvaropti{}else{
other.cible = id
other.dir = point_direction(other.xx, other.yy, xx, yy)
other.distenemy = distvaropti
}}
}}

if instance_exists(obj_defence){
with(obj_defence){if planetparent = other.planetparent { 
distvaropti = point_distance(other.xx, other.yy, xx, yy)
if enemy = vargetdsgrid[4] or other.distenemy &lt; distvaropti{}else{
other.cible = id
other.dir = point_direction(other.xx, other.yy, xx, yy)
other.distenemy = distvaropti
}}
}}

alarm[3] = random_range(17,35)
}

if stationaire = 1 {
distenemy = 1201
dirstatiox = room_width/2+lengthdir_x(vargetdsgrid[3],rotaaleatdecol)
dirstatioy = room_height/2+lengthdir_y(vargetdsgrid[3],rotaaleatdecol)

dir = point_direction(xx,yy,dirstatiox,dirstatioy)
}

if enemy = ds_grid_get(obj_planetary.planetary,32,planetparent) {if vardist2 &lt; vargetdsgrid[3]-(10*obj_planetary.optiportabletaille) {instance_destroy();}}
if distenemy = 1200 {
dir = point_direction(xx,yy,room_width/2,room_height/2)

}else{
//SUIS LE CURSEUR TEST
if enemy = global.idfixe {
if device_mouse_check_button(0, mb_left) {
if obj_planetary.menuplanet = 0 &amp;&amp; obj_planetary.planetnowid = planetparent &amp;&amp; obj_planetary.echelle = 0 &amp;&amp; suislepatron = 1
&amp;&amp; point_distance(room_width/2,room_height/2,obj_planetary.xxmouse,obj_planetary.yymouse) &lt; vargetdsgrid[3] {
stationaire = 0;suislepatron = 1}}

if xxcursor &gt; 0 {
if point_distance(xx,yy,xxcursor,yycursor) &lt; 50 {
}else{
dir = point_direction(xx,yy,xxcursor,yycursor)
}}
}



//remonte trop bas trop haut
if suislepatron = 0 &amp;&amp; xxcursor = 0{
if vardist2 &lt; (vargetdsgrid[3]+30){//*obj_planetary.optiportabletaille {
dir = point_direction(room_width/2,room_height/2,xx,yy)}
if vardist2 &gt; (vargetdsgrid[3]+1800){//*obj_planetary.optiportabletaille {
dir = point_direction(xx,yy,room_width/2,room_height/2)}
}else{alarm[6] += 1;stationaire = 1
if vardist2 &lt; (vargetdsgrid[3]+20){//*obj_planetary.optiportabletaille {
dir = point_direction(room_width/2,room_height/2,xx,yy)}
if vardist2 &gt; (vargetdsgrid[3]+2500){//*obj_planetary.optiportabletaille {
dir = point_direction(xx,yy,room_width/2,room_height/2)}
}
}

if alarm[7] &gt; 0 {dir = point_direction(room_width/2,room_height/2,xx,yy)}

//if alarm[9] &lt;= 500 {dir = point_direction(xx,yy,room_width/2,room_height/2)}
if alarm[9] &gt; 0 {alarm[9] += 1 }
if alarm[6] &lt; 0 {dir = point_direction(xx,yy,room_width/2,room_height/2)} //rentrer a la base trop long que t la
if partir = 4 {dir = point_direction(xx,yy,obj_planetary.xxlune1,obj_planetary.yylune1)}


image_angle += sin(degtorad(dir - image_angle)) * (random_range(1,2)*vitesseship);

if partir = 4 &amp;&amp; point_distance(xx,yy,obj_planetary.xxlune1,obj_planetary.yylune1) &lt; (ds_grid_get(obj_planetary.planetary,83,planetparent)/25)*obj_planetary.optiportabletaille {
if ds_grid_get(obj_planetary.planetary,211,planetparent) &lt;= 0 {
ds_grid_add(obj_planetary.planetary,211,planetparent,500);}else
if ds_grid_get(obj_planetary.planetary,212,planetparent) &lt;= 0 {
ds_grid_add(obj_planetary.planetary,212,planetparent,500);}else
if ds_grid_get(obj_planetary.planetary,213,planetparent) &lt;= 0 {
ds_grid_add(obj_planetary.planetary,213,planetparent,500);}else
if ds_grid_get(obj_planetary.planetary,214,planetparent) &lt;= 0 {
ds_grid_add(obj_planetary.planetary,214,planetparent,500);}else
{ds_grid_set(obj_planetary.planetary,211,planetparent,500);
ds_grid_set(obj_planetary.planetary,212,planetparent,500);
ds_grid_set(obj_planetary.planetary,213,planetparent,500);
ds_grid_set(obj_planetary.planetary,214,planetparent,500);}
instance_destroy();
//ds_grid_add(obj_planetary.planetary,87,planetparent,1)
}else{
if xx2 &lt; lengthdir_x(vitesseship*vargetdsgrid[7],image_angle) {xx2 += accellerationship*vargetdsgrid[7]}else if xx2 &gt; lengthdir_x(vitesseship*vargetdsgrid[7],image_angle){xx2 -= accellerationship*vargetdsgrid[7]}
if yy2 &lt; lengthdir_y(vitesseship*vargetdsgrid[7],image_angle) {yy2 += accellerationship*vargetdsgrid[7]}else if yy2 &gt; lengthdir_y(vitesseship*vargetdsgrid[7],image_angle){yy2 -= accellerationship*vargetdsgrid[7]}

xx += xx2*obj_planetary.optiportabletaille
yy += yy2*obj_planetary.optiportabletaille
}
//xx += lengthdir_x(vitesseship,image_angle)
//yy += lengthdir_y(vitesseship,image_angle)
if obj_planetary.planetnowid = planetparent &amp;&amp; obj_planetary.echelle = 0 {
if type = 6 {image_xscale = 1*obj_planetary.optiportabletaille;image_yscale = image_xscale;image_index = 25;mask_index = spr_masktype3;
draw_sprite_ext(spr_ship,25,xx,yy,1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,image_angle,colorshiprgb,1)
}else if type = 7 {image_xscale = 1*obj_planetary.optiportabletaille;image_yscale = image_xscale;image_index = 26;mask_index = spr_masktype7;
draw_sprite_ext(spr_ship,26,xx,yy,1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,image_angle,colorshiprgb,1)
}else{image_index = mode-1;mask_index = sprite_index;sprite_index = spr_ship
draw_sprite_ext(spr_ship,mode-1,xx,yy,1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,image_angle,colorshiprgb,1)}
//draw_sprite_ext(spr_ship,mode-1,xx,yy,image_xscale,image_yscale,image_angle,colorshiprgb,1)
}
sprite_index = spr_ship
//if type &lt; 6 {if type &lt; 3 {mask_index = spr_masktype1;}else{mask_index = spr_masktype2;}}
image_xscale = 1*obj_planetary.optiportabletaille
image_yscale = 1*obj_planetary.optiportabletaille

//abs
}else if colonisateur = 0 {//N A PLUS RIEN A FAIRE ICI NI ENEMY NI POSSESSEUR
//if alarm[9] &lt;= 700 {//TROP LONGTEMPS QUE T EN ATAK FAIS RAMER
suislepatron = 0
dir = point_direction(room_width/2,room_height/2,xx,yy)
if point_distance(room_width/2,room_height/2,xx,yy) &lt; 2000*obj_planetary.optiportabletaille {if tracelerp &lt; 50 {tracelerp += 0.01}}else{
if tracelerp &lt; 50 {tracelerp += 1}}
if point_distance(room_width/2,room_height/2,xx,yy) &gt; 5000*obj_planetary.optiportabletaille {instance_destroy();}
if tracelerp &gt; 5 &amp;&amp; obj_planetary.planetnowid = planetparent &amp;&amp; obj_planetary.echelle = 0 {
part_type_shape(obj_planetary.particlec,pt_shape_flare);
part_type_color3(obj_planetary.particlec,c_white,c_blue,c_white);//33023,255,65535);
part_type_alpha2(obj_planetary.particlec,0.4,0.8);
part_type_life(obj_planetary.particlec,10,15);
part_type_blend(obj_planetary.particlec,1);
part_type_size(obj_planetary.particlec,0.02*obj_planetary.optiportabletaille,0.3*obj_planetary.optiportabletaille,-0.01,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particlec,3,4,0,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particlec,dir+177,dir+183,0,0);
part_particles_create(obj_planetary.Snamec,xx,yy,obj_planetary.particlec,trace);}
//}
image_angle += sin(degtorad(dir - image_angle)) * (random_range(1,2)*(vitesseship*trace));
if xx2 &lt; lengthdir_x(vitesseship*vargetdsgrid[7],image_angle) {xx2 += accellerationship*vargetdsgrid[7]}else if xx2 &gt; lengthdir_x(vitesseship*vargetdsgrid[7],image_angle){xx2 -= accellerationship*vargetdsgrid[7]}
if yy2 &lt; lengthdir_y(vitesseship*vargetdsgrid[7],image_angle) {yy2 += accellerationship*vargetdsgrid[7]}else if yy2 &gt; lengthdir_y(vitesseship*vargetdsgrid[7],image_angle){yy2 -= accellerationship*vargetdsgrid[7]}
//yy2 = lengthdir_y(vitesseship,image_angle)
trace = lerp(trace,tracelerp,0.1)
xx += (xx2*obj_planetary.optiportabletaille)*trace
yy += (yy2*obj_planetary.optiportabletaille)*trace
if obj_planetary.planetnowid = planetparent &amp;&amp; obj_planetary.echelle = 0 {
if type = 6 {image_xscale = 1*obj_planetary.optiportabletaille;image_yscale = image_xscale;image_index = 25;mask_index = spr_masktype3;
draw_sprite_ext(spr_ship,25,xx,yy,1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,image_angle,colorshiprgb,1)
}else if type = 7 {image_xscale = 1*obj_planetary.optiportabletaille;image_yscale = image_xscale;image_index = 26;mask_index = spr_masktype7;
draw_sprite_ext(spr_ship,26,xx,yy,1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,image_angle,colorshiprgb,1)
}else{image_xscale = 1*obj_planetary.optiportabletaille;image_yscale = image_xscale;image_index = mode-1;mask_index = sprite_index;sprite_index = spr_ship
draw_sprite_ext(spr_ship,mode-1,xx,yy,1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,image_angle,colorshiprgb,1)}
//draw_sprite_ext(spr_ship,mode-1,xx,yy,image_xscale,image_yscale,image_angle,colorshiprgb,1)
}
sprite_index = spr_ship
//if type &lt; 6 {if type &lt; 3 {mask_index = spr_masktype1;}else{mask_index = spr_masktype2;}}
image_index = mode-1
image_xscale = 1*obj_planetary.optiportabletaille
image_yscale = 1*obj_planetary.optiportabletaille
}
}
}
}

}

/*with(obj_laser){
if place_meeting(x, y, other.id) {
scr_meetlaser();
}}*/
//draw_text(x,y,enemy)

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
