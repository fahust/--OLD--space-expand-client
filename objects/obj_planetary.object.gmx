<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///JEU PLANETARY NOIR SUR FOND BLEUE 

listPlanetOwned[0] = -1;
dontSave = 0
global.dateNow = 0
global.lts = "none"
global.lfs = "none"
/*ordre des choses : 

//planete annexes
si habiter attaquer ou commercer (coloniser demare la construction de building automatique)()
si coloniser : terraformer ou miner (rajoute des arbres )


//stats
militaire (attaque de planette)
ships (commerce ,minage)
scientifique (ameliore vitesse des transportes,debloque des vaisseau et de la defense)
colonisation espace voisin (station spatial, defense aériene)


JAUGE REGLABLE sur 100
Ressource : 
si planet annex alors ressource jauge envoi les ressources vers planet mère 
ds grid planet annex - par rapport a distance de planet mere qui gagne autant qu'elle perds * (jauge/100)

ships :
baisse les ressources de la planet presente

Scientifique :
Baisse les ressources par seconde jusqu'a ce que lvl max grid scientifique soit atteints

Defense : 
baisse ressources jusqu'a lvl max atteints



*/

global.qt = 0
global.modesolo = 0

global.planetparentship = 0


colorrect1 = c_white
colorrect2 = c_white
colorrect3 = c_white
colorrect4 = c_white
colorrect5 = c_white
colorrect6 = c_white
colorrect7 = c_white
colorrect8 = c_white//
colorrect9 = c_white
colorrect10 = c_white
colorrect11 = c_white
colorrect12 = c_white
colorrect13 = c_white
colorrect14 = c_white
colorrect15 = c_white
colorrect16 = c_white
colorrect17 = c_white
colorrect18 = c_white
colorrect19 = c_white
colorrect20 = c_white
colorrect21 = c_white
colorrect22 = c_white
colorrect23 = c_white
colorrect24 = c_white
colorrect25 = c_white
colorrect26 = c_white
colorrect27 = c_white
colorrect28 = c_white
colorrect29 = c_white
colorrect30 = c_white
colorrect31 = c_white
colorrect32 = c_white
colorrect33 = c_white
colorrect34 = c_white
colorrect35 = c_white
colorrect36 = c_white
colorrect37 = c_white
colorrect38 = c_white
colorrect39 = c_white


subevent = 0
//global.Level_Max = 100;
nbrdejourdecar = 0 //PR SI attak et proprio d une planete absent plu de 7 jours ,envoyer malgré tout en changeant l atkant

nosave = 0
global.lastprivatemessage = ""
guildchannel = 1

maitredeslieu = 0

zoom = 1
zoomlerp = 1
viewxlerp = 0
viewylerp = 0
global.enginematter = 0

global.shootaudio = 0

menuplanet3 = 0

global.phpload = 1
rotaload = 0
firstsendship = 0

modetri = 1

text = "Please wait for the highscores to load...";
text2 = "";
datephp = 0
roll = 0
roll2 = 0
clickinvit = 0
keyboardcheck2 = 1
window_set_cursor(cr_none);
cursor_sprite = sprite17;

menuhelp = 0

date_set_timezone(timezone_utc);
audio_play_sound(snd_spaceloop,2,true);
randomize();
idnumbervar = floor(random_range(6,10000000))
completeedition = 1
ini_open( working_directory+"save2.ini" );
optiportabletaille = ini_read_real("game","GameSaves1",1)
moderatio = ini_read_real("game","GameSaves2",1)
savedate = ini_read_real("game","GameSaves3",date_current_datetime()*1000)
global.idfixe = ini_read_real("game","GameSaves4",idnumbervar)
global.name = ini_read_string("game","GameSaves5","Guest:"+string(idnumbervar))
global.idguild = ini_read_real("game","GameSaves6",global.idfixe)
global.idguildname = ini_read_string("game","GameSaves7","")
global.idguildinvit = ini_read_real("game","GameSaves8",0)
global.idguildinvitname = ini_read_string("game","GameSaves9","")
global.grade = ini_read_real("game","GameSaves10",0)
rcolor = ini_read_real("game","rcolor",83)
gcolor = ini_read_real("game","gcolor",41)
bcolor = ini_read_real("game","bcolor",0)
rcolor2 = ini_read_real("game","rcolor2",51)
gcolor2 = ini_read_real("game","gcolor2",26)
bcolor2 = ini_read_real("game","bcolor2",0)
dlcpris1 = ini_read_real("game","dlcpris1",0)
tech1 = ini_read_real("game","tech1",0)
tech2 = ini_read_real("game","tech2",0)
tech3 = ini_read_real("game","tech3",0)
tech4 = ini_read_real("game","tech4",0)
tech5 = ini_read_real("game","tech5",0)
tech6 = ini_read_real("game","tech6",0)
tech7 = ini_read_real("game","tech7",0)
tech8 = ini_read_real("game","tech8",0)
tech9 = ini_read_real("game","tech9",0)
tech10 = ini_read_real("game","tech10",0)
tech11 = ini_read_real("game","tech11",0)
tech12 = ini_read_real("game","tech12",0)
tech13 = ini_read_real("game","tech13",0)
tech14 = ini_read_real("game","tech14",0)
tech15 = ini_read_real("game","tech15",0)
tech16 = ini_read_real("game","tech16",0)
tech17 = ini_read_real("game","tech17",0)
tech18 = ini_read_real("game","tech18",0)
tech19 = ini_read_real("game","tech19",0)
tech20 = ini_read_real("game","tech20",0)
tech21 = ini_read_real("game","tech21",0)
tech22 = ini_read_real("game","tech22",0)
tech23 = ini_read_real("game","tech23",0)
tech24 = ini_read_real("game","tech24",0)
tech25 = ini_read_real("game","tech25",0)
tech26 = ini_read_real("game","tech26",0)
tech27 = ini_read_real("game","tech27",0)
tech28 = ini_read_real("game","tech28",0)
tech29 = ini_read_real("game","tech29",0)
tech30 = ini_read_real("game","tech30",0)
toPMssc1 = ini_read_real("game","topm1",0)
toPMssc2 = ini_read_real("game","topm2",0)
toPMssc3 = ini_read_real("game","topm3",0)
toPMssc4 = ini_read_real("game","topm4",0)
toPMssc5 = ini_read_real("game","topm5",0)
toPMssc6 = ini_read_real("game","topm6",0)
toPMssc7 = ini_read_real("game","topm7",0)
toPMrttal = ini_read_real("game","topm8",0)
toPMr1 = ini_read_real("game","topm9",0)
toPMr2 = ini_read_real("game","topm10",0)
toPMr3 = ini_read_real("game","topm11",0)
toPMr4 = ini_read_real("game","topm12",0)
toPMr5 = ini_read_real("game","topm13",0)
toPMr6 = ini_read_real("game","topm14",0)
toPMr7 = ini_read_real("game","topm15",0)
toPMr8 = ini_read_real("game","topm16",0)
toPMr9 = ini_read_real("game","topm17",0)
toPMtime = ini_read_real("game","topm18",0)

techArray[1] = tech1
techArray[2] = tech2
techArray[3] = tech3
techArray[4] = tech4
techArray[5] = tech5
techArray[6] = tech6
techArray[7] = tech7
techArray[8] = tech8
techArray[9] = tech9
techArray[10] = tech10
techArray[11] = tech11
techArray[12] = tech12
techArray[13] = tech13
techArray[14] = tech14
techArray[15] = tech15
techArray[16] = tech16
techArray[17] = tech17
techArray[18] = tech18
techArray[19] = tech19
techArray[20] = tech20
techArray[21] = tech21
techArray[22] = tech22
techArray[23] = tech23
techArray[24] = tech24
techArray[25] = tech25
techArray[26] = tech26
techArray[27] = tech27
techArray[28] = tech28
techArray[29] = tech29
techArray[30] = tech30

textSkillName[0] = "Laser technology";
textSkillName[1] = "Ship hull technology";
textSkillName[2] = "Missile technology";
textSkillName[3] = "Shield technology";
textSkillName[4] = "Alloy technology";
textSkillName[5] = "Plasma technology";
textSkillName[6] = "Combustion technology";
textSkillName[7] = "Hyperdrive technology";
textSkillName[8] = "Distortion technology";
textSkillName[9] = "Anti matter";

textSkillDesc[0] = "Improves laser weapon technology, offering considerable power gain";
textSkillDesc[1] = "Improves the spaceship's storage capacity, and allows to transport more resources";
textSkillDesc[2] = "Improves rocket armament technology for spaceship categories by disposing";
textSkillDesc[3] = "Improves the power of spaceship shield generators and planetary defences";
textSkillDesc[4] = "Improves the alloy's protection of spaceship and planetary defences";
textSkillDesc[5] = "Improves plasma weapon technology, providing absolute destructive power";
textSkillDesc[6] = "Improves spaceship combustion engines for more efficient maneuvering of spaceship";
textSkillDesc[7] = "Improves the Hyperdrive engines of spaceship, allowing faster stellar movement.";
textSkillDesc[8] = "Improves Space Distortion Engines for near-instantaneous movement of spaceship";
textSkillDesc[9] = "Improves the anti-matter generator which allows to multiply the efficiency of the resources.";


/*ds_grid_add(planetary,30,yygrid,make_colour_rgb(83,41,0))//color1
ds_grid_add(planetary,31,yygrid,make_colour_rgb(51,26,0))//color2*/
//show_message(global.idfixe);
last34 = 0

ini_close();


global.ssc1 = "0";
global.ssc2 = "0";
global.ssc3 = "0";
global.ssc4 = "0";
global.ssc5 = "0";
global.ssc6 = "0";
global.ssc7 = "0";
global.r = "0";
global.d = "0";
global.to = "0";
global.sscu = global.idfixe;
global.clickss = 0;


global.server = 1
//global.name = "Guest:"+string(global.idfixe);
keyboardcheck = 1

send_score(global.name,0);


scoreressvalid = 0
scoreshipsvalid = 0
scoresciencevalid = 0
scoredefvalid = 0
scoretotal = 0
scoreress = 0
scoreships = 0
scorescience = 0
scoredef = 0

sendship1 = 0
sendship2 = 0
sendship3 = 0
sendship4 = 0
sendship5 = 0
sendship6 = 0
sendship7 = 0
sendplanetparent = 0

strhelp[0] = "Planète
Votre planète mère peut être attaqué à tous moment mais en aucun cas être perdu contrairement aux autres planètes en cas d'échec, vous perdez 50 % de vos ressources.

Toutes les planètes de votre secteur galactique sont colonisable, et peuvent être prises par d'autres joueurs.

Si vos défenses tombent et votre nombre de vaisseaux descend en dessous de 5, vous perdrez la planète.

Tout cela peut se passer avec ou sans votre présence sur le jeu, mais en votre absence, vos troupes seront moins efficaces.

Pour coloniser une planète il vous faudra un vaisseau de type 5."

strhelp[1] = "Statistique
Pour gérer l'amélioration de votre planète vous avez un menu dans le coin en haut a droite de votre écran.
Ce menu dispose de 4 sous-menu accessible grâce a ses icônes.
Appuyer sur chacun de ses icônes pour accéder aux informations le concernant
Chacun de ses icônes est accompagné d'une jauge d'efficacité.
Ses jauges sont toutes reliées et devront être partagées pour éviter une surcharge de travail.
En gros plus vous montez une jauge, plus les autres descendent.
"strhelp[2] = "Ressources
Vos ressources sont essentielles à l'avancement de votre planète.
Il suffit de monter la jauge de ressources à un minimum de 15 %.
Pour envoyer vos vaisseaux chercher des ressources
Plus vous aurez de vos vaisseaux et plus votre technologie.
Plus vous gagnerez en ressources.
Le pourcentage de la jauge correspond à la distance des trajets.

La matière noire, quant à elle, s'accumule au fil du temps.
En allumant votre usine à graviton elle s'épuisera
En échange d'une production accélléré (10 Matière noir 
Par utilisation en échange d'un gain de 200 % de ressources).

"strhelp[3] = "Vaisseaux
Pour construire des vaisseaux, il suffit de monter la jauge correspondante.
Chaque niveau de la jauge construit un vaisseau différent.
Vous pouvez cliquer sur les différents vaisseaux présentés.
Pour lancer la production de l'un d'entre eux.
Si vous ne disposez pas des ressources nécessaire à sa construction l'icône vous l'indiquera par un clignotement rouge.
Vous pouvez faire décoller vos vaisseau en cliquant sur votre planète
Vous pouvez également séléctioner vos vaisseau en restant appuyer sur clic gauche.
Et puis les envoyer vers d'autres planètes.

"strhelp[4] = "Research and development
- Votre technologie fera la différence dans la bataille.
- Augmenter la jauge pour effectuer des recherches.
- Plus la jauge sera élevé plus la recherche vous coutera.
- Et plus votre technologie avancera plus elle sera difficile à améliorer.

"strhelp[5] = "Défense
- Vos défenses vous apporteront un grand soutien.
- Augmenter la jauge pour améliorer vos défenses.
- Elle protège vos troupes et votre planète.
- Si vous n'avez pas suffisamment de ressources rien ne se construira.

"strhelp[6] = "Highscore And Guild
- Vous ne pourrez faire aucune action entre les planètes (attaque, colonisation, envoi de troupe ) avant le chargement total du secteur galactique qui dure a peu prêt 2 a 5 minute.
- Cela sera identifié par un petit icône de chargement en bas a droite.
- Le serveur étant actuellement sur une base de données gratuite,il ce peut que le nombre de requête par heure soit dépasser.
"


strhelp[0] = "          PLANET

- Your home planet can be attacked at any time but under no circumstances be lost unlike other planets if you fail, you lose 50% of your resources.
- All the planets in your galactic sector are colonizable, and can be taken by other players.
- If your defenses fall and your number of ships drops below 5, you will lose the planet.
- All this can happen with or without your presence on the game, but in your absence, your troops will be less effective.
- To colonize a planet or moon, you will need a type 5 ship.
"
strhelp[1] = "          STATISTICS

- To manage the improvement of your planet you have a menu in the top right corner of your screen.
- This menu has 4 sub-menus accessible through its icons.
- Press each of its icons to access information about it
- Each of its icons is accompanied by an efficiency gauge.
- Its gauges are all connected and will have to be shared to avoid an overload of work.
- Basically the more you mount a gauge, the more the others go down.

"
strhelp[2] = "          RESOURCES

- Your resources are essential to the advancement of your planet.
- Simply mount the resource gauge to a minimum of 15% to send your ships to look for resources.
- The more of your ships you have, the more technology you have, the more resources you gain.
- The percentage of the gauge corresponds to the distance of the trips.
- Dark matter, on the other hand, accumulates over time.
- By turning on your graviton plant it will run out of steam
- In exchange for accelerated production (10 Black Matter by use in exchange for a 200% gain in resources).

"
strhelp[3] = "          SHIPS

- To build ships, simply mount the corresponding gauge.
- Each level of the gauge builds a different vessel.
- You can click on the different ships presented.
- To start the production of one of them.
- If you do not have the necessary resources to build it, the icon will indicate this by a red blinking.
- You can take off your ships by clicking on your planet
- You can also select your ships by holding down the left mouse button.
- And then send them to other planets.

"
strhelp[4] = "          RESEARCH AND DEVELOPMENT

- Your technology will make the difference in the battle.
- Increase the gauge for research purposes.
- The higher the gauge is, the more expensive the search will be.
- And the more advanced your technology becomes, the more difficult it will be to improve.

"
strhelp[5] = "          DEFENSES

- Your defenses will give you great support.
- Increase the gauge to improve your defenses.
- It protects your troops and your planet.
- If you do not have enough resources, nothing will be built.

"
strhelp[6] = "          HIGHSCORE AND GUILD

- You will not be able to do any action between the planets (attack, colonization, sending troops) until the galactic sector is fully loaded, which lasts about 2 to 5 minutes.
- This will be identified by a small loading icon at the bottom right.
- The server is currently on a free database, so the number of requests per hour may be higher.


"

//optiportabletaille = 1
scr_namestar();
draw_set_circle_precision(64);
optiportabletaillevar = optiportabletaille
distanceadaptsyst = 1
planetarycolor = 0
planetarycolor2 = 0
rattrapage = 1
modesun = 0
destroyplanetnow = 1
optiportabletaillelerp = optiportabletaille
jaugevar1 = c_white
jaugevar2 = c_white
jaugevar3 = c_white
jaugevar4 = c_white
alarmjaugevar1 = 0
alarmjaugevar2 = 0
alarmjaugevar3 = 0
alarmjaugevar4 = 0

xxlune1 = 0
yylune1 = 0
xxlune2 = 0
yylune2 = 0
xxlune3 = 0
yylune3 = 0


luneangle1 = 0

//moderatio = 1

planetary = ds_grid_create(300,500);
ds_grid_clear(planetary,0);
//Y = systeme stellaire
buildaffect = 0
lastbuildaffect = 500
buildaffect2 = 0
doubletap = 0
xxmouse = 0
yymouse = 0
xxmousebase = 0
yymousebase = 0
alarm[6] = random_range(500,10000)
idplanet[0] = -1
idplanet[1] = -1
idplanet[2] = -1
idplanet[3] = -1
idplanet[4] = -1

ini_open(working_directory+"save.ini");
ds_grid_read(planetary, ini_read_string("planetary", "grid", 0));
//ds_grid_read(questgrid, ini_read_string("quest", "grid", ""));
ini_close();
if ds_grid_get(planetary,7,0) &gt; 0 {}else{
alarm[0] = 2;}

//show_message(ds_grid_height(planetary)-1)
///A ENLEVER !!!!!!! POUR FAIRE DEUX BATAILLE INSTANT DANS SYST SOL
//ds_grid_set_region(planetary, 51, 0, 52, 200, 5000);
//ds_grid_set(planetary,51,0,2)//alarmattack
//ds_grid_set(planetary,52,0,100)//timeattack
//ds_grid_set(planetary,36,0,100)//timeattack
//ds_grid_set(planetary,51,4,2)//alarmattack
//ds_grid_set(planetary,52,4,50)//timeattack
//ds_grid_set(planetary,34,4,1)
//ds_grid_set(planetary,34,0,3)

//A ENLEVER !!!!!!!

///remettre les ship au sol au demarage
ds_grid_set_region(planetary, 53, 0, 60, ds_grid_height(planetary)-1, 0);
//ds_grid_set_region(planetary, 53, 0, 53, ds_grid_height(planetary)-1, 0);
var zero = 0
ds_grid_set_region(planetary, 238, 0, 239, ds_grid_height(planetary)-1, zero);
ds_grid_set_region(planetary,261,0,273,499,0)//REMETRE LES DESTROY SHIP A 0




/////STARTER PACK ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
if dlcpris1 = 0 {
 if steam_user_owns_dlc(1030120)
    {
    ds_grid_set(planetary,258,0,100000)
    ds_grid_add(planetary,45,0,20)//shiptype3nbr
    ds_grid_add(planetary,47,0,5)//shiptype5nbr
    dlcpris1 = 1
    }
}
/////STARTER PACK ////////////////////////////////////////////////////////////////////////////////////////////////////////////////




xxmousefin = 0
yymousefin = 0

xxhealth1 = 0
statschoosemenu = 0

rotaplanet = 0
echelle = 0
planetarycolor = c_black

systemstellairenow = 1
planetnowid = 0

xxmenu = 500;xxmenulerp = 500;

menuplanet = 0

totalstats = 100

randomangleorbit1 = random(360)
randomangleorbit2 = random(360)
randomangleorbit3 = random(360)
randomangleorbit4 = random(360)
randomangleorbit5 = random(360)
randomangleorbit6 = random(360)
randomangleorbit7 = random(360)
randomangleorbit8 = random(360)
randomangleorbit9 = random(360)
randomangleorbit10 = random(360)
xxorbit1 = 0
yyorbit1 = 0
xxorbit2 = 0
yyorbit2 = 0
xxorbit3 = 0
yyorbit3 = 0
xxorbit4 = 0
yyorbit4 = 0
xxorbit5 = 0
yyorbit5 = 0
xxorbit6 = 0
yyorbit6 = 0
xxorbit7 = 0
yyorbit7 = 0
xxorbit8 = 0
yyorbit8 = 0
xxorbit9 = 0
yyorbit9 = 0

xxorbitdist1 = -2
yyorbitdist1 = -2
xxorbitdist2 = -2
yyorbitdist2 = -2
xxorbitdist3 = -2
yyorbitdist3 = -2
xxorbitdist4 = -2
yyorbitdist4 = -2
xxorbitdist5 = -2
yyorbitdist5 = -2
xxorbitdist6 = -2
yyorbitdist6 = -2
xxorbitdist7 = -2
yyorbitdist7 = -2
xxorbitdist8 = -2
yyorbitdist8 = -2
xxorbitdist9 = -2
yyorbitdist9 = -2

portrait = 0
xxconstellation[1] = 1516
yyconstellation[1] = 264
xxconstellation[2] = 1704
yyconstellation[2] = 120
xxconstellation[3] = 1784
yyconstellation[3] = 324
xxconstellation[4] = 1852
yyconstellation[4] = 160

xxconstellation[5] = 1624
yyconstellation[5] = 488
xxconstellation[6] = 1836
yyconstellation[6] = 556
xxconstellation[7] = 1780
yyconstellation[7] = 660

xxconstellation[8] = 1544
yyconstellation[8] = 820
xxconstellation[9] = 1400
yyconstellation[9] = 908
xxconstellation[10] = 1244
yyconstellation[10] = 940
xxconstellation[11] = 1372
yyconstellation[11] = 1044
xxconstellation[12] = 1548
yyconstellation[12] = 952
xxconstellation[13] = 1736
yyconstellation[13] = 976

xxconstellation[14] = 1220
yyconstellation[14] = 632
xxconstellation[15] = 1512
yyconstellation[15] = 620
xxconstellation[16] = 1364
yyconstellation[16] = 472
xxconstellation[17] = 1316
yyconstellation[17] = 296
xxconstellation[18] = 1160
yyconstellation[18] = 412

xxconstellation[19] = 1664
yyconstellation[19] = 724
xxconstellation[20] = 1844
yyconstellation[20] = 812

xxconstellation[21] = 1188
yyconstellation[21] = 140
xxconstellation[22] = 984
yyconstellation[22] = 104
xxconstellation[23] = 1064
yyconstellation[23] = 232

xxconstellation[24] = 1228
yyconstellation[24] = 740
xxconstellation[25] = 1036
yyconstellation[25] = 712
xxconstellation[26] = 920
yyconstellation[26] = 584
xxconstellation[27] = 1032
yyconstellation[27] = 464

xxconstellation[28] = 524
yyconstellation[28] = 756
xxconstellation[29] = 672
yyconstellation[29] = 904
xxconstellation[30] = 920
yyconstellation[30] = 964
xxconstellation[31] = 884
yyconstellation[31] = 800
xxconstellation[32] = 772
yyconstellation[32] = 660

xxconstellation[33] = 436
yyconstellation[33] = 116
xxconstellation[34] = 596
yyconstellation[34] = 248
xxconstellation[35] = 228
yyconstellation[35] = 120

xxconstellation[36] = 164
yyconstellation[36] = 468
xxconstellation[37] = 284
yyconstellation[37] = 652
xxconstellation[38] = 104
yyconstellation[38] = 612
xxconstellation[39] = 412
yyconstellation[39] = 564

xxconstellation[40] = 520
yyconstellation[40] = 992
xxconstellation[41] = 276
yyconstellation[41] = 1008
xxconstellation[42] = 368
yyconstellation[42] = 840
xxconstellation[43] = 172
yyconstellation[43] = 800

xxconstellation[44] = 120
yyconstellation[44] = 244
xxconstellation[45] = 340
yyconstellation[45] = 328
xxconstellation[46] = 332
yyconstellation[46] = 44


//PAS AJOUTER
xxconstellation[47] = 813
yyconstellation[47] = 456
xxconstellation[48] = 930
yyconstellation[48] = 326
xxconstellation[49] = 796
yyconstellation[49] = 513
xxconstellation[50] = 530
yyconstellation[50] = 480

//CHAINE D ASTEORIDE
for (i = 0; i &lt; 5000; i += 1)
   {
   distring[i] = random_range(550,900)//250 vraimentmini
   dirring[i] = random(360)
   anglering[i] = random(360)
   subring[i] = floor(random_range(0,3))
   scalering[i] = random_range(0.02,0.2)
   vitessering[i] = random_range(-2,2)
   colorring[i] = choose(make_colour_rgb(83,41,0),make_colour_rgb(51,26,0))
   }
   nbrdasteoring = 400

//DOIS FAIRE 49 !!!! CONSTELLATION POUR UTILISER TOUTE LA GRID
//xxconstellation[36] = 738
//yyconstellation[36] = 388


var i;
for (i = 0; i &lt; 1000; i += 1)
   {
   xxstar[i] = random_range(0,room_width)
   yystar[i] = random_range(0,room_height)
   sizestar[i] = random_range(0.2,1.5)
   colorstar[i] = choose(c_red,c_blue,c_yellow)
   }
   
   



   
   surf = surface_create(room_width,room_height)
   surf2 = surface_create(room_width,room_height)
   scr_surface();
   //surface_free(surf);
   //scr_surface();
   
      Sname3=part_system_create();

particle3=part_type_create()
part_system_depth(Sname3,-10000000)
part_type_shape(particle3,pt_shape_flare);
part_type_direction(particle3,0,0,0,0);
part_type_orientation(particle3,0,0,0,0,1);
part_type_color3(particle3,0,0,0);//33023,255,65535);
part_type_alpha2(particle3,0.2,0.4);
part_type_scale(particle3,1,1);
part_type_gravity(particle3,0,0);
part_type_life(particle3,10,100);
part_type_blend(particle3,1);
   
   Sname=part_system_create();

particle1=part_type_create()
part_system_depth(Sname,100000)
part_type_shape(particle1,pt_shape_flare);
//part_type_size(particle1,0.3,0.35,0.05,0);//0.3,0.4,0.1,);
//part_type_speed(particle1,9,19,0.01,0);//,12,35,0.01,0);
part_type_direction(particle1,0,0,0,0);
part_type_orientation(particle1,0,0,0,0,1);
part_type_color3(particle1,0,0,0);//33023,255,65535);
part_type_alpha2(particle1,0.2,0.4);
part_type_scale(particle1,1,1);
part_type_gravity(particle1,0,0);
part_type_life(particle1,50,3000);
part_type_blend(particle1,1);

Snamec=part_system_create();
//part colo
particlec=part_type_create()
part_system_depth(Snamec,-4)
part_type_shape(particlec,pt_shape_flare);
//part_type_size(particle1,0.3,0.35,0.05,0);//0.3,0.4,0.1,);
//part_type_speed(particle1,9,19,0.01,0);//,12,35,0.01,0);
part_type_direction(particlec,0,0,0,0);
part_type_orientation(particlec,0,0,0,0,1);
part_type_color3(particlec,0,0,0);//33023,255,65535);
part_type_alpha2(particlec,0.2,0.4);
part_type_scale(particlec,1,1);
part_type_gravity(particlec,0,0);
part_type_life(particlec,50,3000);
part_type_blend(particlec,1);
//part colo

Snames=part_system_create();
//part soleil
particles=part_type_create()
part_system_depth(Snames,0)
part_type_shape(particles,pt_shape_flare);
//part_type_size(particle1,0.3,0.35,0.05,0);//0.3,0.4,0.1,);
//part_type_speed(particle1,9,19,0.01,0);//,12,35,0.01,0);
part_type_direction(particles,0,0,0,0);
part_type_orientation(particles,0,0,0,0,1);
part_type_color3(particles,0,0,0);//33023,255,65535);
part_type_alpha2(particles,0.2,0.4);
part_type_scale(particles,1,1);
part_type_gravity(particles,0,0);
part_type_life(particles,50,3000);
part_type_blend(particles,1);
//part soleil


//QUANTUM TRAVEL MODE SOLO
Snameqt=part_system_create();
//part soleil
particleqt=part_type_create()
part_system_depth(Snameqt,-100)
part_type_shape(particleqt,pt_shape_flare);
//part_type_size(particle1,0.3,0.35,0.05,0);//0.3,0.4,0.1,);
//part_type_speed(particle1,9,19,0.01,0);//,12,35,0.01,0);
part_type_direction(particleqt,0,0,0,0);
part_type_orientation(particleqt,0,0,0,0,1);
part_type_color3(particleqt,0,0,0);//33023,255,65535);
part_type_alpha2(particleqt,0.2,0.4);
part_type_scale(particleqt,1,1);
part_type_gravity(particleqt,0,0);
part_type_life(particleqt,50,3000);
part_type_blend(particleqt,1);
//part soleil


Snamesh=part_system_create();
//part shield
particlesh=part_type_create()
part_system_depth(Snamesh,0)
part_type_shape(particlesh,pt_shape_flare);
//part_type_size(particle1,0.3,0.35,0.05,0);//0.3,0.4,0.1,);
//part_type_speed(particle1,9,19,0.01,0);//,12,35,0.01,0);
part_type_direction(particlesh,0,0,0,0);
part_type_orientation(particlesh,0,0,0,0,1);
part_type_color3(particlesh,0,0,0);//33023,255,65535);
part_type_alpha2(particlesh,0.2,0.4);
part_type_scale(particlesh,1,1);
part_type_gravity(particlesh,0,0);
part_type_life(particlesh,50,3000);
part_type_blend(particlesh,1);
//part shield



Snameg=part_system_create();
//part gate
particleg=part_type_create()
part_system_depth(Snameg,0)
part_type_shape(particleg,pt_shape_flare);
//part_type_size(particle1,0.3,0.35,0.05,0);//0.3,0.4,0.1,);
//part_type_speed(particle1,9,19,0.01,0);//,12,35,0.01,0);
part_type_direction(particleg,0,0,0,0);
part_type_orientation(particleg,0,0,0,0,1);
part_type_color3(particleg,0,0,0);//33023,255,65535);
part_type_alpha2(particleg,0.2,0.4);
part_type_scale(particleg,1,1);
part_type_gravity(particleg,0,0);
part_type_life(particleg,50,3000);
part_type_blend(particleg,1);
//part gate

particle2=part_type_create()
part_system_depth(Sname,100000)
part_type_shape(particle2,pt_shape_flare);
//part_type_size(particle1,0.3,0.35,0.05,0);//0.3,0.4,0.1,);
//part_type_speed(particle1,9,19,0.01,0);//,12,35,0.01,0);

part_type_color3(particle2,c_red,c_yellow,c_orange);//33023,255,65535);
part_type_alpha2(particle2,0.2,0.8);
part_type_scale(particle2,1,1);
part_type_gravity(particle2,0,0);
part_type_life(particle2,60,120);
part_type_blend(particle2,1);
   
   global.Sname = part_system_create();
   
   global.surfok = 1

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>launchTravel = 0
if (global.to != planetnowid and ds_grid_get(planetary,32,global.to) == global.idfixe) or (global.to != planetnowid and global.idguild = ds_grid_get(planetary,242,planetnowid)) {
    //if real(global.to) != 0 {show_debug_message('test3')
        if real(planetnowid) = 0 {
            ds_grid_add(planetary,43,planetnowid,-global.ssc1)
            ds_grid_add(planetary,44,planetnowid,-global.ssc2)
            ds_grid_add(planetary,45,planetnowid,-global.ssc3)
            ds_grid_add(planetary,46,planetnowid,-global.ssc4)
            ds_grid_add(planetary,47,planetnowid,-global.ssc5)
            ds_grid_add(planetary,48,planetnowid,-global.ssc6)
            ds_grid_add(planetary,49,planetnowid,-global.ssc7)
            
            ds_grid_add(planetary,35,buildaffect,-(global.r))
            ds_grid_add(planetary,90,buildaffect,-floor(global.r/9))
            ds_grid_add(planetary,91,buildaffect,-floor(global.r/9))
            ds_grid_add(planetary,92,buildaffect,-floor(global.r/9))
            ds_grid_add(planetary,93,buildaffect,-floor(global.r/9))
            ds_grid_add(planetary,94,buildaffect,-floor(global.r/9))
            ds_grid_add(planetary,95,buildaffect,-floor(global.r/9))
            ds_grid_add(planetary,96,buildaffect,-floor(global.r/9))
            ds_grid_add(planetary,97,buildaffect,-floor(global.r/9))
            ds_grid_add(planetary,98,buildaffect,-floor(global.r/9))
        }
        with(obj_highscore){
            var hiscore_map, i, str;
            hiscore_map = ds_map_create();
            ds_map_set(hiscore_map,'id', other.planetnowid);
            ds_map_set(hiscore_map,'sc1', global.ssc1);
            ds_map_set(hiscore_map,'sc2', global.ssc2);
            ds_map_set(hiscore_map,'sc3', global.ssc3);
            ds_map_set(hiscore_map,'sc4', global.ssc4);
            ds_map_set(hiscore_map,'sc5', global.ssc5);
            ds_map_set(hiscore_map,'sc6', global.ssc6);
            ds_map_set(hiscore_map,'sc7', global.ssc7);
            ds_map_set(hiscore_map,'to', global.to);
            ds_map_set(hiscore_map,'d', (ds_grid_get(obj_planetary.planetary,50,global.to)/(1+(obj_planetary.techArray[8]/25)))/(1+(obj_planetary.techArray[9]/25)));//ds_grid_get(obj_planetary.planetary,50,other.planetnowid)
            ds_map_set(hiscore_map,'cu', global.idfixe);
            ds_map_set(hiscore_map,'r', global.r);
            str = json_encode(hiscore_map);
            ds_map_destroy(hiscore_map); 
            http_post_string(addr+"universe/transferShip" , str);
        }
        scr_addinfo2(22,ds_grid_get(planetary,8,global.to),planetnowid)
        if global.to = 0 {
            toPMssc1 += global.ssc1
            toPMssc2 += global.ssc2
            toPMssc3 += global.ssc3
            toPMssc4 += global.ssc4
            toPMssc5 += global.ssc5
            toPMssc6 += global.ssc6
            toPMssc7 += global.ssc7
            toPMrttal += global.r
            toPMr1 += floor(global.r/9)
            toPMr2 += floor(global.r/9)
            toPMr3 += floor(global.r/9)
            toPMr4 += floor(global.r/9)
            toPMr5 += floor(global.r/9)
            toPMr6 += floor(global.r/9)
            toPMr7 += floor(global.r/9)
            toPMr8 += floor(global.r/9)
            toPMr9 += floor(global.r/9)
            toPMtime += (ds_grid_get(obj_planetary.planetary,50,obj_planetary.planetnowid)*10)
            
            
        }
        launchTravel = 1
    scr_save()
}else if global.to != planetnowid and ds_grid_get(planetary,32,global.to) != global.idfixe and planetnowid = 0 {
    if global.ssc2+global.ssc3+global.ssc4+global.ssc5+global.ssc6+global.ssc7 &gt; 0 {
        scr_addinfo2(21,ds_grid_get(planetary,8,global.to),planetnowid)
        with(obj_highscore){
           var hiscore_map, i, str;
            hiscore_map = ds_map_create();
            ds_map_set(hiscore_map,'by', global.idfixe);
            
            /*if ds_grid_get(obj_planetary.planetary,43,0)-10 &gt; 0 {
            ds_map_set(hiscore_map,'sc1', global.ssc1);
            }else{
            ds_map_set(hiscore_map,'sc1', 0);
            }*/
            ds_map_set(hiscore_map,'sc1', 0);
            ds_map_set(hiscore_map,'sc2', global.ssc2);
            ds_map_set(hiscore_map,'sc3', global.ssc3);
            ds_map_set(hiscore_map,'sc4', global.ssc4);
            ds_map_set(hiscore_map,'sc5', global.ssc5);
            ds_map_set(hiscore_map,'sc6', global.ssc6);
            ds_map_set(hiscore_map,'sc7', global.ssc7);
            ds_map_set(hiscore_map,'cu', global.idfixe);
            ds_map_set(hiscore_map,'d', (ds_grid_get(obj_planetary.planetary,50,global.to)/(1+(obj_planetary.techArray[8]/25)))/(1+(obj_planetary.techArray[9]/25)));
            ds_map_set(hiscore_map,'idP', 0);
            ds_map_set(hiscore_map,'id', global.to);
            str = json_encode(hiscore_map);
            ds_map_destroy(hiscore_map); 
            if (ds_grid_get(obj_planetary.planetary,43,0)-10)+ds_grid_get(obj_planetary.planetary,44,0)+
            ds_grid_get(obj_planetary.planetary,45,0)+ds_grid_get(obj_planetary.planetary,46,0)+
            ds_grid_get(obj_planetary.planetary,47,0)+ds_grid_get(obj_planetary.planetary,48,0)+
            ds_grid_get(obj_planetary.planetary,49,0) &gt; 0 {
            //show_debug_message(ds_grid_get(obj_planetary.planetary,34,obj_planetary.planetnowid));
            if ds_grid_get(obj_planetary.planetary,34,obj_planetary.planetnowid) &lt; 7 {
                post = http_post_string(addr+"universe/launchattack" , str);
                ds_grid_add(obj_planetary.planetary,44,0,-global.ssc2)
                ds_grid_add(obj_planetary.planetary,45,0,-global.ssc3)
                ds_grid_add(obj_planetary.planetary,46,0,-global.ssc4)
                ds_grid_add(obj_planetary.planetary,47,0,-global.ssc5)
                ds_grid_add(obj_planetary.planetary,48,0,-global.ssc6)
                ds_grid_add(obj_planetary.planetary,49,0,-global.ssc7)
            }
            }
        }
        
        launchTravel = 1
    }
}
    if launchTravel = 1 {
        maxSendShipTravel = 0
        for (var il = 0; il &lt; 5; il += 1)
        {   
            global.il = il;
            if il = 0 {shipCatCreate = global.ssc2}
            if il = 1 {shipCatCreate = global.ssc3}
            if il = 2 {shipCatCreate = global.ssc4}
            if il = 3 {shipCatCreate = global.ssc5}
            if il = 4 {shipCatCreate = global.ssc6}
            if il = 5 {shipCatCreate = global.ssc7}
            for (i2 = 0; i2 &lt; shipCatCreate; i2 += 1)
            {
                maxSendShipTravel += 1
                if maxSendShipTravel &lt; 500 {
                    with(instance_create(x,y,obj_shipcommerce)){
                        modenew = global.il+2
                        fuyard = 1
                        partir = 2
                        trace = random_range(1,3)
                        alarm[3] = 4
                        alarm[7] = 5000
                        colorshiprgb = ds_grid_get(obj_planetary.planetary,30,planetparent)
                        colorship = ds_grid_get(other.planetary,32,other.planetnowid);enemy = 0
                        planetparent = other.planetnowid
                        vardist = ds_grid_get(other.planetary,39,other.planetnowid)
                        alarm[0] = (3000/(1+(ds_grid_get(other.planetary,74,other.planetnowid)/100)))*(1+(20/50))
                        //returnsurbase = 
                        alarm[1] = alarm[0]+100
                        rotaaleatdecol = random(360)
                        xx = room_width/2+lengthdir_x((ds_grid_get(obj_planetary.planetary,7,other.planetnowid)/25)*obj_planetary.optiportabletaille,rotaaleatdecol)
                        yy = room_height/2+lengthdir_y((ds_grid_get(obj_planetary.planetary,7,other.planetnowid)/25)*obj_planetary.optiportabletaille,rotaaleatdecol)
                        vargetdsgrid[1] = ds_grid_get(obj_planetary.planetary,51,planetparent)
                        vargetdsgrid[2] = ds_grid_get(obj_planetary.planetary,34,planetparent)
                        vargetdsgrid[3] = ((ds_grid_get(obj_planetary.planetary,7,planetparent)/25)*obj_planetary.optiportabletaille)
                        vargetdsgrid[4] = ds_grid_get(obj_planetary.planetary,32,planetparent)
                    }
                }else{break;}
            }
        }
        
        global.ssc1 = 0;
        global.ssc2 = 0;
        global.ssc3 = 0;
        global.ssc4 = 0;
        global.ssc5 = 0;
        global.ssc6 = 0;
        global.ssc7 = 0;
        global.r = 0;
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rotaload += 30
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SEND TROUPE ALLIE PVP

/*send_ship(ds_grid_get(planetary,43,sendplanetparent)+sendship1,
ds_grid_get(planetary,44,sendplanetparent)+sendship2,
ds_grid_get(planetary,45,sendplanetparent)+sendship3,
ds_grid_get(planetary,46,sendplanetparent)+sendship4,
ds_grid_get(planetary,47,sendplanetparent)+sendship5,
ds_grid_get(planetary,48,sendplanetparent)+sendship6,
ds_grid_get(planetary,49,sendplanetparent)+sendship7,
sendplanetparent)*/
//show_message(sendship1)
if firstsendship = 0 {
send_ship(sendship1,
sendship2,
sendship3,
sendship4,
sendship5,
sendship6,
sendship7,
sendplanetparent)

firstsendship = sendplanetparent

sendship1 = 0
sendship2 = 0
sendship3 = 0
sendship4 = 0
sendship5 = 0
sendship6 = 0
sendship7 = 0
sendplanetparent = 0//DESTINATION ,ne pas confondre




alarm[8] = 3
}else{

//ET ENVOI NET CODE 
ds_grid_set(planetary,81,planetnowid,date_current_datetime()*100000)
var get1 = floor(ds_grid_get(planetary,51,planetnowid))

//ENVOI
   var get2 = 
   string(ds_grid_get(planetary,231,firstsendship))+"$"+
   string(ds_grid_get(planetary,232,firstsendship))+"$"+
   string(ds_grid_get(planetary,233,firstsendship))+"$"+
   string(ds_grid_get(planetary,234,firstsendship))+"$"+
   string(ds_grid_get(planetary,235,firstsendship))+"$"+
   string(ds_grid_get(planetary,236,firstsendship))+"$"+
   string(ds_grid_get(planetary,237,firstsendship))+"$"+
   string(ds_grid_get(planetary,240,firstsendship))

var get3 = floor(ds_grid_get(planetary,34,firstsendship))
var get4 = floor(ds_grid_get(planetary,81,firstsendship))
var get5 = floor(ds_grid_get(planetary,35,firstsendship))
var get6 = floor(ds_grid_get(planetary,43,firstsendship))
var get7 = floor(ds_grid_get(planetary,44,firstsendship))
var get8 = floor(ds_grid_get(planetary,45,firstsendship))
var get9 = floor(ds_grid_get(planetary,46,firstsendship))
var get10 = floor(ds_grid_get(planetary,47,firstsendship))
var get11 = floor(ds_grid_get(planetary,48,firstsendship))
var get12 = floor(ds_grid_get(planetary,49,firstsendship))
var get13 = floor(ds_grid_get(planetary,37,firstsendship))
var get14 = floor(ds_grid_get(planetary,38,firstsendship))

   scr_ecritureplanet3(firstsendship,get1,get2,get3,get4,get5,get6,get7,get8,get9,get10,get11,get12,get13,get14);

   
   firstsendship = 0
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CALCUL ASTEORID
scr_asteoring2();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW SAVE
//optiportabletaille = 1
/*if display_get_orientation() = display_portrait
   {distanceadaptsyst = 1.5
   //room_width = 607.5
    //room_height = 1080
    //S8 = 2220 1080 //
    
    //960*640 /1.5
   //1024*768 /1.337
   //1280*800 /1.6
   //1366×768  /1.791
   //1400×1050 /1.333
   //1600×1024 /1.5625
   //1600×1200 /1.333
   //2048×1536 /1.333
   //2220 1080 /2.0555
    
    //optiportabletaille = 0.5
    if moderatio = 1 {room_width = 607.5;room_height = 1080;}
    if moderatio = 2 {room_width = 426.6;room_height = 640;}
    if moderatio = 3 {room_width = 574.4;room_height = 768;}
    if moderatio = 4 {room_width = 500;room_height = 800;}
    if moderatio = 5 {room_width = 428.8;room_height = 768;}
    if moderatio = 6 {room_width = 787.6;room_height = 1050;}
    if moderatio = 7 {room_width = 655.3;room_height = 1024;}
    if moderatio = 8 {room_width = 900.2;room_height = 1200;}
    if moderatio = 9 {room_width = 1152.2;room_height = 1536;}
    if moderatio = 10 {room_width = 525.41;room_height = 1080;}
    if xxconstellation[1] = 1516 {
   scr_constellationadapt1();
   if surface_exists(surf)
   {surface_free(surf);}
   }
    portrait = 1
    }else {//if display_get_orientation() = display_landscape {
    distanceadaptsyst = 1
    if moderatio = 1 {room_width = 1920;room_height = 1080;}
    if moderatio = 2 {room_width = 960;room_height = 640;}
    if moderatio = 3 {room_width = 1024;room_height = 768;}
    if moderatio = 4 {room_width = 1280;room_height = 800;}
    if moderatio = 5 {room_width = 1366;room_height = 768;}
    if moderatio = 6 {room_width = 1400;room_height = 1050;}
    if moderatio = 7 {room_width = 1600;room_height = 1024;}
    if moderatio = 8 {room_width = 1600;room_height = 1200;}
    if moderatio = 9 {room_width = 2048;room_height = 1536;}
    if moderatio = 10 {room_width = 2220;room_height = 1080;}
   
   //optiportabletaille = 1
   portrait = 0
   if xxconstellation[1] = 1516 {}else{
   scr_constellationadapt2();
   if surface_exists(surf)
   {surface_free(surf);}
   }
   
   }




if surface_exists(surf)
   {
   //if echelle = 2 {}else{
    
    //}
    shipencible = 0
    //selection des mobs
    if device_mouse_check_button(0, mb_left) {
    alarm[5] = 500
    xxmousefin = device_mouse_x(0);
    yymousefin = device_mouse_y(0);
    xxmouse = device_mouse_x(0);
    yymouse = device_mouse_y(0);
    
    if echelle = 0 &amp;&amp; menuplanet = 0 {
    if idplanet[1] = -1 or idplanet[1] = planetnowid 
    or idplanet[2] = planetnowid or idplanet[3] = planetnowid 
    or idplanet[4] = planetnowid {}else{
    dircolo2 = point_direction(room_width/2,room_height/2,xxmouse,yymouse)
    xxbasedir = room_width/2+lengthdir_x(1500,dircolo2)
    yybasedir = room_height/2+lengthdir_y(1500,dircolo2)
    draw_set_color(c_red);
    draw_line(xxmouse,yymouse,xxbasedir,yybasedir)
    shipencible = 1}
    draw_set_color(planetarycolor);
    draw_rectangle(xxmousebase,yymousebase,xxmousefin,yymousefin,true);
    }
    }
    
    
draw_set_font(fnt_poly);

if device_mouse_check_button(0, mb_left) {
xxmouse = device_mouse_x(0);
yymouse = device_mouse_y(0);}

if alarm[0] &lt; 0 {

//CONSTELLATION
if echelle = 2 {
if surface_exists(surf){draw_surface(surf, 0, 0);}
for (ic = 0; ic &lt; 50; ic += 1)
   {
   draw_set_color(c_white);
   if portrait = 0 {
   if ic &gt; 1 {
   if point_distance(xxconstellation[ic], yyconstellation[ic],xxconstellation[ic-1], yyconstellation[ic-1]) &lt; 350 {
   draw_line_width(xxconstellation[ic], yyconstellation[ic],xxconstellation[ic-1], yyconstellation[ic-1], 3);}}else{
   draw_set_color(c_red);}
   draw_circle(xxconstellation[ic], yyconstellation[ic], 6, false);
    }else{
    if ic &gt; 1 {
   if point_distance(xxconstellation[ic], yyconstellation[ic],xxconstellation[ic-1], yyconstellation[ic-1]) &lt; 200 {
   draw_line_width(xxconstellation[ic], yyconstellation[ic],xxconstellation[ic-1], yyconstellation[ic-1], 1);}}else{
   draw_set_color(c_red);}
   draw_circle(xxconstellation[ic], yyconstellation[ic], 6, false);
   }
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxmouse,yymouse,xxconstellation[ic], yyconstellation[ic]) &lt; 40 {
echelle = 1
systemstellairenow = ic
//show_message(systemstellairenow)//ds_grid_height(planetary)-1
scr_echelle1();
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
}}
}


}


  



//SYSTEM
if echelle = 1 {



//soleil
draw_set_alpha(0.1);
draw_set_color(c_yellow);
draw_circle(room_width/2,room_height/2,45,false);
draw_set_blend_mode( bm_subtract );
draw_circle_colour(room_width/2,room_height/2,45, c_black, c_white, 0);
draw_set_blend_mode( bm_normal );
draw_set_alpha(1);
if surface_exists(surf){draw_surface(surf, 0, 0);}
draw_circle(room_width/2,room_height/2,15,false);



//draw_circle(room_width/2,room_height/2,50,false);







   if xxorbitdist1 = -2 {}else{
   xxorbit1 = room_width/2+lengthdir_x((ds_grid_get(planetary,2,xxorbitdist1)/(150000000/200))/distanceadaptsyst,randomangleorbit1)
    yyorbit1 = room_height/2+lengthdir_y((ds_grid_get(planetary,2,xxorbitdist1)/(150000000/200))/distanceadaptsyst,randomangleorbit1)
    }if xxorbitdist2 = -2 {}else{
   xxorbit2 = room_width/2+lengthdir_x((ds_grid_get(planetary,2,xxorbitdist2)/(150000000/200))/distanceadaptsyst,randomangleorbit2)
    yyorbit2 = room_height/2+lengthdir_y((ds_grid_get(planetary,2,xxorbitdist2)/(150000000/200))/distanceadaptsyst,randomangleorbit2)
    }if xxorbitdist3 = -2 {}else{
   xxorbit3 = room_width/2+lengthdir_x((ds_grid_get(planetary,2,xxorbitdist3)/(150000000/200))/distanceadaptsyst,randomangleorbit3)
    yyorbit3 = room_height/2+lengthdir_y((ds_grid_get(planetary,2,xxorbitdist3)/(150000000/200))/distanceadaptsyst,randomangleorbit3)
    }if xxorbitdist4 = -2 {}else{
   xxorbit4 = room_width/2+lengthdir_x((ds_grid_get(planetary,2,xxorbitdist4)/(150000000/200))/distanceadaptsyst,randomangleorbit4)
    yyorbit4 = room_height/2+lengthdir_y((ds_grid_get(planetary,2,xxorbitdist4)/(150000000/200))/distanceadaptsyst,randomangleorbit4)
    }if xxorbitdist5 = -2 {}else{
   xxorbit5 = room_width/2+lengthdir_x((ds_grid_get(planetary,2,xxorbitdist5)/(150000000/200))/distanceadaptsyst,randomangleorbit5)
    yyorbit5 = room_height/2+lengthdir_y((ds_grid_get(planetary,2,xxorbitdist5)/(150000000/200))/distanceadaptsyst,randomangleorbit5)
    }if xxorbitdist6 = -2 {}else{
   xxorbit6 = room_width/2+lengthdir_x((ds_grid_get(planetary,2,xxorbitdist6)/(150000000/200))/distanceadaptsyst,randomangleorbit6)
    yyorbit6 = room_height/2+lengthdir_y((ds_grid_get(planetary,2,xxorbitdist6)/(150000000/200))/distanceadaptsyst,randomangleorbit6)
    }if xxorbitdist7 = -2 {}else{
   xxorbit7 = room_width/2+lengthdir_x((ds_grid_get(planetary,2,xxorbitdist7)/(150000000/200))/distanceadaptsyst,randomangleorbit7)
    yyorbit7 = room_height/2+lengthdir_y((ds_grid_get(planetary,2,xxorbitdist7)/(150000000/200))/distanceadaptsyst,randomangleorbit7)
    }if xxorbitdist8 = -2 {}else{
   xxorbit8 = room_width/2+lengthdir_x((ds_grid_get(planetary,2,xxorbitdist8)/(150000000/200))/distanceadaptsyst,randomangleorbit8)
    yyorbit8 = room_height/2+lengthdir_y((ds_grid_get(planetary,2,xxorbitdist8)/(150000000/200))/distanceadaptsyst,randomangleorbit8)
    }if xxorbitdist9 = -2 {}else{
   xxorbit9 = room_width/2+lengthdir_x((ds_grid_get(planetary,2,xxorbitdist9)/(150000000/200))/distanceadaptsyst,randomangleorbit9)
    yyorbit9 = room_height/2+lengthdir_y((ds_grid_get(planetary,2,xxorbitdist9)/(150000000/200))/distanceadaptsyst,randomangleorbit9)
    }

//xxorbit1 = room_width/2+lengthdir_x(ds_grid_get(planetary,2,0)/(150000000/200),randomangleorbit1)
//yyorbit1 = room_height/2+lengthdir_y(ds_grid_get(planetary,2,0)/(150000000/200),randomangleorbit1)
if device_mouse_check_button(0, mb_left) {
draw_set_color(c_red);
if idplanet[1] = xxorbitdist1 {draw_line(xxorbit1,yyorbit1,xxmouse,yymouse)}
if idplanet[1] = xxorbitdist2 {draw_line(xxorbit2,yyorbit2,xxmouse,yymouse)}
if idplanet[1] = xxorbitdist3 {draw_line(xxorbit3,yyorbit3,xxmouse,yymouse)}
if idplanet[1] = xxorbitdist4 {draw_line(xxorbit4,yyorbit4,xxmouse,yymouse)}
if idplanet[1] = xxorbitdist5 {draw_line(xxorbit5,yyorbit5,xxmouse,yymouse)}
if idplanet[1] = xxorbitdist6 {draw_line(xxorbit6,yyorbit6,xxmouse,yymouse)}
if idplanet[1] = xxorbitdist7 {draw_line(xxorbit7,yyorbit7,xxmouse,yymouse)}
if idplanet[1] = xxorbitdist8 {draw_line(xxorbit8,yyorbit8,xxmouse,yymouse)}
if idplanet[1] = xxorbitdist9 {draw_line(xxorbit9,yyorbit9,xxmouse,yymouse)}

if idplanet[2] = xxorbitdist1 {draw_line(xxorbit1,yyorbit1,xxmouse,yymouse)}
if idplanet[2] = xxorbitdist2 {draw_line(xxorbit2,yyorbit2,xxmouse,yymouse)}
if idplanet[2] = xxorbitdist3 {draw_line(xxorbit3,yyorbit3,xxmouse,yymouse)}
if idplanet[2] = xxorbitdist4 {draw_line(xxorbit4,yyorbit4,xxmouse,yymouse)}
if idplanet[2] = xxorbitdist5 {draw_line(xxorbit5,yyorbit5,xxmouse,yymouse)}
if idplanet[2] = xxorbitdist6 {draw_line(xxorbit6,yyorbit6,xxmouse,yymouse)}
if idplanet[2] = xxorbitdist7 {draw_line(xxorbit7,yyorbit7,xxmouse,yymouse)}
if idplanet[2] = xxorbitdist8 {draw_line(xxorbit8,yyorbit8,xxmouse,yymouse)}
if idplanet[2] = xxorbitdist9 {draw_line(xxorbit9,yyorbit9,xxmouse,yymouse)}

if idplanet[3] = xxorbitdist1 {draw_line(xxorbit1,yyorbit1,xxmouse,yymouse)}
if idplanet[3] = xxorbitdist2 {draw_line(xxorbit2,yyorbit2,xxmouse,yymouse)}
if idplanet[3] = xxorbitdist3 {draw_line(xxorbit3,yyorbit3,xxmouse,yymouse)}
if idplanet[3] = xxorbitdist4 {draw_line(xxorbit4,yyorbit4,xxmouse,yymouse)}
if idplanet[3] = xxorbitdist5 {draw_line(xxorbit5,yyorbit5,xxmouse,yymouse)}
if idplanet[3] = xxorbitdist6 {draw_line(xxorbit6,yyorbit6,xxmouse,yymouse)}
if idplanet[3] = xxorbitdist7 {draw_line(xxorbit7,yyorbit7,xxmouse,yymouse)}
if idplanet[3] = xxorbitdist8 {draw_line(xxorbit8,yyorbit8,xxmouse,yymouse)}
if idplanet[3] = xxorbitdist9 {draw_line(xxorbit9,yyorbit9,xxmouse,yymouse)}

if idplanet[4] = xxorbitdist1 {draw_line(xxorbit1,yyorbit1,xxmouse,yymouse)}
if idplanet[4] = xxorbitdist2 {draw_line(xxorbit2,yyorbit2,xxmouse,yymouse)}
if idplanet[4] = xxorbitdist3 {draw_line(xxorbit3,yyorbit3,xxmouse,yymouse)}
if idplanet[4] = xxorbitdist4 {draw_line(xxorbit4,yyorbit4,xxmouse,yymouse)}
if idplanet[4] = xxorbitdist5 {draw_line(xxorbit5,yyorbit5,xxmouse,yymouse)}
if idplanet[4] = xxorbitdist6 {draw_line(xxorbit6,yyorbit6,xxmouse,yymouse)}
if idplanet[4] = xxorbitdist7 {draw_line(xxorbit7,yyorbit7,xxmouse,yymouse)}
if idplanet[4] = xxorbitdist8 {draw_line(xxorbit8,yyorbit8,xxmouse,yymouse)}
if idplanet[4] = xxorbitdist9 {draw_line(xxorbit9,yyorbit9,xxmouse,yymouse)}
}




if xxorbitdist1 = -2 {}else{
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxorbit1,yyorbit1,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
planetnowid = xxorbitdist1;echelle = 0}}

part_type_size(particle1,0.05,0.05,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(particle1,0,0,0,0);//,12,35,0.01,0);
part_type_colour1(particle1,c_white);//33023,255,65535);
part_type_direction(particle1,0,0,0,0);
part_particles_create(Sname,xxorbit1,yyorbit1,particle1,1);
draw_set_color(ds_grid_get(planetary,30,xxorbitdist1));
draw_circle(xxorbit1,yyorbit1,(ds_grid_get(planetary,7,xxorbitdist1)/1000)*distanceadaptsyst,false);}

if xxorbitdist2 = -2 {}else{
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxorbit2,yyorbit2,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
planetnowid = xxorbitdist2;echelle = 0}}
part_type_size(particle1,0.05,0.05,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(particle1,0,0,0,0);//,12,35,0.01,0);
part_type_colour1(particle1,c_white);//33023,255,65535);
part_type_direction(particle1,0,0,0,0);
part_particles_create(Sname,xxorbit2,yyorbit2,particle1,1);
draw_set_color(ds_grid_get(planetary,30,xxorbitdist2));
draw_circle(xxorbit2,yyorbit2,(ds_grid_get(planetary,7,xxorbitdist2)/1000)*distanceadaptsyst,false);}

if xxorbitdist3 = -2 {}else{
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxorbit3,yyorbit3,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
planetnowid = xxorbitdist3;echelle = 0}}
part_type_size(particle1,0.05,0.05,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(particle1,0,0,0,0);//,12,35,0.01,0);
part_type_colour1(particle1,c_white);//33023,255,65535);
part_type_direction(particle1,0,0,0,0);
part_particles_create(Sname,xxorbit3,yyorbit3,particle1,1);
draw_set_color(ds_grid_get(planetary,30,xxorbitdist3));
draw_circle(xxorbit3,yyorbit3,(ds_grid_get(planetary,7,xxorbitdist3)/1000)*distanceadaptsyst,false);}

if xxorbitdist4 = -2 {}else{
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxorbit4,yyorbit4,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
planetnowid = xxorbitdist4;echelle = 0}}
part_type_size(particle1,0.05,0.05,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(particle1,0,0,0,0);//,12,35,0.01,0);
part_type_colour1(particle1,c_white);//33023,255,65535);
part_type_direction(particle1,0,0,0,0);
part_particles_create(Sname,xxorbit4,yyorbit4,particle1,1);
draw_set_color(ds_grid_get(planetary,30,xxorbitdist4));
draw_circle(xxorbit4,yyorbit4,(ds_grid_get(planetary,7,xxorbitdist4)/1000)*distanceadaptsyst,false);}

if xxorbitdist5 = -2 {}else{
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxorbit5,yyorbit5,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
planetnowid = xxorbitdist5;echelle = 0}}
part_type_size(particle1,0.05,0.05,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(particle1,0,0,0,0);//,12,35,0.01,0);
part_type_colour1(particle1,c_white);//33023,255,65535);
part_type_direction(particle1,0,0,0,0);
part_particles_create(Sname,xxorbit5,yyorbit5,particle1,1);
draw_set_color(ds_grid_get(planetary,30,xxorbitdist5));
draw_circle(xxorbit5,yyorbit5,(ds_grid_get(planetary,7,xxorbitdist5)/1000)*distanceadaptsyst,false);}

if xxorbitdist6 = -2 {}else{
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxorbit6,yyorbit6,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
planetnowid = xxorbitdist6;echelle = 0}}
part_type_size(particle1,0.05,0.05,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(particle1,0,0,0,0);//,12,35,0.01,0);
part_type_colour1(particle1,c_white);//33023,255,65535);
part_type_direction(particle1,0,0,0,0);
part_particles_create(Sname,xxorbit6,yyorbit6,particle1,1);
draw_set_color(ds_grid_get(planetary,30,xxorbitdist6));
draw_circle(xxorbit6,yyorbit6,(ds_grid_get(planetary,7,xxorbitdist6)/1000)*distanceadaptsyst,false);}

if xxorbitdist7 = -2 {}else{
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxorbit7,yyorbit7,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
planetnowid = xxorbitdist7;echelle = 0}}
part_type_size(particle1,0.05,0.05,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(particle1,0,0,0,0);//,12,35,0.01,0);
part_type_colour1(particle1,c_white);//33023,255,65535);
part_type_direction(particle1,0,0,0,0);
part_particles_create(Sname,xxorbit7,yyorbit7,particle1,1);
draw_set_color(ds_grid_get(planetary,30,xxorbitdist7));
draw_circle(xxorbit7,yyorbit7,(ds_grid_get(planetary,7,xxorbitdist7)/1000)*distanceadaptsyst,false);}

if xxorbitdist8 = -2 {}else{
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxorbit8,yyorbit8,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
planetnowid = xxorbitdist8;echelle = 0}}
part_type_size(particle1,0.05,0.05,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(particle1,0,0,0,0);//,12,35,0.01,0);
part_type_colour1(particle1,c_white);//33023,255,65535);
part_type_direction(particle1,0,0,0,0);
part_particles_create(Sname,xxorbit8,yyorbit8,particle1,1);
draw_set_color(ds_grid_get(planetary,30,xxorbitdist8));
draw_circle(xxorbit8,yyorbit8,(ds_grid_get(planetary,7,xxorbitdist8)/1000)*distanceadaptsyst,false);}

if xxorbitdist9 = -2 {}else{
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxorbit9,yyorbit9,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
planetnowid = xxorbitdist9;echelle = 0}}
part_type_size(particle1,0.05,0.05,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(particle1,0,0,0,0);//,12,35,0.01,0);
part_type_colour1(particle1,c_white);//33023,255,65535);
part_type_direction(particle1,0,0,0,0);
part_particles_create(Sname,xxorbit9,yyorbit9,particle1,1);
draw_set_color(ds_grid_get(planetary,30,xxorbitdist9));
draw_circle(xxorbit9,yyorbit9,(ds_grid_get(planetary,7,xxorbitdist9)/1000)*distanceadaptsyst,false);}


draw_sprite_ext(spr_buttonsolarsyst,1,room_width/2,50,0.3,0.3,0,c_white,1)
if device_mouse_check_button_released(0, mb_left) &amp;&amp; menuplanet = 0 {
if point_distance(room_width/2,50,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){

//surface_free(surf);
}
//scr_echelle1();
echelle = 2}}


if alarm[5] &gt; 0 {
draw_set_alpha(alarm[5]/100);
if xxorbitdist1 = -2 {}else{
textinfo = ""
if ds_grid_get(planetary,32,xxorbitdist1) = 1 {textinfo = "Your faction"}
if ds_grid_get(planetary,32,xxorbitdist1) = 2 {textinfo = "Dominion"}
if ds_grid_get(planetary,32,xxorbitdist1) = 3 {textinfo = "Xahor"}
if ds_grid_get(planetary,32,xxorbitdist1) = 4 {textinfo = "Céhènyth"}
colortext = ds_grid_get(planetary,31,xxorbitdist1)
draw_set_colour(colortext);
//draw_text_ext_colour(xxorbit1,yyorbit1,textinfo, 0, 800, colortext, colortext, colortext, colortext, 1);
draw_text(xxorbit1,yyorbit1,textinfo);}
if xxorbitdist2 = -2 {}else{

textinfo = ""
if ds_grid_get(planetary,32,xxorbitdist2) = 1 {textinfo = "Your faction"}
if ds_grid_get(planetary,32,xxorbitdist2) = 2 {textinfo = "Dominion"}
if ds_grid_get(planetary,32,xxorbitdist2) = 3 {textinfo = "Xahor"}
if ds_grid_get(planetary,32,xxorbitdist2) = 4 {textinfo = "Céhènyth"}
colortext = ds_grid_get(planetary,31,xxorbitdist2)
draw_set_colour(colortext);
//draw_text_ext_colour(xxorbit2,yyorbit2,textinfo, 0, 800, colortext, colortext, colortext, colortext, 1);}
draw_text(xxorbit2,yyorbit2,textinfo);}
if xxorbitdist3 = -2 {}else{
textinfo = ""
if ds_grid_get(planetary,32,xxorbitdist3) = 1 {textinfo = "Your faction"}
if ds_grid_get(planetary,32,xxorbitdist3) = 2 {textinfo = "Dominion"}
if ds_grid_get(planetary,32,xxorbitdist3) = 3 {textinfo = "Xahor"}
if ds_grid_get(planetary,32,xxorbitdist3) = 4 {textinfo = "Céhènyth"}
colortext = ds_grid_get(planetary,31,xxorbitdist3)
draw_set_colour(colortext);
//draw_text_ext_colour(xxorbit3,yyorbit3,textinfo, 0, 800, colortext, colortext, colortext, colortext, 1);}
draw_text(xxorbit3,yyorbit3,textinfo);}
if xxorbitdist4 = -2 {}else{
textinfo = ""
if ds_grid_get(planetary,32,xxorbitdist4) = 1 {textinfo = "Your faction"}
if ds_grid_get(planetary,32,xxorbitdist4) = 2 {textinfo = "Dominion"}
if ds_grid_get(planetary,32,xxorbitdist4) = 3 {textinfo = "Xahor"}
if ds_grid_get(planetary,32,xxorbitdist4) = 4 {textinfo = "Céhènyth"}
colortext = ds_grid_get(planetary,31,xxorbitdist4)
draw_set_colour(colortext);
draw_text(xxorbit4,yyorbit4,textinfo);}
//draw_text_ext_colour(xxorbit4,yyorbit4,textinfo, 0, 800, colortext, colortext, colortext, colortext, 1);}
if xxorbitdist5 = -2 {}else{

textinfo = ""
if ds_grid_get(planetary,32,xxorbitdist5) = 1 {textinfo = "Your faction"}
if ds_grid_get(planetary,32,xxorbitdist5) = 2 {textinfo = "Dominion"}
if ds_grid_get(planetary,32,xxorbitdist5) = 3 {textinfo = "Xahor"}
if ds_grid_get(planetary,32,xxorbitdist5) = 4 {textinfo = "Céhènyth"}
colortext = ds_grid_get(planetary,31,xxorbitdist5)
draw_set_colour(colortext);
draw_text(xxorbit5,yyorbit5,textinfo);}
//draw_text_ext_colour(xxorbit5,yyorbit5,textinfo, 0, 800, colortext, colortext, colortext, colortext, 1);}
if xxorbitdist6 = -2 {}else{

textinfo = ""
if ds_grid_get(planetary,32,xxorbitdist6) = 1 {textinfo = "Your faction"}
if ds_grid_get(planetary,32,xxorbitdist6) = 2 {textinfo = "Dominion"}
if ds_grid_get(planetary,32,xxorbitdist6) = 3 {textinfo = "Xahor"}
if ds_grid_get(planetary,32,xxorbitdist6) = 4 {textinfo = "Céhènyth"}
colortext = ds_grid_get(planetary,31,xxorbitdist6)
draw_set_colour(colortext);
draw_text(xxorbit6,yyorbit6,textinfo);}
//draw_text_ext_colour(xxorbit6,yyorbit6,textinfo, 0, 800, colortext, colortext, colortext, colortext, 1);}
if xxorbitdist7 = -2 {}else{

textinfo = ""
if ds_grid_get(planetary,32,xxorbitdist7) = 1 {textinfo = "Your faction"}
if ds_grid_get(planetary,32,xxorbitdist7) = 2 {textinfo = "Dominion"}
if ds_grid_get(planetary,32,xxorbitdist7) = 3 {textinfo = "Xahor"}
if ds_grid_get(planetary,32,xxorbitdist7) = 4 {textinfo = "Céhènyth"}
colortext = ds_grid_get(planetary,31,xxorbitdist7)
draw_set_colour(colortext);
draw_text(xxorbit7,yyorbit7,textinfo);}
//draw_text_ext_colour(xxorbit7,yyorbit7,textinfo, 0, 800, colortext, colortext, colortext, colortext, 1);}
if xxorbitdist8 = -2 {}else{

textinfo = ""
if ds_grid_get(planetary,32,xxorbitdist8) = 1 {textinfo = "Your faction"}
if ds_grid_get(planetary,32,xxorbitdist8) = 2 {textinfo = "Dominion"}
if ds_grid_get(planetary,32,xxorbitdist8) = 3 {textinfo = "Xahor"}
if ds_grid_get(planetary,32,xxorbitdist8) = 4 {textinfo = "Céhènyth"}
colortext = ds_grid_get(planetary,31,xxorbitdist8)
draw_set_colour(colortext);
draw_text(xxorbit8,yyorbit8,textinfo);}
//draw_text_ext_colour(xxorbit8,yyorbit8,textinfo, 0, 800, colortext, colortext, colortext, colortext, 1);}
if xxorbitdist9 = -2 {}else{

textinfo = ""
if ds_grid_get(planetary,32,xxorbitdist9) = 1 {textinfo = "Your faction"}
if ds_grid_get(planetary,32,xxorbitdist9) = 2 {textinfo = "Dominion"}
if ds_grid_get(planetary,32,xxorbitdist9) = 3 {textinfo = "Xahor"}
if ds_grid_get(planetary,32,xxorbitdist9) = 4 {textinfo = "Céhènyth"}
colortext = ds_grid_get(planetary,31,xxorbitdist9)
draw_set_colour(colortext);
draw_text(xxorbit9,yyorbit9,textinfo);}
//draw_text_ext_colour(xxorbit9,yyorbit9,textinfo, 0, 800, colortext, colortext, colortext, colortext, 1);}

draw_set_alpha(1);
}

}else{
part_particles_clear(particle1);
}


///PLANET 
if echelle = 0 {




draw_set_color(c_aqua);
draw_set_circle_precision(64);
//draw_sprite_ext(spr_background,0,room_width/2,room_height/2,1,1,0,c_white,1)
draw_set_alpha(0.1);

rotaplanet += ds_grid_get(planetary,13,planetnowid)/110000



//ATHMOSPHERE
draw_circle(room_width/2,room_height/2,((ds_grid_get(planetary,7,planetnowid)/25)*optiportabletaille)+((ds_grid_get(planetary,19,planetnowid)*50)*optiportabletaille),false);
draw_set_blend_mode( bm_subtract );
draw_circle_colour(room_width/2,room_height/2, ((ds_grid_get(planetary,7,planetnowid)/25)*optiportabletaille)+((ds_grid_get(planetary,19,planetnowid)*50)*optiportabletaille), c_black, c_white, 0);
draw_set_blend_mode( bm_normal );
draw_circle(room_width/2,room_height/2,((ds_grid_get(planetary,7,planetnowid)/25)*optiportabletaille)+((ds_grid_get(planetary,19,planetnowid)*2)*optiportabletaille),false);

draw_set_alpha(1);
if shipencible = 1 {

if point_distance(room_width/2,room_height/2,xxmouse,yymouse) &lt; ((ds_grid_get(planetary,7,planetnowid)/25)*optiportabletaille) {
draw_set_color(c_red);
draw_set_halign(fa_center);
if ds_grid_get(planetary,32,planetnowid) = 0 {
draw_text(room_width/2,room_height-(room_height/20),"Colonize with Ship Type-V")}
if ds_grid_get(planetary,32,planetnowid) = 1 {
draw_text(room_width/2,room_height-(room_height/20),"Send spaceships")}
if ds_grid_get(planetary,32,planetnowid) &gt; 1 {
draw_text(room_width/2,room_height-(room_height/20),"Attack !")}
draw_set_alpha(0.2);
draw_circle(room_width/2,room_height/2,((ds_grid_get(planetary,7,planetnowid)/25)*optiportabletaille)+150,false);
draw_set_halign(fa_left);
}}
draw_set_alpha(1);

if surface_exists(surf){
draw_surface(surf, 0, 0);}


planetarycolor = ds_grid_get(planetary,30,planetnowid)
planetarycolor2 = ds_grid_get(planetary,31,planetnowid)
draw_set_color(planetarycolor);
///LUNE
luneangle1 += ds_grid_get(planetary,13,planetnowid)/110000
//draw_circle(room_width/2+lengthdir_x(((ds_grid_get(planetary,84,planetnowid)/25)*optiportabletaille),luneangle1),room_height/2+lengthdir_y(((ds_grid_get(planetary,84,planetnowid)/25)*optiportabletaille),luneangle1),((ds_grid_get(planetary,83,planetnowid)/25)*optiportabletaille),false);
draw_circle(room_width/2+lengthdir_x(((10000/25)*optiportabletaille),luneangle1),
room_height/2+lengthdir_y(((10000/25)*optiportabletaille),luneangle1),
((700/25)*optiportabletaille),false);


draw_circle_colour(room_width/2,room_height/2,((ds_grid_get(planetary,7,planetnowid)/25)*optiportabletaille), planetarycolor2, planetarycolor, 0);
//draw_set_blend_mode( bm_add );
draw_set_alpha(1);
//draw_sprite_ext(spr_decals,0,room_width/2,room_height/2,1,1,0,c_white,1)
draw_circle_colour(room_width/2,room_height/2, ((ds_grid_get(planetary,7,planetnowid)/26)*optiportabletaille), planetarycolor, planetarycolor2, 0);
//draw_set_blend_mode( bm_normal );
//draw_circle(room_width/2,room_height/2,(ds_grid_get(planetary,7,0)/25),false);

var i;
for (i = 0; i &lt; 360; i += 10)
   {
   subimgvar = ds_grid_get(planetary,99+(i/5),planetnowid)
   
   if subimgvar = 7 or subimgvar = 8 {xscale = 1}else{xscale = 0.4}
   xscale = 0.7
   draw_sprite_ext(spr_build,subimgvar,room_width/2+lengthdir_x(((ds_grid_get(planetary,7,planetnowid)/25-5)*optiportabletaille),i+rotaplanet),room_height/2+lengthdir_y(((ds_grid_get(planetary,7,planetnowid)/25-5)*optiportabletaille),i+rotaplanet),xscale*obj_planetary.optiportabletaille,xscale*obj_planetary.optiportabletaille,i+rotaplanet,planetarycolor2,1)
   }
   
   var i;
for (i = 5; i &lt; 360; i += 10)
   {
   subimgvar = ds_grid_get(planetary,99+(i/5),planetnowid)
   
   if subimgvar = 20 or subimgvar = 8 {xscale = 1}else{xscale = 0.5}
   xscale = 0.5
   draw_sprite_ext(spr_build,subimgvar,room_width/2+lengthdir_x(((ds_grid_get(planetary,7,planetnowid)/25-5)*optiportabletaille),i+rotaplanet),room_height/2+lengthdir_y(((ds_grid_get(planetary,7,planetnowid)/25-5)*optiportabletaille),i+rotaplanet),xscale*obj_planetary.optiportabletaille,xscale*obj_planetary.optiportabletaille,i+rotaplanet,planetarycolor,1)
   }
   


   //draw_sprite_ext(spr_build,21,room_width/2+lengthdir_x(ds_grid_get(planetary,7,planetnowid)/25+120,i+rotaplanet),room_height/2+lengthdir_y(ds_grid_get(planetary,7,planetnowid)/25+120,i+rotaplanet),xscale,xscale,i+rotaplanet,planetarycolor2,1)

//draw_sprite_ext(spr_build,subimgvar,room_width/2+lengthdir_x(249,0),room_height/2+lengthdir_y(249,0),1,1,0,c_black,1)
//draw_sprite_ext(spr_build,subimgvar,room_width/2+lengthdir_x(249,5),room_height/2+lengthdir_y(249,5),1,1,5,c_black,1)
//draw_sprite_ext(spr_build,subimgvar,room_width/2+lengthdir_x(249,10),room_height/2+lengthdir_y(249,10),1,1,10,c_black,1)




draw_sprite_ext(spr_buttonsolarsyst,0,room_width/2,50,0.2,0.2,0,c_white,1)
if device_mouse_check_button_released(0, mb_left) &amp;&amp; menuplanet = 0{
if point_distance(room_width/2,50,xxmouse,yymouse) &lt; 50 {
scr_echelle1();
echelle = 1}}







//

}
//draw_sprite_ext(spr_engrenage,0,room_width-(room_width/20),(room_height/20),1,1,0,planetarycolor2,1)


}



   }else{
   if echelle = 2 {
   scr_surface();

   }else{
   scr_surface();
   }
   
  }
  
  //d = date_compare_date(date_create_datetime( 2019, 1, 15, 11, 4, 0 ), date_current_datetime());
  
  //draw_text(room_width/2,150,d)
  //}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ASTEORID

coter = choose(1,2,3,4)
xxa = 0
yya = 0
if coter = 1 {xxa = random_range(-500,room_width+500);yya = -500}
if coter = 2 {xxa = random_range(-500,room_width+500);yya = room_height+500}
if coter = 3 {xxa = -500;yya = random_range(-500,room_height+500)}
if coter = 4 {xxa = room_width+500;yya = random_range(-500,room_height+500)}
with(instance_create(xxa,yya,obj_asteorid)){planetparent = other.planetnowid
image_angle = point_direction(x,y,room_width/2,room_height/2)+random_range(90,-90)
}

alarm[6] = random_range(10,ds_grid_get(planetary,71,planetnowid))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INTERACT OBJ EXPLICATION
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///EMPECHER ACTION PLANET
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///doubletap
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//CHANGER D'attaquant



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CREATE SHIP



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_grid_resize(planetary,300,500)
   ///GRID ECRITURE FIRST TIME
yygrid = 0
ds_grid_add(planetary,0,yygrid,0)//planetnowid = Y GRID
ds_grid_add(planetary,1,yygrid,4)//Type 1//Asteroid 3//planet morte 4//planet vivante 5//gazeuze 6//etoile
ds_grid_add(planetary,2,yygrid,150000000)//distance soleil ou du parent M de km
ds_grid_add(planetary,3,yygrid,0)//idparent
ds_grid_add(planetary,4,yygrid,0)//Anneau taille ,si 0 pas d anneau
ds_grid_add(planetary,5,yygrid,1)//atmospherevalable //1 ok
ds_grid_add(planetary,6,yygrid,3)//niveau de vegetation
ds_grid_add(planetary,7,yygrid,6000)//taille de la planet
ds_grid_add(planetary,8,yygrid,"Egaeys.I")//name
ds_grid_add(planetary,9,yygrid,26)//Velocity 26 km/s
ds_grid_add(planetary,10,yygrid,1)//Mass / 1 earth
ds_grid_add(planetary,11,yygrid,6371 )//  radius km
ds_grid_add(planetary,12,yygrid,1013)//Surface pressure 1013.25 mbar
ds_grid_add(planetary,13,yygrid,1100)//rotation 1100 km/h
ds_grid_add(planetary,14,yygrid,123399)//Radiative power
ds_grid_add(planetary,15,yygrid,12)//Surface temperature 38 °c
ds_grid_add(planetary,16,yygrid,0.6)//Infrared Emissivity
ds_grid_add(planetary,17,yygrid,0.48)//albedo
ds_grid_add(planetary,18,yygrid,0.25)//Magnetic field 0.300 gauss
ds_grid_add(planetary,19,yygrid,4)//Magnetosphere 2.50 radius
ds_grid_add(planetary,20,yygrid,9.72)//surface gravity 6.11 m/s2
ds_grid_add(planetary,21,yygrid,0.005)//Inclination 0.005
ds_grid_add(planetary,22,yygrid,4.6)//Age 4.60 Gyears
ds_grid_add(planetary,23,yygrid,1)//nbr Station spatial en orbite
ds_grid_add(planetary,24,yygrid,78)//air nitrogen
ds_grid_add(planetary,25,yygrid,21)//air oxygen
ds_grid_add(planetary,26,yygrid,1)//Air argon
ds_grid_add(planetary,27,yygrid,0.04)//Air Carbon dioxide
ds_grid_add(planetary,28,yygrid,1)//system stellaire number
ds_grid_add(planetary,29,yygrid,make_colour_rgb(83,41,0))//coloratmo
ds_grid_add(planetary,30,yygrid,make_colour_rgb(83,41,0))//color1
ds_grid_add(planetary,31,yygrid,make_colour_rgb(51,26,0))//color2
ds_grid_add(planetary,32,yygrid,global.idfixe)//COLONISER OU NON
ds_grid_add(planetary,33,yygrid,0)//alarmcolonisation
ds_grid_add(planetary,34,yygrid,2)//prochain attaque enemi id
ds_grid_add(planetary,35,yygrid,5000)//STATSressource
ds_grid_add(planetary,36,yygrid,5)//STATSships
ds_grid_add(planetary,37,yygrid,2)//STATSscientifique
ds_grid_add(planetary,38,yygrid,1)//STATSdefense
ds_grid_add(planetary,39,yygrid,0)//STATSressourcevar//JAUGE 
ds_grid_add(planetary,40,yygrid,0)//STATSshipsvar//JAUGE 
ds_grid_add(planetary,41,yygrid,0)//STATSscientifiquevar//JAUGE 
ds_grid_add(planetary,42,yygrid,0)//STATSdefensevar//JAUGE 
ds_grid_add(planetary,43,yygrid,5)//shiptype1nbr
ds_grid_add(planetary,44,yygrid,3)//shiptype2nbr
ds_grid_add(planetary,45,yygrid,2)//shiptype3nbr
ds_grid_add(planetary,46,yygrid,0)//shiptype4nbr
ds_grid_add(planetary,47,yygrid,0)//shiptype5nbr
ds_grid_add(planetary,48,yygrid,0)//shiptype6nbr
ds_grid_add(planetary,49,yygrid,0)//shiptype7nbr
ds_grid_add(planetary,50,yygrid,0)//distplanetmere en M(temps pour commerce , attaque ,negociation)
ds_grid_add(planetary,51,yygrid,35)//alarmattack
ds_grid_add(planetary,52,yygrid,10)//timeattack
ds_grid_add(planetary,53,yygrid,0)//ttalvarshipinspace
ds_grid_add(planetary,54,yygrid,0)//shiptype1flight
ds_grid_add(planetary,55,yygrid,0)//shiptype2flight
ds_grid_add(planetary,56,yygrid,0)//shiptype3flight
ds_grid_add(planetary,57,yygrid,0)//shiptype4flight
ds_grid_add(planetary,58,yygrid,0)//shiptype5flight
ds_grid_add(planetary,59,yygrid,0)//shiptype6flight
ds_grid_add(planetary,60,yygrid,0)//shiptype7flight
ds_grid_add(planetary,61,yygrid,0)//stationdef1
ds_grid_add(planetary,62,yygrid,0)//stationdef2
ds_grid_add(planetary,63,yygrid,0)//stationdef3
ds_grid_add(planetary,64,yygrid,0)//stationdef4
ds_grid_add(planetary,65,yygrid,0)//stationdef5
ds_grid_add(planetary,66,yygrid,0)//stationdef6
ds_grid_add(planetary,67,yygrid,0)//stationdef7
ds_grid_add(planetary,68,yygrid,0)//stationdef8
ds_grid_add(planetary,69,yygrid,0)//stationdef9
ds_grid_add(planetary,70,yygrid,0)//stationdef10
ds_grid_add(planetary,71,yygrid,3000)//ACTIVITE ASTEORIDE
ds_grid_add(planetary,72,yygrid,0)//Ship attack Bonus
ds_grid_add(planetary,73,yygrid,0)//Ship hull Bonus 
ds_grid_add(planetary,74,yygrid,0)//Ship speed bonus
ds_grid_add(planetary,75,yygrid,0)//Scan (vie des ship afficher distance planete)
ds_grid_add(planetary,76,yygrid,0)//stationdef6
ds_grid_add(planetary,77,yygrid,0)//stationdef7
ds_grid_add(planetary,78,yygrid,0)//stationdef8
ds_grid_add(planetary,79,yygrid,0)//stationdef9
ds_grid_add(planetary,80,yygrid,0)//stationdef10
ds_grid_add(planetary,81,yygrid,date_current_datetime()*100000)//datesave
ds_grid_add(planetary,82,yygrid,0)//planet identifier ou non (eclaireur need)
ds_grid_add(planetary,83,yygrid,random_range(600,2500))//taille de lune (si 0 exist pas)
ds_grid_add(planetary,84,yygrid,400)//distancelune
ds_grid_add(planetary,85,yygrid,0)//vivante
ds_grid_add(planetary,86,yygrid,0)//color
ds_grid_add(planetary,87,yygrid,0)//nbr de defense de la lune
ds_grid_add(planetary,88,yygrid,0)//
ds_grid_add(planetary,89,yygrid,0)//shield bonus
ds_grid_add(planetary,101,yygrid,0)//atk t0
ds_grid_add(planetary,102,yygrid,0)//atk t2
ds_grid_add(planetary,103,yygrid,0)//atk t3
ds_grid_add(planetary,104,yygrid,0)//atk t4
ds_grid_add(planetary,105,yygrid,0)//atk t5//shield
ds_grid_add(planetary,106,yygrid,0)//atk t6


//ds_grid_add(planetary,82,yygrid,0)//stationdef10


//ressource
ds_grid_add(planetary,90,yygrid,100)//iron
ds_grid_add(planetary,91,yygrid,100)//Silicate
ds_grid_add(planetary,92,yygrid,100)//Crystal
ds_grid_add(planetary,93,yygrid,100)//Hydrogen
ds_grid_add(planetary,94,yygrid,100)//Rhodium
ds_grid_add(planetary,95,yygrid,100)//Gold
ds_grid_add(planetary,96,yygrid,100)//Plutonium
ds_grid_add(planetary,97,yygrid,100)//Platine
ds_grid_add(planetary,98,yygrid,100)//Anti-matter 
ds_grid_add(planetary,200,yygrid,550)
ds_grid_add(planetary,201,yygrid,900)
//ds_grid_add(planetary,200,yygrid,ds_grid_get(planetary,84,yygrid)+random_range(200,600))//distringmin
//ds_grid_add(planetary,201,yygrid,ds_grid_get(planetary,200,yygrid)+random_range(50,700))//distringmax
ds_grid_add(planetary,202,yygrid,500)//nbrasteoring
ds_grid_add(planetary,203,yygrid,0.2)//scalering 0.2 max 0.002 min
ds_grid_set(planetary,204,yygrid,100)//si hpplanet &lt; 0 deviens champ d asteoride pour mission
ds_grid_add(planetary,211,yygrid,0)//hp moonturret1
ds_grid_add(planetary,212,yygrid,0)//hp moonturret2
ds_grid_add(planetary,213,yygrid,0)//hp moonturret3
ds_grid_add(planetary,214,yygrid,0)//hp moonturret4
ds_grid_add(planetary,215,yygrid,0)//hp moonturret1
ds_grid_add(planetary,216,yygrid,0)//BACKGROUND
//EVENT
ds_grid_add(planetary,217,yygrid,random_range(700,2100))//dist
ds_grid_add(planetary,218,yygrid,random(360))//angle
ds_grid_add(planetary,219,yygrid,choose(1,2,3))//eventtype //1 enemy //2 obj a recuperer //3 colonie de réfugier //pirate attaque commerce
ds_grid_add(planetary,220,yygrid,15)//nombre
ds_grid_add(planetary,221,yygrid,random_range(55,75))//alarmevent
ds_grid_add(planetary,222,yygrid,0)//launchevent
ds_grid_add(planetary,230,yygrid,0)//nameplanetfaction &gt; 5
//ds_grid_add(planetary,231,yygrid,0)//temps que le joueur a accumuler sur la save ,envoyer 
ds_grid_add(planetary,231,yygrid,5)//shipatak1
ds_grid_add(planetary,232,yygrid,3)//shipatak2
ds_grid_add(planetary,233,yygrid,2)//shipatak3
ds_grid_add(planetary,234,yygrid,1)//shipatak4
ds_grid_add(planetary,235,yygrid,1)//shipatak5
ds_grid_add(planetary,236,yygrid,0)//shipatak6
ds_grid_add(planetary,237,yygrid,0)//shipatak7
ds_grid_add(planetary,238,yygrid,0)//nbrshipdetruis
ds_grid_add(planetary,239,yygrid,0)//nbrshiplancer
ds_grid_add(planetary,240,yygrid,0)//variableflottescience
ds_grid_add(planetary,241,yygrid,"")//ALLIANCE GUILD NAME PLANET
ds_grid_set(planetary,242,yygrid,0)//ALLIANCE GUILD ID PLANET
ds_grid_set(planetary,250,yygrid,0)//RECEPTION DE FLOTTE ALLIE TYPE 1 
ds_grid_set(planetary,251,yygrid,0)//RECEPTION DE FLOTTE ALLIE TYPE 2
ds_grid_set(planetary,252,yygrid,0)//RECEPTION DE FLOTTE ALLIE TYPE 3 
ds_grid_set(planetary,253,yygrid,0)//RECEPTION DE FLOTTE ALLIE TYPE 4 
ds_grid_set(planetary,254,yygrid,0)//RECEPTION DE FLOTTE ALLIE TYPE 5 
ds_grid_set(planetary,255,yygrid,0)//RECEPTION DE FLOTTE ALLIE TYPE 6 
ds_grid_set(planetary,256,yygrid,0)//RECEPTION DE FLOTTE ALLIE TYPE 7 
ds_grid_set(planetary,257,yygrid,0)//RECEPTION DE FLOTTE ALLIE TIME
ds_grid_set(planetary,258,yygrid,0)//MATIERE NOIR

ds_grid_set(planetary,260,yygrid,0)//destroyshipdef/type1
ds_grid_set(planetary,261,yygrid,0)//destroyshipdef/type2
ds_grid_set(planetary,262,yygrid,0)//destroyshipdef/type3
ds_grid_set(planetary,263,yygrid,0)//destroyshipdef/type4
ds_grid_set(planetary,264,yygrid,0)//destroyshipdef/type5
ds_grid_set(planetary,265,yygrid,0)//destroyshipdef/type6
ds_grid_set(planetary,266,yygrid,0)//destroyshipdef/type7

ds_grid_set(planetary,267,yygrid,0)//destroyshipatk/type1
ds_grid_set(planetary,268,yygrid,0)//destroyshipatk/type2
ds_grid_set(planetary,269,yygrid,0)//destroyshipatk/type3
ds_grid_set(planetary,270,yygrid,0)//destroyshipatk/type4
ds_grid_set(planetary,271,yygrid,0)//destroyshipatk/type5
ds_grid_set(planetary,272,yygrid,0)//destroyshipatk/type6
ds_grid_set(planetary,273,yygrid,0)//destroyshipatk/type7
ds_grid_add(planetary,280,yygrid,0)//planetdef1
ds_grid_add(planetary,281,yygrid,0)//planetdef2
ds_grid_add(planetary,282,yygrid,0)//planetdef3
ds_grid_add(planetary,283,yygrid,0)//planetdef4
ds_grid_add(planetary,284,yygrid,0)//planetdef5
ds_grid_add(planetary,285,yygrid,0)//planetdef6
ds_grid_add(planetary,286,yygrid,0)//planetdef7
ds_grid_add(planetary,287,yygrid,0)//planetdef8
ds_grid_add(planetary,288,yygrid,0)//planetdef9
ds_grid_add(planetary,289,yygrid,0)//planetdef10
ds_grid_add(planetary,290,yygrid,0)//ressourceaddsendstock
randomize();
var i;
for (i = 0; i &lt; 360; i += 5)
   {
   chooseobj[1] = choose(20,10,0)
chooseobj[2] = choose(21,11,1)
chooseobj[3] = choose(22,12,2)
chooseobj[4] = choose(23,13,3)
chooseobj[5] = choose(24,14,4)
chooseobj[6] = choose(25,15,1)
chooseobj[7] = choose(26,29,2)
chooseobj[8] = choose(27,29,3)
chooseobj[9] = choose(28,29,4)
chooseobj[10] = choose(29,29,5)
   ds_grid_add(planetary,100+(i/5),yygrid,choose(chooseobj[1],chooseobj[2],chooseobj[3],chooseobj[4],chooseobj[5],chooseobj[6],chooseobj[7],chooseobj[8],chooseobj[9],chooseobj[10]))
   }
   
   
   //2 eme
   
   yygrid = 1
ds_grid_add(planetary,0,yygrid,1)//id
ds_grid_add(planetary,1,yygrid,4)//Type 1//Asteroid 3//planet morte 4//planet vivante 5//gazeuze 6//etoile
ds_grid_add(planetary,2,yygrid,73000000)//distance soleil ou du parent M de km
ds_grid_add(planetary,3,yygrid,0)//idparent
ds_grid_add(planetary,4,yygrid,0)//Anneau taille ,si 0 pas d anneau
ds_grid_add(planetary,5,yygrid,0)//atmosphere valable
ds_grid_add(planetary,6,yygrid,3)//niveau de vegetation
ds_grid_add(planetary,7,yygrid,4500)//taille de la planet
ds_grid_add(planetary,8,yygrid,"")//name
ds_grid_add(planetary,9,yygrid,26)//Velocity 26 km/s
ds_grid_add(planetary,10,yygrid,1)//Mass / 1 earth
ds_grid_add(planetary,11,yygrid,6371 )//  radius km
ds_grid_add(planetary,12,yygrid,random_range(500,1230))//Surface pressure 1013.25 mbar
ds_grid_add(planetary,13,yygrid,1100)//rotation 1100 km/h
ds_grid_add(planetary,14,yygrid,random_range(103399,153399))//Radiative power
ds_grid_add(planetary,15,yygrid,random_range(-154,352))//Surface temperature 38 °c
ds_grid_add(planetary,16,yygrid,0.6)//Infrared Emissivity
ds_grid_add(planetary,17,yygrid,0.48)//albedo
ds_grid_add(planetary,18,yygrid,random_range(0.01,1))//Magnetic field 0.300 gauss
ds_grid_add(planetary,19,yygrid,random_range(0.1,6))//Magnetosphere 2.50 radius
ds_grid_add(planetary,20,yygrid,9.72)//surface gravity 6.11 m/s2
ds_grid_add(planetary,21,yygrid,0.005)//Inclination 0.005
ds_grid_add(planetary,22,yygrid,random_range(1,5))//Age 4.60 Gyears
ds_grid_add(planetary,23,yygrid,1)//Station spatial en orbite
ds_grid_add(planetary,24,yygrid,random_range(40,99))//air nitrogen
ds_grid_add(planetary,25,yygrid,random_range(0.5,44))//air oxygen
ds_grid_add(planetary,26,yygrid,random_range(0.1,5))//Air argon
ds_grid_add(planetary,27,yygrid,random_range(0.01,1))//Air Carbon dioxide
ds_grid_add(planetary,28,yygrid,1)//system stellaire number
ds_grid_add(planetary,29,yygrid,make_colour_rgb(83,41,0))//coloratmo
ds_grid_add(planetary,30,yygrid,make_colour_rgb(0,172,230))//color1
ds_grid_add(planetary,31,yygrid,make_colour_rgb(0,77,102))//color2
ds_grid_add(planetary,32,yygrid,0)//COLONISER OU NON
ds_grid_add(planetary,33,yygrid,0)//alarmcolonisation
ds_grid_add(planetary,34,yygrid,3)//prochain attaque enemi
ds_grid_add(planetary,35,yygrid,0)//STATSressource
ds_grid_add(planetary,36,yygrid,0)//STATSships
ds_grid_add(planetary,37,yygrid,0)//STATSscientifique
ds_grid_add(planetary,38,yygrid,0)//STATSdefense
ds_grid_add(planetary,39,yygrid,0)//STATSressourcevar//JAUGE 
ds_grid_add(planetary,40,yygrid,0)//STATSshipsvar//JAUGE 
ds_grid_add(planetary,41,yygrid,0)//STATSscientifiquevar//JAUGE 
ds_grid_add(planetary,42,yygrid,0)//STATSdefensevar//JAUGE 
ds_grid_add(planetary,43,yygrid,0)//shiptype1nbr
ds_grid_add(planetary,44,yygrid,0)//shiptype2nbr
ds_grid_add(planetary,45,yygrid,0)//shiptype3nbr
ds_grid_add(planetary,46,yygrid,0)//shiptype4nbr
ds_grid_add(planetary,47,yygrid,0)//shiptype5nbr
ds_grid_add(planetary,48,yygrid,0)//shiptype6nbr
ds_grid_add(planetary,49,yygrid,0)//shiptype7nbr
ds_grid_add(planetary,50,yygrid,155)//distplanetmere en M(temps pour commerce , attaque ,negociation)
ds_grid_add(planetary,51,yygrid,500)//alarmattack
ds_grid_add(planetary,52,yygrid,10)//timeattack
ds_grid_add(planetary,53,yygrid,0)//ttalvarshipinspace
ds_grid_add(planetary,54,yygrid,0)//shiptype1flight
ds_grid_add(planetary,55,yygrid,0)//shiptype2flight
ds_grid_add(planetary,56,yygrid,0)//shiptype3flight
ds_grid_add(planetary,57,yygrid,0)//shiptype4flight
ds_grid_add(planetary,58,yygrid,0)//shiptype5flight
ds_grid_add(planetary,59,yygrid,0)//shiptype6flight
ds_grid_add(planetary,60,yygrid,0)//shiptype7flight
ds_grid_add(planetary,61,yygrid,0)//stationdef1
ds_grid_add(planetary,62,yygrid,0)//stationdef2
ds_grid_add(planetary,63,yygrid,0)//stationdef3
ds_grid_add(planetary,64,yygrid,0)//stationdef4
ds_grid_add(planetary,65,yygrid,0)//stationdef5
ds_grid_add(planetary,66,yygrid,0)//stationdef6
ds_grid_add(planetary,67,yygrid,0)//stationdef7
ds_grid_add(planetary,68,yygrid,0)//stationdef8
ds_grid_add(planetary,69,yygrid,0)//stationdef9
ds_grid_add(planetary,70,yygrid,0)//stationdef10
ds_grid_add(planetary,71,yygrid,1500)//ACTIVITE ASTEORIDE
ds_grid_add(planetary,81,yygrid,0)//datesave
ds_grid_add(planetary,89,yygrid,0)//shield bonus
ds_grid_add(planetary,101,yygrid,0)//atk t0
ds_grid_add(planetary,102,yygrid,0)//atk t2
ds_grid_add(planetary,103,yygrid,0)//atk t3
ds_grid_add(planetary,104,yygrid,0)//atk t4
ds_grid_add(planetary,105,yygrid,0)//atk t5
ds_grid_add(planetary,106,yygrid,0)//atk t6


//ressource
ds_grid_add(planetary,90,yygrid,0)//iron
ds_grid_add(planetary,91,yygrid,0)//Silicate
ds_grid_add(planetary,92,yygrid,0)//Water
ds_grid_add(planetary,93,yygrid,0)//Hydrogen
ds_grid_add(planetary,94,yygrid,0)//Hydrogen
ds_grid_add(planetary,95,yygrid,0)//Hydrogen
ds_grid_add(planetary,96,yygrid,0)//Hydrogen
ds_grid_add(planetary,97,yygrid,0)//Hydrogen
ds_grid_add(planetary,98,yygrid,0)//Hydrogen


randomize();
var i;
//spr_build
chooseobj[1] = 20
chooseobj[2] = 21
chooseobj[3] = 22
chooseobj[4] = 23
chooseobj[5] = 20
chooseobj[6] = 19
chooseobj[7] = 19
chooseobj[8] = 19
chooseobj[9] = 19
chooseobj[10] = 19
for (i = 0; i &lt; 360; i += 5)
   {
   ds_grid_add(planetary,100+(i/5),yygrid,choose(chooseobj[1],chooseobj[2],chooseobj[3],chooseobj[4],chooseobj[5],chooseobj[6],chooseobj[7],chooseobj[8],chooseobj[9],chooseobj[10]))
   }
   
   
   //3EME
   
   
   
   yygrid = 2
ds_grid_add(planetary,0,yygrid,2)//id
ds_grid_add(planetary,1,yygrid,4)//Type 1//Asteroid 3//planet morte 4//planet vivante 5//gazeuze 6//etoile
ds_grid_add(planetary,2,yygrid,320000000)//distance soleil ou du parent M de km
ds_grid_add(planetary,3,yygrid,0)//idparent
ds_grid_add(planetary,4,yygrid,0)//Anneau taille ,si 0 pas d anneau
ds_grid_add(planetary,5,yygrid,1)//atmosphere valable
ds_grid_add(planetary,6,yygrid,3)//niveau de vegetation
ds_grid_add(planetary,7,yygrid,7500)//taille de la planet
ds_grid_add(planetary,8,yygrid,"")//name
ds_grid_add(planetary,9,yygrid,26)//Velocity 26 km/s
ds_grid_add(planetary,10,yygrid,1)//Mass / 1 earth
ds_grid_add(planetary,11,yygrid,6371 )//  radius km
ds_grid_add(planetary,12,yygrid,random_range(500,1230))//Surface pressure 1013.25 mbar
ds_grid_add(planetary,13,yygrid,1100)//rotation 1100 km/h
ds_grid_add(planetary,14,yygrid,random_range(103399,153399))//Radiative power
ds_grid_add(planetary,15,yygrid,random_range(-154,352))//Surface temperature 38 °c
ds_grid_add(planetary,16,yygrid,0.6)//Infrared Emissivity
ds_grid_add(planetary,17,yygrid,0.48)//albedo
ds_grid_add(planetary,18,yygrid,random_range(0.01,1))//Magnetic field 0.300 gauss
ds_grid_add(planetary,19,yygrid,random_range(0.1,6))//Magnetosphere 2.50 radius
ds_grid_add(planetary,20,yygrid,9.72)//surface gravity 6.11 m/s2
ds_grid_add(planetary,21,yygrid,0.005)//Inclination 0.005
ds_grid_add(planetary,22,yygrid,random_range(1,5))//Age 4.60 Gyears
ds_grid_add(planetary,23,yygrid,1)//Station spatial en orbite
ds_grid_add(planetary,24,yygrid,random_range(40,99))//air nitrogen
ds_grid_add(planetary,25,yygrid,random_range(0.5,44))//air oxygen
ds_grid_add(planetary,26,yygrid,random_range(0.1,5))//Air argon
ds_grid_add(planetary,27,yygrid,random_range(0.01,1))//Air Carbon dioxide
ds_grid_add(planetary,28,yygrid,1)//system stellaire number
ds_grid_add(planetary,29,yygrid,make_colour_rgb(83,41,0))//coloratmo
ds_grid_add(planetary,30,yygrid,make_colour_rgb(128,255,128))//color1
ds_grid_add(planetary,31,yygrid,make_colour_rgb(0, 102, 0))//color2
ds_grid_add(planetary,32,yygrid,0)//COLONISER OU NON
ds_grid_add(planetary,33,yygrid,0)//alarmcolonisation
ds_grid_add(planetary,34,yygrid,3)//prochain attaque enemi
ds_grid_add(planetary,35,yygrid,0)//STATSressource
ds_grid_add(planetary,36,yygrid,0)//STATSships
ds_grid_add(planetary,37,yygrid,0)//STATSscientifique
ds_grid_add(planetary,38,yygrid,0)//STATSdefense
ds_grid_add(planetary,39,yygrid,0)//STATSressourcevar//JAUGE 
ds_grid_add(planetary,40,yygrid,0)//STATSshipsvar//JAUGE 
ds_grid_add(planetary,41,yygrid,0)//STATSscientifiquevar//JAUGE 
ds_grid_add(planetary,42,yygrid,0)//STATSdefensevar//JAUGE 
ds_grid_add(planetary,43,yygrid,0)//shiptype1nbr
ds_grid_add(planetary,44,yygrid,0)//shiptype2nbr
ds_grid_add(planetary,45,yygrid,0)//shiptype3nbr
ds_grid_add(planetary,46,yygrid,0)//shiptype4nbr
ds_grid_add(planetary,47,yygrid,0)//shiptype5nbr
ds_grid_add(planetary,48,yygrid,0)//shiptype6nbr
ds_grid_add(planetary,49,yygrid,0)//shiptype7nbr
ds_grid_add(planetary,50,yygrid,165)//distplanetmere en M(temps pour commerce , attaque ,negociation)
ds_grid_add(planetary,51,yygrid,600)//alarmattack
ds_grid_add(planetary,52,yygrid,10)//timeattack
ds_grid_add(planetary,53,yygrid,0)//ttalvarshipinspace
ds_grid_add(planetary,54,yygrid,0)//shiptype1flight
ds_grid_add(planetary,55,yygrid,0)//shiptype2flight
ds_grid_add(planetary,56,yygrid,0)//shiptype3flight
ds_grid_add(planetary,57,yygrid,0)//shiptype4flight
ds_grid_add(planetary,58,yygrid,0)//shiptype5flight
ds_grid_add(planetary,59,yygrid,0)//shiptype6flight
ds_grid_add(planetary,60,yygrid,0)//shiptype7flight
ds_grid_add(planetary,61,yygrid,0)//stationdef1
ds_grid_add(planetary,62,yygrid,0)//stationdef2
ds_grid_add(planetary,63,yygrid,0)//stationdef3
ds_grid_add(planetary,64,yygrid,0)//stationdef4
ds_grid_add(planetary,65,yygrid,0)//stationdef5
ds_grid_add(planetary,66,yygrid,0)//stationdef6
ds_grid_add(planetary,67,yygrid,0)//stationdef7
ds_grid_add(planetary,68,yygrid,0)//stationdef8
ds_grid_add(planetary,69,yygrid,0)//stationdef9
ds_grid_add(planetary,70,yygrid,0)//stationdef10
ds_grid_add(planetary,71,yygrid,150)//ACTIVITE ASTEORIDE
ds_grid_add(planetary,81,yygrid,0)//datesave
ds_grid_add(planetary,89,yygrid,0)//shield bonus
ds_grid_add(planetary,101,yygrid,0)//atk t0
ds_grid_add(planetary,102,yygrid,0)//atk t2
ds_grid_add(planetary,103,yygrid,0)//atk t3
ds_grid_add(planetary,104,yygrid,0)//atk t4
ds_grid_add(planetary,105,yygrid,0)//atk t5
ds_grid_add(planetary,106,yygrid,0)//atk t6
ds_grid_add(planetary,200,yygrid,ds_grid_get(planetary,84,yygrid)+random_range(200,600))//distringmin
ds_grid_add(planetary,201,yygrid,ds_grid_get(planetary,200,yygrid)+random_range(50,700))//distringmax



ds_grid_add(planetary,202,yygrid,300)//nbrasteoring
ds_grid_add(planetary,203,yygrid,0.15)//scalering 0.2 max 0.002 min
ds_grid_set(planetary,204,yygrid,100)//si hpplanet &lt; 0 deviens champ d asteoride pour mission
ds_grid_add(planetary,205,yygrid,0)//
ds_grid_add(planetary,206,yygrid,0)//
ds_grid_add(planetary,207,yygrid,0)//
ds_grid_add(planetary,208,yygrid,0)//
ds_grid_add(planetary,209,yygrid,0)//
//ressource
ds_grid_add(planetary,90,yygrid,0)//iron
ds_grid_add(planetary,91,yygrid,0)//Silicate
ds_grid_add(planetary,92,yygrid,0)//Water
ds_grid_add(planetary,93,yygrid,0)//Hydrogen
ds_grid_add(planetary,94,yygrid,0)//Hydrogen
ds_grid_add(planetary,95,yygrid,0)//Hydrogen
ds_grid_add(planetary,96,yygrid,0)//Hydrogen
ds_grid_add(planetary,97,yygrid,0)//Hydrogen
ds_grid_add(planetary,98,yygrid,0)//Hydrogen

randomize();
var i;
//spr_build
chooseobj[1] = 10
chooseobj[2] = 11
chooseobj[3] = 12
chooseobj[4] = 13
chooseobj[5] = 14
chooseobj[6] = 20
chooseobj[7] = 21
chooseobj[8] = 22
chooseobj[9] = 23
chooseobj[10] = 19
for (i = 0; i &lt; 360; i += 5)
   {
   ds_grid_add(planetary,100+(i/5),yygrid,choose(chooseobj[1],chooseobj[2],chooseobj[3],chooseobj[4],chooseobj[5],chooseobj[6],chooseobj[7],chooseobj[8],chooseobj[9],chooseobj[10]))
   }
   
   
   
   
   ///4EME
   
   
   yygrid = 3
ds_grid_add(planetary,0,yygrid,3)//id
ds_grid_add(planetary,1,yygrid,4)//Type 1//Asteroid 3//planet morte 4//planet vivante 5//gazeuze 6//etoile
ds_grid_add(planetary,2,yygrid,180000000)//distance soleil ou du parent M de km
ds_grid_add(planetary,3,yygrid,0)//idparent
ds_grid_add(planetary,4,yygrid,0)//Anneau taille ,si 0 pas d anneau
ds_grid_add(planetary,5,yygrid,0)//atmosphere valable
ds_grid_add(planetary,6,yygrid,3)//niveau de vegetation
ds_grid_add(planetary,7,yygrid,5000)//taille de la planet
ds_grid_add(planetary,8,yygrid,"")//name
ds_grid_add(planetary,9,yygrid,26)//Velocity 26 km/s
ds_grid_add(planetary,10,yygrid,1)//Mass / 1 earth
ds_grid_add(planetary,11,yygrid,6371 )//  radius km
ds_grid_add(planetary,12,yygrid,random_range(500,1230))//Surface pressure 1013.25 mbar
ds_grid_add(planetary,13,yygrid,1100)//rotation 1100 km/h
ds_grid_add(planetary,14,yygrid,random_range(103399,153399))//Radiative power
ds_grid_add(planetary,15,yygrid,random_range(-154,352))//Surface temperature 38 °c
ds_grid_add(planetary,16,yygrid,0.6)//Infrared Emissivity
ds_grid_add(planetary,17,yygrid,0.48)//albedo
ds_grid_add(planetary,18,yygrid,random_range(0.01,1))//Magnetic field 0.300 gauss
ds_grid_add(planetary,19,yygrid,random_range(0.1,6))//Magnetosphere 2.50 radius
ds_grid_add(planetary,20,yygrid,9.72)//surface gravity 6.11 m/s2
ds_grid_add(planetary,21,yygrid,0.005)//Inclination 0.005
ds_grid_add(planetary,22,yygrid,random_range(1,5))//Age 4.60 Gyears
ds_grid_add(planetary,23,yygrid,1)//Station spatial en orbite
ds_grid_add(planetary,24,yygrid,random_range(40,99))//air nitrogen
ds_grid_add(planetary,25,yygrid,random_range(0.5,44))//air oxygen
ds_grid_add(planetary,26,yygrid,random_range(0.1,5))//Air argon
ds_grid_add(planetary,27,yygrid,random_range(0.01,1))//Air Carbon dioxide
ds_grid_add(planetary,28,yygrid,1)//system stellaire number
ds_grid_add(planetary,29,yygrid,make_colour_rgb(83,41,0))//coloratmo
ds_grid_add(planetary,30,yygrid,make_colour_rgb(153,153,102))//color1
ds_grid_add(planetary,31,yygrid,make_colour_rgb(92, 92, 61))//color2
ds_grid_add(planetary,32,yygrid,0)//COLONISER OU NON
ds_grid_add(planetary,33,yygrid,0)//alarmcolonisation
ds_grid_add(planetary,34,yygrid,3)//prochain attaque enemi
ds_grid_add(planetary,35,yygrid,0)//STATSressource
ds_grid_add(planetary,36,yygrid,0)//STATSships
ds_grid_add(planetary,37,yygrid,0)//STATSscientifique
ds_grid_add(planetary,38,yygrid,0)//STATSdefense
ds_grid_add(planetary,39,yygrid,0)//STATSressourcevar//JAUGE 
ds_grid_add(planetary,40,yygrid,0)//STATSshipsvar//JAUGE 
ds_grid_add(planetary,41,yygrid,0)//STATSscientifiquevar//JAUGE 
ds_grid_add(planetary,42,yygrid,0)//STATSdefensevar//JAUGE 
ds_grid_add(planetary,43,yygrid,0)//shiptype1nbr
ds_grid_add(planetary,44,yygrid,0)//shiptype2nbr
ds_grid_add(planetary,45,yygrid,0)//shiptype3nbr
ds_grid_add(planetary,46,yygrid,0)//shiptype4nbr
ds_grid_add(planetary,47,yygrid,0)//shiptype5nbr
ds_grid_add(planetary,48,yygrid,0)//shiptype6nbr
ds_grid_add(planetary,49,yygrid,0)//shiptype7nbr
ds_grid_add(planetary,50,yygrid,187)//distplanetmere en M(temps pour commerce , attaque ,negociation)
ds_grid_add(planetary,51,yygrid,400)//alarmattack
ds_grid_add(planetary,52,yygrid,20)//timeattack
ds_grid_add(planetary,53,yygrid,0)//ttalvarshipinspace
ds_grid_add(planetary,54,yygrid,0)//shiptype1flight
ds_grid_add(planetary,55,yygrid,0)//shiptype2flight
ds_grid_add(planetary,56,yygrid,0)//shiptype3flight
ds_grid_add(planetary,57,yygrid,0)//shiptype4flight
ds_grid_add(planetary,58,yygrid,0)//shiptype5flight
ds_grid_add(planetary,59,yygrid,0)//shiptype6flight
ds_grid_add(planetary,60,yygrid,0)//shiptype7flight
ds_grid_add(planetary,61,yygrid,0)//stationdef1
ds_grid_add(planetary,62,yygrid,0)//stationdef2
ds_grid_add(planetary,63,yygrid,0)//stationdef3
ds_grid_add(planetary,64,yygrid,0)//stationdef4
ds_grid_add(planetary,65,yygrid,0)//stationdef5
ds_grid_add(planetary,66,yygrid,0)//stationdef6
ds_grid_add(planetary,67,yygrid,0)//stationdef7
ds_grid_add(planetary,68,yygrid,0)//stationdef8
ds_grid_add(planetary,69,yygrid,0)//stationdef9
ds_grid_add(planetary,70,yygrid,0)//stationdef10
ds_grid_add(planetary,71,yygrid,500)//ACTIVITE ASTEORIDE
ds_grid_add(planetary,81,yygrid,0)//datesave
ds_grid_add(planetary,89,yygrid,0)//shield bonus
ds_grid_add(planetary,101,yygrid,0)//atk t0
ds_grid_add(planetary,102,yygrid,0)//atk t2
ds_grid_add(planetary,103,yygrid,0)//atk t3
ds_grid_add(planetary,104,yygrid,0)//atk t4
ds_grid_add(planetary,105,yygrid,0)//atk t5
ds_grid_add(planetary,106,yygrid,0)//atk t6

//ressource
ds_grid_add(planetary,90,yygrid,0)//iron
ds_grid_add(planetary,91,yygrid,0)//Silicate
ds_grid_add(planetary,92,yygrid,0)//Water
ds_grid_add(planetary,93,yygrid,0)//Hydrogen
ds_grid_add(planetary,94,yygrid,0)//Hydrogen
ds_grid_add(planetary,95,yygrid,0)//Hydrogen
ds_grid_add(planetary,96,yygrid,0)//Hydrogen
ds_grid_add(planetary,97,yygrid,0)//Hydrogen
ds_grid_add(planetary,98,yygrid,0)//Hydrogen

ds_grid_set(planetary,204,yygrid,100)//si hpplanet &lt; 0 deviens champ d asteoride pour mission


randomize();
var i;
//spr_build
chooseobj[1] = 20
chooseobj[2] = 21
chooseobj[3] = 22
chooseobj[4] = 23
chooseobj[5] = 19
chooseobj[6] = 19
chooseobj[7] = 19
chooseobj[8] = 19
chooseobj[9] = 19
chooseobj[10] = 9
for (i = 0; i &lt; 360; i += 5)
   {
   ds_grid_add(planetary,100+(i/5),yygrid,choose(chooseobj[1],chooseobj[2],chooseobj[3],chooseobj[4],chooseobj[5],chooseobj[6],chooseobj[7],chooseobj[8],chooseobj[9],chooseobj[10]))
   }
   
   
   
///5EME PLANET ENEMI !!
   
   
   yygrid = 4
ds_grid_add(planetary,0,yygrid,4)//id
ds_grid_add(planetary,1,yygrid,4)//Type 1//Asteroid 3//planet morte 4//planet vivante 5//gazeuze 6//etoile
ds_grid_add(planetary,2,yygrid,350000000)//distance soleil ou du parent M de km
ds_grid_add(planetary,3,yygrid,0)//idparent
ds_grid_add(planetary,4,yygrid,0)//Anneau taille ,si 0 pas d anneau
ds_grid_add(planetary,5,yygrid,0)//atmosphere valable
ds_grid_add(planetary,6,yygrid,3)//niveau de vegetation
ds_grid_add(planetary,7,yygrid,6000)//taille de la planet
ds_grid_add(planetary,8,yygrid,"")//name
ds_grid_add(planetary,9,yygrid,26)//Velocity 26 km/s
ds_grid_add(planetary,10,yygrid,1)//Mass / 1 earth
ds_grid_add(planetary,11,yygrid,6371 )//  radius km
ds_grid_add(planetary,12,yygrid,1013)//Surface pressure 1013.25 mbar
ds_grid_add(planetary,13,yygrid,1100)//rotation 1100 km/h
ds_grid_add(planetary,14,yygrid,123399)//Radiative power
ds_grid_add(planetary,15,yygrid,12)//Surface temperature 38 °c
ds_grid_add(planetary,16,yygrid,0.6)//Infrared Emissivity
ds_grid_add(planetary,17,yygrid,0.48)//albedo
ds_grid_add(planetary,18,yygrid,0.25)//Magnetic field 0.300 gauss
ds_grid_add(planetary,19,yygrid,4)//Magnetosphere 2.50 radius
ds_grid_add(planetary,20,yygrid,9.72)//surface gravity 6.11 m/s2
ds_grid_add(planetary,21,yygrid,0.005)//Inclination 0.005
ds_grid_add(planetary,22,yygrid,4.6)//Age 4.60 Gyears
ds_grid_add(planetary,23,yygrid,1)//Station spatial en orbite
ds_grid_add(planetary,24,yygrid,78)//air nitrogen
ds_grid_add(planetary,25,yygrid,21)//air oxygen
ds_grid_add(planetary,26,yygrid,1)//Air argon
ds_grid_add(planetary,27,yygrid,0.04)//Air Carbon dioxide
ds_grid_add(planetary,28,yygrid,1)//system stellaire number
ds_grid_add(planetary,29,yygrid,make_colour_rgb(83,41,0))//coloratmo
ds_grid_add(planetary,30,yygrid,make_colour_rgb(153,122,87))//color1
ds_grid_add(planetary,31,yygrid,make_colour_rgb(92, 82, 55))//color2
/*ds_grid_add(planetary,30,yygrid,make_colour_rgb(153,122,87))//color1
ds_grid_add(planetary,31,yygrid,make_colour_rgb(92, 82, 55))//color2*/
ds_grid_add(planetary,32,yygrid,2)//COLONISER OU NON num faction
ds_grid_add(planetary,33,yygrid,0)//alarmcolonisation
ds_grid_add(planetary,34,yygrid,3)//prochain attaque enemi
ds_grid_add(planetary,35,yygrid,10000)//STATSressource
ds_grid_add(planetary,36,yygrid,30)//STATSships
ds_grid_add(planetary,37,yygrid,15)//STATSscientifique
ds_grid_add(planetary,38,yygrid,5)//STATSdefense
ds_grid_add(planetary,39,yygrid,40)//STATSressourcevar//JAUGE 
ds_grid_add(planetary,40,yygrid,20)//STATSshipsvar//JAUGE 
ds_grid_add(planetary,41,yygrid,30)//STATSscientifiquevar//JAUGE 
ds_grid_add(planetary,42,yygrid,10)//STATSdefensevar//JAUGE 
ds_grid_add(planetary,43,yygrid,5)//shiptype1nbr
ds_grid_add(planetary,44,yygrid,3)//shiptype2nbr
ds_grid_add(planetary,45,yygrid,2)//shiptype3nbr
ds_grid_add(planetary,46,yygrid,0)//shiptype4nbr
ds_grid_add(planetary,47,yygrid,0)//shiptype5nbr
ds_grid_add(planetary,48,yygrid,0)//shiptype6nbr
ds_grid_add(planetary,49,yygrid,0)//shiptype7nbr
ds_grid_add(planetary,50,yygrid,192)//distplanetmere en M(temps pour commerce , attaque ,negociation)
ds_grid_add(planetary,51,yygrid,5000)//alarmattack
ds_grid_add(planetary,52,yygrid,10)//timeattack
ds_grid_add(planetary,53,yygrid,0)//ttalvarshipinspace
ds_grid_add(planetary,54,yygrid,0)//shiptype1flight
ds_grid_add(planetary,55,yygrid,0)//shiptype2flight
ds_grid_add(planetary,56,yygrid,0)//shiptype3flight
ds_grid_add(planetary,57,yygrid,0)//shiptype4flight
ds_grid_add(planetary,58,yygrid,0)//shiptype5flight
ds_grid_add(planetary,59,yygrid,0)//shiptype6flight
ds_grid_add(planetary,60,yygrid,0)//shiptype7flight
ds_grid_add(planetary,61,yygrid,0)//stationdef1
ds_grid_add(planetary,62,yygrid,0)//stationdef2
ds_grid_add(planetary,63,yygrid,0)//stationdef3
ds_grid_add(planetary,64,yygrid,0)//stationdef4
ds_grid_add(planetary,65,yygrid,0)//stationdef5
ds_grid_add(planetary,66,yygrid,0)//stationdef6
ds_grid_add(planetary,67,yygrid,0)//stationdef7
ds_grid_add(planetary,68,yygrid,0)//stationdef8
ds_grid_add(planetary,69,yygrid,0)//stationdef9
ds_grid_add(planetary,70,yygrid,0)//stationdef10
ds_grid_add(planetary,71,yygrid,4500)//ACTIVITE ASTEORIDE
ds_grid_add(planetary,81,yygrid,0)//datesave
ds_grid_add(planetary,89,yygrid,0)//shield bonus
ds_grid_add(planetary,101,yygrid,0)//atk t0
ds_grid_add(planetary,102,yygrid,0)//atk t2
ds_grid_add(planetary,103,yygrid,0)//atk t3
ds_grid_add(planetary,104,yygrid,0)//atk t4
ds_grid_add(planetary,105,yygrid,0)//atk t5
ds_grid_add(planetary,106,yygrid,0)//atk t6


//ressource
ds_grid_add(planetary,90,yygrid,0)//iron
ds_grid_add(planetary,91,yygrid,0)//Silicate
ds_grid_add(planetary,92,yygrid,0)//Water
ds_grid_add(planetary,93,yygrid,0)//Hydrogen
ds_grid_add(planetary,94,yygrid,0)//Hydrogen
ds_grid_add(planetary,95,yygrid,0)//Hydrogen
ds_grid_add(planetary,96,yygrid,0)//Hydrogen
ds_grid_add(planetary,97,yygrid,0)//Hydrogen
ds_grid_add(planetary,98,yygrid,0)//Hydrogen

ds_grid_set(planetary,204,yygrid,100)//si hpplanet &lt; 0 deviens champ d asteoride pour mission


randomize();
var i;
//spr_build
chooseobj[1] = choose(20,10,0)
chooseobj[2] = choose(21,11,1)
chooseobj[3] = choose(22,12,2)
chooseobj[4] = choose(23,13,3)
chooseobj[5] = choose(24,14,4)
chooseobj[6] = choose(25,15,1)
chooseobj[7] = choose(26,29,2)
chooseobj[8] = choose(27,29,3)
chooseobj[9] = choose(28,29,4)
chooseobj[10] = choose(29,29,5)
for (i = 0; i &lt; 360; i += 5)
   {
   ds_grid_add(planetary,100+(i/5),yygrid,choose(chooseobj[1],chooseobj[2],chooseobj[3],chooseobj[4],chooseobj[5],chooseobj[6],chooseobj[7],chooseobj[8],chooseobj[9],chooseobj[10]))
   }
   
   
///6EME PLANET alien enemy!!
   
   
   yygrid = 5
ds_grid_add(planetary,0,yygrid,yygrid)//id
ds_grid_add(planetary,1,yygrid,4)//Type 1//Asteroid 3//planet morte 4//planet vivante 5//gazeuze 6//etoile
ds_grid_add(planetary,2,yygrid,230000000)//distance soleil ou du parent M de km
ds_grid_add(planetary,3,yygrid,0)//idparent
ds_grid_add(planetary,4,yygrid,0)//Anneau taille ,si 0 pas d anneau
ds_grid_add(planetary,5,yygrid,0)//atmosphere valable
ds_grid_add(planetary,6,yygrid,3)//niveau de vegetation
ds_grid_add(planetary,7,yygrid,6000)//taille de la planet
ds_grid_add(planetary,8,yygrid,"")//name
ds_grid_add(planetary,9,yygrid,26)//Velocity 26 km/s
ds_grid_add(planetary,10,yygrid,1)//Mass / 1 earth
ds_grid_add(planetary,11,yygrid,6371 )//  radius km
ds_grid_add(planetary,12,yygrid,1013)//Surface pressure 1013.25 mbar
ds_grid_add(planetary,13,yygrid,1100)//rotation 1100 km/h
ds_grid_add(planetary,14,yygrid,123399)//Radiative power
ds_grid_add(planetary,15,yygrid,12)//Surface temperature 38 °c
ds_grid_add(planetary,16,yygrid,0.6)//Infrared Emissivity
ds_grid_add(planetary,17,yygrid,0.48)//albedo
ds_grid_add(planetary,18,yygrid,0.25)//Magnetic field 0.300 gauss
ds_grid_add(planetary,19,yygrid,4)//Magnetosphere 2.50 radius
ds_grid_add(planetary,20,yygrid,9.72)//surface gravity 6.11 m/s2
ds_grid_add(planetary,21,yygrid,0.005)//Inclination 0.005
ds_grid_add(planetary,22,yygrid,4.6)//Age 4.60 Gyears
ds_grid_add(planetary,23,yygrid,1)//Station spatial en orbite
ds_grid_add(planetary,24,yygrid,78)//air nitrogen
ds_grid_add(planetary,25,yygrid,21)//air oxygen
ds_grid_add(planetary,26,yygrid,1)//Air argon
ds_grid_add(planetary,27,yygrid,0.04)//Air Carbon dioxide
ds_grid_add(planetary,28,yygrid,1)//system stellaire number
ds_grid_add(planetary,29,yygrid,make_colour_rgb(83,41,0))//coloratmo
ds_grid_add(planetary,30,yygrid,make_colour_rgb(153,51,255))//color1
ds_grid_add(planetary,31,yygrid,make_colour_rgb(115, 0, 230))//color2
/*ds_grid_add(planetary,30,yygrid,make_colour_rgb(153,122,87))//color1
ds_grid_add(planetary,31,yygrid,make_colour_rgb(92, 82, 55))//color2*/
ds_grid_add(planetary,32,yygrid,3)//COLONISER OU NON num faction
ds_grid_add(planetary,33,yygrid,0)//alarmcolonisation
ds_grid_add(planetary,34,yygrid,3)//prochain attaque enemi
ds_grid_add(planetary,35,yygrid,10000)//STATSressource
ds_grid_add(planetary,36,yygrid,30)//STATSships
ds_grid_add(planetary,37,yygrid,15)//STATSscientifique
ds_grid_add(planetary,38,yygrid,5)//STATSdefense
ds_grid_add(planetary,39,yygrid,40)//STATSressourcevar//JAUGE 
ds_grid_add(planetary,40,yygrid,20)//STATSshipsvar//JAUGE 
ds_grid_add(planetary,41,yygrid,30)//STATSscientifiquevar//JAUGE 
ds_grid_add(planetary,42,yygrid,10)//STATSdefensevar//JAUGE 
ds_grid_add(planetary,43,yygrid,5)//shiptype1nbr
ds_grid_add(planetary,44,yygrid,3)//shiptype2nbr
ds_grid_add(planetary,45,yygrid,2)//shiptype3nbr
ds_grid_add(planetary,46,yygrid,0)//shiptype4nbr
ds_grid_add(planetary,47,yygrid,0)//shiptype5nbr
ds_grid_add(planetary,48,yygrid,0)//shiptype6nbr
ds_grid_add(planetary,49,yygrid,0)//shiptype7nbr
ds_grid_add(planetary,50,yygrid,221)//distplanetmere en M(temps pour commerce , attaque ,negociation)
ds_grid_add(planetary,51,yygrid,5000)//alarmattack
ds_grid_add(planetary,52,yygrid,10)//timeattack
ds_grid_add(planetary,53,yygrid,0)//ttalvarshipinspace
ds_grid_add(planetary,54,yygrid,0)//shiptype1flight
ds_grid_add(planetary,55,yygrid,0)//shiptype2flight
ds_grid_add(planetary,56,yygrid,0)//shiptype3flight
ds_grid_add(planetary,57,yygrid,0)//shiptype4flight
ds_grid_add(planetary,58,yygrid,0)//shiptype5flight
ds_grid_add(planetary,59,yygrid,0)//shiptype6flight
ds_grid_add(planetary,60,yygrid,0)//shiptype7flight
ds_grid_add(planetary,61,yygrid,0)//stationdef1
ds_grid_add(planetary,62,yygrid,0)//stationdef2
ds_grid_add(planetary,63,yygrid,0)//stationdef3
ds_grid_add(planetary,64,yygrid,0)//stationdef4
ds_grid_add(planetary,65,yygrid,0)//stationdef5
ds_grid_add(planetary,66,yygrid,0)//stationdef6
ds_grid_add(planetary,67,yygrid,0)//stationdef7
ds_grid_add(planetary,68,yygrid,0)//stationdef8
ds_grid_add(planetary,69,yygrid,0)//stationdef9
ds_grid_add(planetary,70,yygrid,0)//stationdef10
ds_grid_add(planetary,71,yygrid,2200)//ACTIVITE ASTEORIDE
ds_grid_add(planetary,81,yygrid,0)//datesave
ds_grid_add(planetary,89,yygrid,0)//shield bonus
ds_grid_add(planetary,101,yygrid,0)//atk t0
ds_grid_add(planetary,102,yygrid,0)//atk t2
ds_grid_add(planetary,103,yygrid,0)//atk t3
ds_grid_add(planetary,104,yygrid,0)//atk t4
ds_grid_add(planetary,105,yygrid,0)//atk t5
ds_grid_add(planetary,106,yygrid,0)//atk t6
ds_grid_add(planetary,83,yygrid,random_range(800,2500))//taille de lune (si 0 exist pas)
ds_grid_add(planetary,84,yygrid,random_range(200,1000))//distancelune
ds_grid_add(planetary,200,yygrid,ds_grid_get(planetary,84,yygrid)+random_range(200,600))//distringmin
ds_grid_add(planetary,201,yygrid,ds_grid_get(planetary,200,yygrid)+random_range(50,700))//distringmax
ds_grid_add(planetary,202,yygrid,1000)//nbrasteoring
ds_grid_add(planetary,203,yygrid,0.2)//scalering 0.2 max 0.002 min

ds_grid_set(planetary,204,yygrid,100)//si hpplanet &lt; 0 deviens champ d asteoride pour mission
ds_grid_add(planetary,205,yygrid,0)//
ds_grid_add(planetary,206,yygrid,0)//
ds_grid_add(planetary,207,yygrid,0)//
ds_grid_add(planetary,208,yygrid,0)//
ds_grid_add(planetary,209,yygrid,0)//
//ressource
ds_grid_add(planetary,90,yygrid,0)//iron
ds_grid_add(planetary,91,yygrid,0)//Silicate
ds_grid_add(planetary,92,yygrid,0)//Water
ds_grid_add(planetary,93,yygrid,0)//Hydrogen
ds_grid_add(planetary,94,yygrid,0)//Hydrogen
ds_grid_add(planetary,95,yygrid,0)//Hydrogen
ds_grid_add(planetary,96,yygrid,0)//Hydrogen
ds_grid_add(planetary,97,yygrid,0)//Hydrogen
ds_grid_add(planetary,98,yygrid,0)//Hydrogen


randomize();
var i;
//spr_build
chooseobj[1] = choose(20,10,0)
chooseobj[2] = choose(21,11,1)
chooseobj[3] = choose(22,12,2)
chooseobj[4] = choose(23,13,3)
chooseobj[5] = choose(24,14,4)
chooseobj[6] = choose(25,15,5)
chooseobj[7] = choose(26,16,6)
chooseobj[8] = choose(27,17,7)
chooseobj[9] = choose(28,18,8)
chooseobj[10] = choose(29,19,9)
for (i = 0; i &lt; 360; i += 5)
   {
   ds_grid_add(planetary,100+(i/5),yygrid,choose(chooseobj[1],chooseobj[2],chooseobj[3],chooseobj[4],chooseobj[5],chooseobj[6],chooseobj[7],chooseobj[8],chooseobj[9],chooseobj[10]))
   }
   
   ///6EME PLANET alien pacifique !!
   
   
   yygrid = 6
ds_grid_add(planetary,0,yygrid,yygrid)//id
ds_grid_add(planetary,1,yygrid,4)//Type 1//Asteroid 3//planet morte 4//planet vivante 5//gazeuze 6//etoile
ds_grid_add(planetary,2,yygrid,250000000)//distance soleil ou du parent M de km
ds_grid_add(planetary,3,yygrid,0)//idparent
ds_grid_add(planetary,4,yygrid,0)//Anneau taille ,si 0 pas d anneau
ds_grid_add(planetary,5,yygrid,0)//atmosphere valable
ds_grid_add(planetary,6,yygrid,3)//niveau de vegetation
ds_grid_add(planetary,7,yygrid,6000)//taille de la planet
ds_grid_add(planetary,8,yygrid,"")//name
ds_grid_add(planetary,9,yygrid,26)//Velocity 26 km/s
ds_grid_add(planetary,10,yygrid,1)//Mass / 1 earth
ds_grid_add(planetary,11,yygrid,6371 )//  radius km
ds_grid_add(planetary,12,yygrid,1013)//Surface pressure 1013.25 mbar
ds_grid_add(planetary,13,yygrid,1100)//rotation 1100 km/h
ds_grid_add(planetary,14,yygrid,123399)//Radiative power
ds_grid_add(planetary,15,yygrid,12)//Surface temperature 38 °c
ds_grid_add(planetary,16,yygrid,0.6)//Infrared Emissivity
ds_grid_add(planetary,17,yygrid,0.48)//albedo
ds_grid_add(planetary,18,yygrid,0.25)//Magnetic field 0.300 gauss
ds_grid_add(planetary,19,yygrid,4)//Magnetosphere 2.50 radius
ds_grid_add(planetary,20,yygrid,9.72)//surface gravity 6.11 m/s2
ds_grid_add(planetary,21,yygrid,0.005)//Inclination 0.005
ds_grid_add(planetary,22,yygrid,4.6)//Age 4.60 Gyears
ds_grid_add(planetary,23,yygrid,1)//Station spatial en orbite
ds_grid_add(planetary,24,yygrid,78)//air nitrogen
ds_grid_add(planetary,25,yygrid,21)//air oxygen
ds_grid_add(planetary,26,yygrid,1)//Air argon
ds_grid_add(planetary,27,yygrid,0.04)//Air Carbon dioxide
ds_grid_add(planetary,28,yygrid,1)//system stellaire number
ds_grid_add(planetary,29,yygrid,make_colour_rgb(83,41,0))//coloratmo
ds_grid_add(planetary,30,yygrid,make_colour_rgb(179,230,255))//color1
ds_grid_add(planetary,31,yygrid,make_colour_rgb(0, 170, 255))//color2
/*ds_grid_add(planetary,30,yygrid,make_colour_rgb(153,122,87))//color1
ds_grid_add(planetary,31,yygrid,make_colour_rgb(92, 82, 55))//color2*/
ds_grid_add(planetary,32,yygrid,4)//COLONISER OU NON num faction
ds_grid_add(planetary,33,yygrid,0)//alarmcolonisation
ds_grid_add(planetary,34,yygrid,3)//prochain attaque enemi
ds_grid_add(planetary,35,yygrid,10000)//STATSressource
ds_grid_add(planetary,36,yygrid,30)//STATSships
ds_grid_add(planetary,37,yygrid,15)//STATSscientifique
ds_grid_add(planetary,38,yygrid,5)//STATSdefense
ds_grid_add(planetary,39,yygrid,40)//STATSressourcevar//JAUGE 
ds_grid_add(planetary,40,yygrid,20)//STATSshipsvar//JAUGE 
ds_grid_add(planetary,41,yygrid,30)//STATSscientifiquevar//JAUGE 
ds_grid_add(planetary,42,yygrid,10)//STATSdefensevar//JAUGE 
ds_grid_add(planetary,43,yygrid,5)//shiptype1nbr
ds_grid_add(planetary,44,yygrid,3)//shiptype2nbr
ds_grid_add(planetary,45,yygrid,2)//shiptype3nbr
ds_grid_add(planetary,46,yygrid,0)//shiptype4nbr
ds_grid_add(planetary,47,yygrid,0)//shiptype5nbr
ds_grid_add(planetary,48,yygrid,0)//shiptype6nbr
ds_grid_add(planetary,49,yygrid,0)//shiptype7nbr
ds_grid_add(planetary,50,yygrid,185)//distplanetmere en M(temps pour commerce , attaque ,negociation)
ds_grid_add(planetary,51,yygrid,5000)//alarmattack
ds_grid_add(planetary,52,yygrid,10)//timeattack
ds_grid_add(planetary,53,yygrid,0)//ttalvarshipinspace
ds_grid_add(planetary,54,yygrid,0)//shiptype1flight
ds_grid_add(planetary,55,yygrid,0)//shiptype2flight
ds_grid_add(planetary,56,yygrid,0)//shiptype3flight
ds_grid_add(planetary,57,yygrid,0)//shiptype4flight
ds_grid_add(planetary,58,yygrid,0)//shiptype5flight
ds_grid_add(planetary,59,yygrid,0)//shiptype6flight
ds_grid_add(planetary,60,yygrid,0)//shiptype7flight
ds_grid_add(planetary,61,yygrid,0)//stationdef1
ds_grid_add(planetary,62,yygrid,0)//stationdef2
ds_grid_add(planetary,63,yygrid,0)//stationdef3
ds_grid_add(planetary,64,yygrid,0)//stationdef4
ds_grid_add(planetary,65,yygrid,0)//stationdef5
ds_grid_add(planetary,66,yygrid,0)//stationdef6
ds_grid_add(planetary,67,yygrid,0)//stationdef7
ds_grid_add(planetary,68,yygrid,0)//stationdef8
ds_grid_add(planetary,69,yygrid,0)//stationdef9
ds_grid_add(planetary,70,yygrid,0)//stationdef10
ds_grid_add(planetary,71,yygrid,3000)//ACTIVITE ASTEORIDE
ds_grid_add(planetary,81,yygrid,0)//datesave
ds_grid_add(planetary,89,yygrid,0)//shield bonus
ds_grid_add(planetary,101,yygrid,0)//atk t0
ds_grid_add(planetary,102,yygrid,0)//atk t2
ds_grid_add(planetary,103,yygrid,0)//atk t3
ds_grid_add(planetary,104,yygrid,0)//atk t4
ds_grid_add(planetary,105,yygrid,0)//atk t5
ds_grid_add(planetary,106,yygrid,0)//atk t6

ds_grid_add(planetary,200,yygrid,ds_grid_get(planetary,84,yygrid)+random_range(200,600))//distringmin
ds_grid_add(planetary,201,yygrid,ds_grid_get(planetary,200,yygrid)+random_range(50,700))//distringmax
ds_grid_add(planetary,202,yygrid,300)//nbrasteoring
ds_grid_add(planetary,203,yygrid,0.2)//scalering 0.2 max 0.002 min

ds_grid_set(planetary,204,yygrid,100)//si hpplanet &lt; 0 deviens champ d asteoride pour mission
ds_grid_add(planetary,205,yygrid,0)//
ds_grid_add(planetary,206,yygrid,0)//
ds_grid_add(planetary,207,yygrid,0)//
ds_grid_add(planetary,208,yygrid,0)//
ds_grid_add(planetary,209,yygrid,0)//

//ressource
ds_grid_add(planetary,90,yygrid,0)//iron
ds_grid_add(planetary,91,yygrid,0)//Silicate
ds_grid_add(planetary,92,yygrid,0)//Water
ds_grid_add(planetary,93,yygrid,0)//Hydrogen
ds_grid_add(planetary,94,yygrid,0)//Hydrogen
ds_grid_add(planetary,95,yygrid,0)//Hydrogen
ds_grid_add(planetary,96,yygrid,0)//Hydrogen
ds_grid_add(planetary,97,yygrid,0)//Hydrogen
ds_grid_add(planetary,98,yygrid,0)//Hydrogen


randomize();
var i;
//spr_build
chooseobj[1] = choose(20,10,0)
chooseobj[2] = choose(21,11,1)
chooseobj[3] = choose(22,12,2)
chooseobj[4] = choose(23,13,3)
chooseobj[5] = choose(24,14,4)
chooseobj[6] = choose(25,15,5)
chooseobj[7] = choose(26,16,6)
chooseobj[8] = choose(27,17,7)
chooseobj[9] = choose(28,18,8)
chooseobj[10] = choose(29,19,9)
for (i = 0; i &lt; 360; i += 5)
   {
   ds_grid_add(planetary,100+(i/5),yygrid,choose(chooseobj[1],chooseobj[2],chooseobj[3],chooseobj[4],chooseobj[5],chooseobj[6],chooseobj[7],chooseobj[8],chooseobj[9],chooseobj[10]))
   }
   
   
   
   
   
    
   //RESTE DES PLANETE ALEATOIRE
   for (i = 10; i &lt; ds_grid_height(planetary)-1; i += 1)
   {  
   randomize();
   yygrid = i
   colonizee = choose(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
   2,3,4)
   destroy = choose(100,100,100,100,150,50,100,0)
    
   atmovalable = choose(0,0,0,0,0,0,0,0,0,1)
   lune = choose(0,0,0,1,1)
   if colonizee &gt; 0 {
   asteorid = random_range(2000,5000)
   stat1 = floor(random_range(10,50))
   stat2 = floor(random_range(10,25))
   stat3 = floor(random_range(10,25))
   ds_grid_add(planetary,43,yygrid,5)//shiptype1nbr
ds_grid_add(planetary,44,yygrid,3)//shiptype2nbr
ds_grid_add(planetary,45,yygrid,2)//shiptype3nbr
   stat4 = 100-(stat1+stat2+stat3)
   statsoupo = floor(random_range(20,100))}else{
   asteorid = random_range(100,5000)
   ds_grid_add(planetary,43,yygrid,0)//shiptype1nbr
ds_grid_add(planetary,44,yygrid,0)//shiptype2nbr
ds_grid_add(planetary,45,yygrid,0)//shiptype3nbr
   stat1 = 0
   stat2 = 0
   stat3 = 0
   stat4 = 0
   statsoupo = 0}
   randomcolorR1 = random_range(70,255)
   randomcolorG1 = random_range(70,255)
   randomcolorB1 = random_range(70,255)
   randomcolorR2 = randomcolorR1-random_range(27,50)
   randomcolorG2 = randomcolorG1-random_range(27,50)
   randomcolorB2 = randomcolorB1-random_range(27,50)
   taill = random_range(2500,9000)
   

   ds_grid_add(planetary,0,yygrid,yygrid)//id
ds_grid_add(planetary,290,yygrid,0)//ressourceaddsendstock
ds_grid_add(planetary,1,yygrid,4)//Type 1//Asteroid 3//planet morte 4//planet vivante 5//gazeuze 6//etoile
ds_grid_add(planetary,2,yygrid,random_range(50000000,340000000))//distance soleil ou du parent M de km
ds_grid_add(planetary,3,yygrid,0)//idparent
ds_grid_add(planetary,4,yygrid,choose(0,1,2,3))//Anneau taille ,si 0 pas d anneau
ds_grid_add(planetary,5,yygrid,atmovalable)//atmosphere valable
ds_grid_add(planetary,6,yygrid,3)//niveau de vegetation
ds_grid_add(planetary,7,yygrid,taill)//taille de la planet
ds_grid_add(planetary,8,yygrid,"")//name
ds_grid_add(planetary,9,yygrid,random_range(17,35))//Velocity 26 km/s
ds_grid_add(planetary,10,yygrid,random_range(0.5,1))//Mass / 1 earth
ds_grid_add(planetary,11,yygrid,taill )//  radius km
ds_grid_add(planetary,12,yygrid,random_range(500,1230))//Surface pressure 1013.25 mbar
ds_grid_add(planetary,13,yygrid,1100)//rotation 1100 km/h
ds_grid_add(planetary,14,yygrid,random_range(103399,153399))//Radiative power
ds_grid_add(planetary,15,yygrid,random_range(-154,352))//Surface temperature 38 °c
ds_grid_add(planetary,16,yygrid,0.6)//Infrared Emissivity
ds_grid_add(planetary,17,yygrid,0.48)//albedo
ds_grid_add(planetary,18,yygrid,random_range(0.01,1))//Magnetic field 0.300 gauss
ds_grid_add(planetary,19,yygrid,random_range(1,4))//Magnetosphere 2.50 radius
ds_grid_add(planetary,20,yygrid,9.72)//surface gravity 6.11 m/s2
ds_grid_add(planetary,21,yygrid,0.005)//Inclination 0.005
ds_grid_add(planetary,22,yygrid,random_range(1,5))//Age 4.60 Gyears
ds_grid_add(planetary,23,yygrid,1)//Station spatial en orbite
ds_grid_add(planetary,24,yygrid,random_range(40,99))//air nitrogen
ds_grid_add(planetary,25,yygrid,random_range(0.5,44))//air oxygen
ds_grid_add(planetary,26,yygrid,random_range(0.1,5))//Air argon
ds_grid_add(planetary,27,yygrid,random_range(0.01,1))//Air Carbon dioxide
ds_grid_add(planetary,28,yygrid,floor((i/10)+1))//system stellaire number
ds_grid_add(planetary,29,yygrid,make_colour_rgb(83,41,0))//coloratmo
ds_grid_add(planetary,30,yygrid,make_colour_rgb(randomcolorR1,randomcolorG1,randomcolorB1))//color1
ds_grid_add(planetary,31,yygrid,make_colour_rgb(randomcolorR2,randomcolorG2,randomcolorB2))//color2
/*ds_grid_add(planetary,30,yygrid,make_colour_rgb(153,122,87))//color1
ds_grid_add(planetary,31,yygrid,make_colour_rgb(92, 82, 55))//color2*/
ds_grid_add(planetary,32,yygrid,colonizee)//COLONISER OU NON num faction
ds_grid_add(planetary,33,yygrid,0)//alarmcolonisation
ds_grid_add(planetary,34,yygrid,choose(2,3))//prochain attaque enemi
ds_grid_add(planetary,35,yygrid,statsoupo)//STATSressource
ds_grid_add(planetary,36,yygrid,statsoupo)//STATSships
ds_grid_add(planetary,37,yygrid,statsoupo)//STATSscientifique
ds_grid_add(planetary,38,yygrid,statsoupo)//STATSdefense
ds_grid_add(planetary,39,yygrid,stat1)//STATSressourcevar//JAUGE 40
ds_grid_add(planetary,40,yygrid,stat2)//STATSshipsvar//JAUGE 20
ds_grid_add(planetary,41,yygrid,stat3)//STATSscientifiquevar//JAUGE 30
ds_grid_add(planetary,42,yygrid,stat4)//STATSdefensevar//JAUGE 10
/*ds_grid_add(planetary,43,yygrid,0)//shiptype1nbr
ds_grid_add(planetary,44,yygrid,0)//shiptype2nbr
ds_grid_add(planetary,45,yygrid,0)*///shiptype3nbr
ds_grid_add(planetary,46,yygrid,0)//shiptype4nbr
ds_grid_add(planetary,47,yygrid,0)//shiptype5nbr
ds_grid_add(planetary,48,yygrid,0)//shiptype6nbr
ds_grid_add(planetary,49,yygrid,0)//shiptype7nbr
ds_grid_add(planetary,50,yygrid,random_range(100,150)*floor((i/10)+1))//distplanetmere en M(temps pour commerce , attaque ,negociation)
ds_grid_add(planetary,51,yygrid,5000)//alarmattack
ds_grid_add(planetary,52,yygrid,10)//timeattack
ds_grid_add(planetary,53,yygrid,0)//ttalvarshipinspace
ds_grid_add(planetary,54,yygrid,0)//shiptype1flight
ds_grid_add(planetary,55,yygrid,0)//shiptype2flight
ds_grid_add(planetary,56,yygrid,0)//shiptype3flight
ds_grid_add(planetary,57,yygrid,0)//shiptype4flight
ds_grid_add(planetary,58,yygrid,0)//shiptype5flight
ds_grid_add(planetary,59,yygrid,0)//shiptype6flight
ds_grid_add(planetary,60,yygrid,0)//shiptype7flight
ds_grid_add(planetary,61,yygrid,0)//stationdef1
ds_grid_add(planetary,62,yygrid,0)//stationdef2
ds_grid_add(planetary,63,yygrid,0)//stationdef3
ds_grid_add(planetary,64,yygrid,0)//stationdef4
ds_grid_add(planetary,65,yygrid,0)//stationdef5
ds_grid_add(planetary,66,yygrid,0)//stationdef6
ds_grid_add(planetary,67,yygrid,0)//stationdef7
ds_grid_add(planetary,68,yygrid,0)//stationdef8
ds_grid_add(planetary,69,yygrid,0)//stationdef9
ds_grid_add(planetary,70,yygrid,0)//stationdef10
ds_grid_add(planetary,71,yygrid,asteorid)//ACTIVITE ASTEORIDE
ds_grid_add(planetary,81,yygrid,0)//datesave
ds_grid_add(planetary,89,yygrid,0)//shield bonus
ds_grid_add(planetary,101,yygrid,0)//atk t0
ds_grid_add(planetary,102,yygrid,0)//atk t2
ds_grid_add(planetary,103,yygrid,0)//atk t3
ds_grid_add(planetary,104,yygrid,0)//atk t4
ds_grid_add(planetary,105,yygrid,0)//atk t5
ds_grid_add(planetary,106,yygrid,0)//atk t6
if lune &gt; 0 {
ds_grid_add(planetary,83,yygrid,random_range(600,2500))//taille de lune (si 0 exist pas)
ds_grid_add(planetary,84,yygrid,random_range(200,1000))//distancelune
}
asteoringexist = choose(0,0,1,2,3,4,5)
if lune &gt; 0 {
ds_grid_add(planetary,200,yygrid,ds_grid_get(planetary,84,yygrid)+random_range(100,200*asteoringexist))//distringmin
ds_grid_add(planetary,201,yygrid,ds_grid_get(planetary,200,yygrid)+random_range(50,200*asteoringexist))//distringmax
}else{
ds_grid_add(planetary,200,yygrid,random_range(100,200*asteoringexist))//distringmin
ds_grid_add(planetary,201,yygrid,ds_grid_get(planetary,200,yygrid)+random_range(50,200*asteoringexist))//distringmax
}
if asteoringexist &gt; 0 {
ds_grid_add(planetary,202,yygrid,random_range(50,500)*asteoringexist)}//nbrasteoring
ds_grid_add(planetary,203,yygrid,random_range(0.15,0.2))//scalering 0.2 max 0.002 min
ds_grid_set(planetary,204,yygrid,100)//si hpplanet &lt; 0 deviens champ d asteoride pour mission
ds_grid_add(planetary,205,yygrid,0)//
ds_grid_add(planetary,206,yygrid,0)//
ds_grid_add(planetary,207,yygrid,0)//
ds_grid_add(planetary,208,yygrid,0)//
ds_grid_add(planetary,209,yygrid,0)//


  


randomize();
var i7;
if atmovalable = 0 &amp;&amp; colonizee = 0 {
//spr_build
chooseobj[1] = 20
chooseobj[2] = 21
chooseobj[3] = 22
chooseobj[4] = 23
chooseobj[5] = 24
chooseobj[6] = 25
chooseobj[7] = 26
chooseobj[8] = 27
chooseobj[9] = 28
chooseobj[10] = 29
}
if atmovalable = 1 &amp;&amp; colonizee = 0 {
//spr_build
chooseobj[1] = choose(20,10)
chooseobj[2] = choose(21,11)
chooseobj[3] = choose(22,12)
chooseobj[4] = choose(23,13)
chooseobj[5] = choose(24,14)
chooseobj[6] = choose(25,15)
chooseobj[7] = choose(26,16)
chooseobj[8] = choose(27,17)
chooseobj[9] = choose(28,18)
chooseobj[10] = choose(29,19)
}
if atmovalable = 1 &amp;&amp; colonizee = 1 {
//spr_build
chooseobj[1] = choose(20,10,0)
chooseobj[2] = choose(21,11,1)
chooseobj[3] = choose(22,12,2)
chooseobj[4] = choose(23,13,3)
chooseobj[5] = choose(24,14,4)
chooseobj[6] = choose(25,15,5)
chooseobj[7] = choose(26,16,6)
chooseobj[8] = choose(27,17,7)
chooseobj[9] = choose(28,18,8)
chooseobj[10] = choose(29,19,9)
}
for (i7 = 0; i7 &lt; 360; i7 += 5)
   {
   ds_grid_add(planetary,100+(i7/5),yygrid,choose(chooseobj[1],chooseobj[2],chooseobj[3],chooseobj[4],chooseobj[5],chooseobj[6],chooseobj[7],chooseobj[8],chooseobj[9],chooseobj[10]))
   }

}





//METTRE LES ALARM ECT
   
   
   
   
   
   
   
   
   
for (i = 1; i &lt; ds_grid_height(planetary)-1; i += 1)
   {if ds_grid_get(planetary,32,i) &gt; 0 {
   alarmattack = floor(random_range(50,10000))//1000,50000))
   ds_grid_set(planetary,51,i,alarmattack)//alarmattack
    ds_grid_set(planetary,52,i,alarmattack/10)//timeattack
    ds_grid_set(planetary,34,i,choose(2,3))//enemy
   }else{
   alarmattack = floor(random_range(500,200000))//1000,50000))
   ds_grid_set(planetary,51,i,alarmattack)//alarmattack
    ds_grid_set(planetary,52,i,alarmattack/10)//timeattack
    ds_grid_set(planetary,34,i,choose(2,3))//timeattack
    }
    //ressource
ds_grid_add(planetary,90,i,floor(random_range(50,150)))//iron
ds_grid_add(planetary,91,i,floor(random_range(50,150)))//Silicate
ds_grid_add(planetary,92,i,floor(random_range(50,150)))//Crystal
ds_grid_add(planetary,93,i,floor(random_range(50,150)))//Hydrogen
ds_grid_add(planetary,94,i,floor(random_range(50,150)))//Rhodium
ds_grid_add(planetary,95,i,floor(random_range(50,150)))//Gold
ds_grid_add(planetary,96,i,floor(random_range(50,150)))//Plutonium
ds_grid_add(planetary,97,i,floor(random_range(50,150)))//Platine
ds_grid_add(planetary,98,i,floor(random_range(50,150)))//Anti-matter 
   } 
   
   savedate = date_current_datetime()*100000
   //1852
   

   
   ////SOLEIL !!!!!!!!!!!!!!!
   for (i = 0; i &lt; 70; i += 1)
   {  
   ds_grid_set(planetary,205,i,random_range(2000,5000))//soleil taille
ds_grid_set(planetary,206,i,0)//soleil distance
ds_grid_set(planetary,207,i,0)//soleil color1
ds_grid_set(planetary,208,i,0)//soleil color2
ds_grid_set(planetary,209,i,0)//soleilsystemesolaire
ds_grid_set(planetary,210,i,0)//niveaudeporte
   }
   //ds_grid_set_region(planetary, 51, 0, 52, 200, 5000);
   
   //POSSIBLE BACKGROUND
   for (i = 0; i &lt; ds_grid_height(planetary)-1; i += 1)
   {
   ds_grid_set(planetary,216,i,random_range(700,5000))
   }
   
   
   
   for (i = 1; i &lt; ds_grid_height(planetary)-1; i += 1)
   {
   ds_grid_set(planetary,242,i,"")//ALLIANCE GUILD ID PLANET
   ds_grid_add(planetary,231,i,floor(random_range(100,500)))//shipatak1
ds_grid_add(planetary,232,i,floor(random_range(10,50)))//shipatak2
ds_grid_add(planetary,233,i,floor(random_range(10,50)))//shipatak3
ds_grid_add(planetary,234,i,floor(random_range(10,50)))//shipatak4
ds_grid_add(planetary,235,i,floor(random_range(10,50)))//shipatak5
ds_grid_add(planetary,236,i,0)//shipatak6
ds_grid_add(planetary,237,i,0)//shipatak7

   fraci = i/10
   fraci2 = (frac(fraci))*10
   namebonus = ".I"
   if fraci2 = 1 {namebonus = ".II"}
   if fraci2 = 2 {namebonus = ".III"}
   if fraci2 = 3 {namebonus = ".IV"}
   if fraci2 = 4 {namebonus = ".V"}
   if fraci2 = 5 {namebonus = ".VI"}
   if fraci2 = 6 {namebonus = ".VII"}
   if fraci2 = 7 {namebonus = ".VIII"}
   if fraci2 = 8 {namebonus = ".IX"}
   if fraci2 = 9 {namebonus = ".X"}
   
   ds_grid_set(planetary,8,i,string(starname[ds_grid_get(planetary,28,i)])+string(namebonus))
   }
   
   //PLANET MORTE POUR TOUT LE MONDE
   ds_grid_set(planetary,204,35,0)
   ds_grid_set(planetary,204,77,0)
   ds_grid_set(planetary,204,144,0)
   ds_grid_set(planetary,204,135,0)
   ds_grid_set(planetary,204,242,0)
   ds_grid_set(planetary,204,354,0)
   ds_grid_set(planetary,204,422,0)
   ds_grid_set(planetary,204,468,0)
   
   /*for (i = 0; i &lt; ds_grid_height(planetary)-1; i += 1)
   {randomize();
   a = chr(irandom_range(ord('A'), ord('Z')))
   b = chr(irandom_range(ord('A'), ord('Z')))
   c = chr(irandom_range(ord('A'), ord('Z')))
   d = chr(irandom_range(ord('A'), ord('Z')))
   e = chr(irandom_range(ord('A'), ord('Z')))
   f = chr(irandom_range(ord('A'), ord('Z')))
   g = chr(irandom_range(ord('A'), ord('Z')))
   h = chr(irandom_range(ord('A'), ord('Z')))
   i = chr(irandom_range(ord('A'), ord('Z')))
   j = chr(irandom_range(ord('A'), ord('Z')))
   strname = string(a)+string(b)+
   string(c)+string(d)+string(e)+string(f)+string(g)+string(h)+string(i)+string(j)
   
   show_message(strname)
   //ds_grid_set(planetary,8,i,string(strname))//name
   }*/
   
   
   
   

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if toPMtime &lt;= 0 {
    ds_grid_add(planetary,43,0,toPMssc1)//shiptype1nbr
    ds_grid_add(planetary,44,0,toPMssc2)//shiptype2nbr
    ds_grid_add(planetary,45,0,toPMssc3)//shiptype3nbr
    ds_grid_add(planetary,46,0,toPMssc4)//shiptype4nbr
    ds_grid_add(planetary,47,0,toPMssc5)//shiptype5nbr
    ds_grid_add(planetary,48,0,toPMssc6)//shiptype6nbr
    ds_grid_add(planetary,49,0,toPMssc7)//shiptype7nbr
    
    ds_grid_add(planetary,35,0,toPMrttal)
    ds_grid_add(planetary,90,0,toPMr1)
    ds_grid_add(planetary,91,0,toPMr2)
    ds_grid_add(planetary,92,0,toPMr3)
    ds_grid_add(planetary,93,0,toPMr4)
    ds_grid_add(planetary,94,0,toPMr5)
    ds_grid_add(planetary,95,0,toPMr6)
    ds_grid_add(planetary,96,0,toPMr7)
    ds_grid_add(planetary,97,0,toPMr8)
    ds_grid_add(planetary,98,0,toPMr9)
    
    toPMssc1 = 0
    toPMssc2 = 0
    toPMssc3 = 0
    toPMssc4 = 0
    toPMssc5 = 0
    toPMssc6 = 0
    toPMssc7 = 0
    toPMrttal = 0
    toPMr1 = 0
    toPMr2 = 0
    toPMr3 = 0
    toPMr4 = 0
    toPMr5 = 0
    toPMr6 = 0
    toPMr7 = 0
    toPMr8 = 0
    toPMr9 = 0
    toPMtime = 0
    
}else{
    toPMtime -= 1
}

if statschoosemenu = 5 {
if global.clickss = 1 {global.ssc1 = real(keyboard_string);}
if global.clickss = 2 {global.ssc2 = real(keyboard_string);}
if global.clickss = 3 {global.ssc3 = real(keyboard_string);}
if global.clickss = 4 {global.ssc4 = real(keyboard_string);}
if global.clickss = 5 {global.ssc5 = real(keyboard_string);}
if global.clickss = 6 {global.ssc6 = real(keyboard_string);}
if global.clickss = 7 {global.ssc7 = real(keyboard_string);}
if global.clickss = 8 {global.to = real(keyboard_string);}
if global.clickss = 9 {global.r = real(keyboard_string);}
}else{
global.ssc1 = 0;
global.ssc2 = 0;
global.ssc3 = 0;
global.ssc4 = 0;
global.ssc5 = 0;
global.ssc6 = 0;
global.ssc7 = 0;
global.to = 0;
global.r = 0;
}


colorrect14 = c_black
colorrect15 = c_black
colorrect16 = c_black
colorrect17 = c_black
colorrect18 = c_black
colorrect19 = c_black

//if completeedition = 1 {
scr_stepTest();
//scr_stepcomplete()
//}else{scr_step();}
if instance_exists(obj_highscore){}else{
instance_create(x,y,obj_highscore)
}

if view_yview &lt; 0 {view_yview = 0}
if view_xview &lt; 0 {view_xview = 0}
if view_yview+(room_height/zoomlerp) &gt; room_height {view_yview = room_height-(room_height/zoomlerp)}
if view_xview+(room_width/zoomlerp) &gt; room_width {view_xview = room_width-(room_width/zoomlerp) }


if echelle = 0 {}else{
//optiportabletaille = 1
//optiportabletaillevar = 1
zoom = 1
global.modesolo = 0
//zoom += 0.5
view_wview = room_width/zoom
view_hview = room_height/zoom
}
//view_wport = 300
//view_hport = 300
if keyboardcheck = 0 {keyboardcheck2 = 1}

if keyboardcheck = 0 {
global.name = keyboard_string
}
if keyboardcheck2 = 0 {
//global.idguild = global.idfixe
global.idguildname = keyboard_string
}
//if keyboardcheck3 = 0 {
//global.idguild = global.idfixe
//global.idguildname = keyboard_string
//}
if menuplanet = 3 {}else{
if keyboardcheck = 0 {
global.name = "Guest:"+string(global.idfixe);keyboardcheck = 1
}
}

if global.idguildname = "" {global.idguildname = "None"}



if echelle = 0 {}else{
if audio_is_playing(snd_quantum2){}else{audio_stop_sound(snd_quantum2);}
if audio_is_playing(snd_quantum){}else{audio_stop_sound(snd_quantum);}
if audio_is_playing(snd_lasera){}else{audio_stop_sound(snd_lasera);}}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if viewylerp+room_height/zoomlerp &lt; room_height {viewylerp += 10}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if viewxlerp+room_width/zoomlerp &lt; room_width {viewxlerp += 10}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if viewylerp &gt; 0 {viewylerp -= 10}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if viewxlerp &gt; 0 {viewxlerp -= 10}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if menuplanet = 1 or menuplanet = 3{
if menuplanet = 3 {
if roll &lt; 450 {roll += 20}
}else
if roll &lt; 600 {roll += 20}
}else if menuhelp = 0{
alarm[5] = 30
if optiportabletaillelerp &gt; 0.2 {optiportabletaillelerp -= 0.1}
}

if menuhelp = 1 {
if roll2 &lt; 3000 {roll2 += 20}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if menuplanet = 1 or menuplanet = 3{
if roll &gt; 0 {roll -= 20}
}else if menuhelp = 0 {
alarm[5] = 30
if optiportabletaillelerp &lt; 1 {optiportabletaillelerp += 0.1}
}
if menuhelp = 1 {
if roll2 &gt; 0 {roll2 -= 20}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if maitredeslieu = 1 {
if instance_exists(obj_shipcommand){}else{
optiportabletaille = 0.3
optiportabletaillevar = 0.3
with(instance_create(mouse_x,mouse_y,obj_shipcommand)){

colorship = ds_grid_get(other.planetary,32,other.planetnowid)
enemy = ds_grid_get(obj_planetary.planetary,32,other.planetnowid);
stationaire = 1
planetparent = other.planetnowid
rotaaleatdecol = random(360)
image_angle = point_direction(room_width/2,room_height/2,room_width/2+lengthdir_x(100,rotaaleatdecol),room_height/2+lengthdir_y(100,rotaaleatdecol))
dir = image_angle

xx = room_width/2+lengthdir_x((ds_grid_get(obj_planetary.planetary,7,other.planetnowid)/25)*other.optiportabletaille,rotaaleatdecol)
yy = room_height/2+lengthdir_y((ds_grid_get(obj_planetary.planetary,7,other.planetnowid)/25)*other.optiportabletaille,rotaaleatdecol)
xxlerp = xx
yylerp = yy
vargetdsgrid[1] = ds_grid_get(obj_planetary.planetary,51,other.planetnowid)
vargetdsgrid[2] = ds_grid_get(obj_planetary.planetary,34,other.planetnowid)
vargetdsgrid[3] = (ds_grid_get(obj_planetary.planetary,7,other.planetnowid)/25)*other.optiportabletaille
vargetdsgrid[4] = ds_grid_get(obj_planetary.planetary,32,other.planetnowid)


}
}
}
/*with(instance_create(mouse_x,mouse_y,obj_rocket)){
image_angle = 0
enemy = global.idfixe
planetparent = other.planetnowid
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var type = string(async_load[? "type"])
var data = string(async_load[? "data"])

//check for INPUTTEXT type of event
if type == "INPUTTEXT"
{
   //Here you should receive the string containing the text written by the user
   //which is stored inside the variable called "data"
   var StringWrittenByUser = data
   keyboard_string = StringWrittenByUser
   //if keyboardcheck2 = 0 {
   if keyboardcheck = 0 {
        global.name = keyboard_string;
        keyboardcheck = 1;
        keyboard_string = "";
    }
   if keyboardcheck2 = 0 {
    keyboardcheck2 = 1
   //keyboardcheck2 = 1
    with(obj_highscore){
        var hiscore_map, i, str;
        hiscore_map = ds_map_create();
        //ds_map_set(hiscore_map,'id', global.travel);
        ds_map_set(hiscore_map,'cu', global.idfixe);
        ds_map_set(hiscore_map,'cun', global.name);
        ds_map_set(hiscore_map,'cur', obj_planetary.scoreressvalid);
        ds_map_set(hiscore_map,'cus', obj_planetary.scoreshipsvalid);
        ds_map_set(hiscore_map,'cut', obj_planetary.scoresciencevalid);
        ds_map_set(hiscore_map,'cud', obj_planetary.scoredefvalid);
        ds_map_set(hiscore_map,'n', keyboard_string);
        str = json_encode(hiscore_map);
        ds_map_destroy(hiscore_map); 
        postGuild = http_post_string(addr+"universe/addguild" , str);
    }
    scr_addinfo2(19,"",planetnowid)
keyboard_string = "";
}
/*if keyboardcheck2 = 0 {
global.idguildname = keyboard_string;keyboardcheck2 = 1
keyboard_string = "";
}*/

if menuplanet = 3 {
if menuplanet3 &gt; 0 {
//show_message(menuplanet3)
if keyboard_string = "" or keyboard_string = " " {}else{
if keyboardcheck = 1 &amp;&amp; keyboardcheck2 = 1 {
if menuplanet3 = 3 {get_chat(global.idguild,menuplanet3);}
if menuplanet3 &gt; 0 {
roll = 450

with(obj_highscore){
    var hiscore_map, i, str;
    hiscore_map = ds_map_create();
    ds_map_set(hiscore_map,'id', other.buildaffect);
    ds_map_set(hiscore_map,'by', global.idfixe);
    ds_map_set(hiscore_map,'byn', global.name);
    if obj_planetary.menuplanet3 = 2 {
        ds_map_set(hiscore_map,'to', global.lastprivatemessage);
    }
    
    if obj_planetary.menuplanet3 = 3 {
        ds_map_set(hiscore_map,'g', global.idguild);
    }else{
        ds_map_set(hiscore_map,'g', "");
    }
    ds_map_set(hiscore_map,'m', keyboard_string);
    ds_map_set(hiscore_map,'t', 1);
    str = json_encode(hiscore_map);
    ds_map_destroy(hiscore_map); 
    post2 = http_post_string(addr+"universe/addMessage" , str);
}
 


get_chat(0,menuplanet3);}else{
get_chat(global.idfixe,menuplanet3);}

}}
keyboard_string = "";
if menuplanet3 = 3 {get_chat(global.idguild,menuplanet3);}else
if menuplanet3 = 1 {get_chat(0,menuplanet3);}else{
get_chat(global.idfixe,menuplanet3);}
//showInputText("Title Text", "OK", "Cancel")
}
with(obj_planetary){if scoreshipsvalid &gt; 0 {if global.name = "" or global.name = " " {}else{
//update_score(global.name,scoretotal,global.idfixe,scoreressvalid,scoreshipsvalid,scoresciencevalid,scoredefvalid,global.idguildname,global.idguild,global.grade);
}}}
//if instance_exists(obj_highscore){with(obj_highscore){instance_destroy();}}
}

if statschoosemenu = 5 {
if keyboard_string = "" or keyboard_string = " " {}else{
if keyboardcheck = 1 &amp;&amp; keyboardcheck2 = 1 {
if global.clickss = 1 {global.ssc1 = real(keyboard_string);}
if global.clickss = 2 {global.ssc2 = real(keyboard_string);}
if global.clickss = 3 {global.ssc3 = real(keyboard_string);}
if global.clickss = 4 {global.ssc4 = real(keyboard_string);}
if global.clickss = 5 {global.ssc5 = real(keyboard_string);}
if global.clickss = 6 {global.ssc6 = real(keyboard_string);}
if global.clickss = 7 {global.ssc7 = real(keyboard_string);}
if global.clickss = 8 {global.to = real(keyboard_string);}
if global.clickss = 9 {global.r = real(keyboard_string);}
global.clickss = 0
if global.to &gt; 500 {global.to = 500}else if global.to &lt; 0 {global.to = 0}
if global.to != 0 &amp;&amp; global.to != planetnowid {
    with(obj_highscore){
        var hiscore_map, i, str;
        hiscore_map = ds_map_create();
        ds_map_set(hiscore_map,'id', global.to);
        ds_map_set(hiscore_map,'sr', ds_grid_get(obj_planetary.planetary,39,global.to));
        ds_map_set(hiscore_map,'ss', ds_grid_get(obj_planetary.planetary,40,global.to));
        ds_map_set(hiscore_map,'st', ds_grid_get(obj_planetary.planetary,41,global.to));
        ds_map_set(hiscore_map,'sd', ds_grid_get(obj_planetary.planetary,42,global.to));
        ds_map_set(hiscore_map,'cu', global.idfixe);
        str = json_encode(hiscore_map);
        ds_map_destroy(hiscore_map); 
        post = http_post_string(addr+"universe/loadbyid" , str);
    }
}
if real(global.ssc1) &gt; ds_grid_get(planetary,43,planetnowid)-10{global.ssc1 = ds_grid_get(planetary,43,planetnowid)-10
}else if real(global.ssc1) &lt; 0 {global.ssc1 = 0}
if real(global.ssc2) &gt; ds_grid_get(planetary,44,planetnowid){global.ssc2 = ds_grid_get(planetary,44,planetnowid)
}else if real(global.ssc2) &lt; 0 {global.ssc2 = 0}
if real(global.ssc3) &gt; ds_grid_get(planetary,45,planetnowid){global.ssc3 = ds_grid_get(planetary,45,planetnowid)
}else if real(global.ssc3) &lt; 0 {global.ssc3 = 0}
if real(global.ssc4) &gt; ds_grid_get(planetary,46,planetnowid){global.ssc4 = ds_grid_get(planetary,46,planetnowid)
}else if real(global.ssc4) &lt; 0 {global.ssc4 = 0}
if real(global.ssc5) &gt; ds_grid_get(planetary,47,planetnowid){global.ssc5 = ds_grid_get(planetary,47,planetnowid)
}else if real(global.ssc5) &lt; 0 {global.ssc5 = 0}
if real(global.ssc6) &gt; ds_grid_get(planetary,48,planetnowid){global.ssc6 = ds_grid_get(planetary,48,planetnowid)
}else if real(global.ssc6) &lt; 0 {global.ssc6 = 0}
if real(global.ssc7) &gt; ds_grid_get(planetary,49,planetnowid){global.ssc7 = ds_grid_get(planetary,49,planetnowid)
}else if real(global.ssc7) &lt; 0 {global.ssc7 = 0}
if real(global.r) &gt; maxRessourceSended{global.r = maxRessourceSended
}else if real(global.r) &lt; 0 {global.r = 0}
}
}
keyboard_string = "";
}


keyboard_string = "";


global.clickss = 0
   //now use it as you please
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//scr_save();
if dontSave = 0 {
scr_save();
 }
 
   part_type_destroy(particle1);
  part_type_destroy(particle2);
  part_type_destroy(particlec);
  part_type_destroy(particles);
  part_type_destroy(particleg);

part_system_destroy(Sname);
part_system_destroy(Snamec);
part_system_destroy(Snames);
part_system_destroy(Snameg);
ds_grid_destroy(planetary);

surface_free(surf);
surface_free(surf2);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//optiportabletaille = 1

if global.phpload = 0 {
if alarm[9] &lt; 0 {alarm[9] = 20}
draw_sprite_ext(spr_loading,0,room_width-150,room_height-150,0.4,0.4,rotaload,c_white,1)}




//enlever zoom si menu
if menuplanet = 0 &amp;&amp; menuhelp = 0{}else{zoom = 1
view_wview = room_width/zoom
view_hview = room_height/zoom
view_yview = 0
view_xview = 0}
view_wview = room_width/zoom
view_hview = room_height/zoom
zoom = lerp(zoom,zoomlerp,0.1)


view_xview = lerp(view_xview,viewxlerp,0.1)
view_yview = lerp(view_yview,viewylerp,0.1)


if display_get_orientation() = display_portrait
   {distanceadaptsyst = 1.5
   portrait = 1
    if echelle = 2 {room_width = 607.5;room_height = 1080;}else
    if moderatio = 1 {room_width = 607.5;room_height = 1080;}else
    if moderatio = 2 {room_width = 426.6;room_height = 640;}else
    if moderatio = 3 {room_width = 574.4;room_height = 768;}else
    if moderatio = 4 {room_width = 500;room_height = 800;}else
    if moderatio = 5 {room_width = 428.8;room_height = 768;}else
    if moderatio = 6 {room_width = 787.6;room_height = 1050;}else
    if moderatio = 7 {room_width = 655.3;room_height = 1024;}else
    if moderatio = 8 {room_width = 900.2;room_height = 1200;}else
    if moderatio = 9 {room_width = 1152.2;room_height = 1536;}else
    if moderatio = 10 {room_width = 525.41;room_height = 1080;}
    if xxconstellation[1] = 1516 {
   scr_constellationadapt1();
   if surface_exists(surf)
   {surface_free(surf);}}
    portrait = 1
    }else{
    distanceadaptsyst = 1
    if echelle = 2 {room_width = 1920;room_height = 1080;}else
    if moderatio = 1 {room_width = 1920;room_height = 1080;}else
    if moderatio = 2 {room_width = 960;room_height = 640;}else
    if moderatio = 3 {room_width = 1024;room_height = 768;}else
    if moderatio = 4 {room_width = 1280;room_height = 800;}else
    if moderatio = 5 {room_width = 1366;room_height = 768;}else
    if moderatio = 6 {room_width = 1400;room_height = 1050;}else
    if moderatio = 7 {room_width = 1600;room_height = 1024;}else
    if moderatio = 8 {room_width = 1600;room_height = 1200;}else
    if moderatio = 9 {room_width = 2048;room_height = 1536;}else
    if moderatio = 10 {room_width = 2220;room_height = 1080;}
   
   //optiportabletaille = 1
   portrait = 0
   if xxconstellation[1] = 1516 {}else{
   scr_constellationadapt2();
   if surface_exists(surf)
   {surface_free(surf);}
   }
   }
   if surface_exists(surf)
   {
    shipencible = 0
    //selection des mobs
    if device_mouse_check_button(0, mb_left) &amp;&amp; global.modesolo = 0{
    alarm[5] = 250
    xxmousefin = device_mouse_x(0);
    yymousefin = device_mouse_y(0);
    xxmouse = device_mouse_x(0);
    yymouse = device_mouse_y(0);
    
    //scr_laser();
    
    if echelle = 0 &amp;&amp; menuplanet = 0 &amp;&amp; menuhelp = 0{
    if idplanet[1] = -1 /*or idplanet[1] = planetnowid 
    or idplanet[2] = planetnowid or idplanet[3] = planetnowid 
    or idplanet[4] = planetnowid */
    {}else{
    dircolo2 = point_direction(room_width/2,room_height/2,xxmouse,yymouse)
    xxbasedir = room_width/2+lengthdir_x(1500,dircolo2)
    yybasedir = room_height/2+lengthdir_y(1500,dircolo2)
    draw_set_color(c_red);
    if idplanet[1] = planetnowid or idplanet[2] = planetnowid or idplanet[3] = planetnowid 
    or idplanet[4] = planetnowid {}else{draw_line(xxmouse,yymouse,xxbasedir,yybasedir)}
    shipencible = 1}
    draw_set_color(planetarycolor);
    draw_rectangle(xxmousebase,yymousebase,xxmousefin,yymousefin,true);
    }
    }
    
    
draw_set_font(fnt_poly);

if device_mouse_check_button(0, mb_left) {
xxmouse = device_mouse_x(0);
yymouse = device_mouse_y(0);}
if alarm[0] &lt; 0 {
//CONSTELLATION
if echelle = 2 {
if surface_exists(surf){draw_surface(surf, 0, 0);}

for (ic = 0; ic &lt; 50; ic += 1){
   draw_set_color(c_white);
   if portrait = 0 {
   if ic &gt; 1 {
   if point_distance(xxconstellation[ic], yyconstellation[ic],xxconstellation[ic-1], yyconstellation[ic-1]) &lt; 350 {
   draw_line_width(xxconstellation[ic], yyconstellation[ic],xxconstellation[ic-1], yyconstellation[ic-1], 3);}}else{
   draw_set_color(c_red);}
   if completeedition = 1 or ic &lt; 5 {
   draw_circle(xxconstellation[ic], yyconstellation[ic], 6, false);}
    }else{
    if ic &gt; 1 {
   if point_distance(xxconstellation[ic], yyconstellation[ic],xxconstellation[ic-1], yyconstellation[ic-1]) &lt; 200 {
   draw_line_width(xxconstellation[ic], yyconstellation[ic],xxconstellation[ic-1], yyconstellation[ic-1], 1);}}else{
   draw_set_color(c_red);}
   if completeedition = 1 or ic &lt; 5 {
   draw_circle(xxconstellation[ic], yyconstellation[ic], 6, false);}
   }
   if completeedition = 1 or ic &lt; 5 {
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxmouse,yymouse,xxconstellation[ic], yyconstellation[ic]) &lt; 40 {
echelle = 1
systemstellairenow = ic
scr_echelle1();
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
}}
}



}


for (ic = 0; ic &lt; 50; ic += 1){
draw_set_alpha(alarm[5]/100);
if alarm[5] &lt; 0 {}else{
textinfo = ""
/*if ds_grid_get(planetary,32,xxorbitdist1) = 1 {textinfo = "Your faction"}else
if ds_grid_get(planetary,32,xxorbitdist1) = 2 {textinfo = "Dominion"}else
if ds_grid_get(planetary,32,xxorbitdist1) = 3 {textinfo = "Xahor"}else
if ds_grid_get(planetary,32,xxorbitdist1) = 4 {textinfo = "Céhènyth"}*/
colortext = ds_grid_get(planetary,31,ic)
draw_set_colour(colortext);
draw_text(xxconstellation[ic], yyconstellation[ic],starname[ic]);}
draw_set_alpha(1);
}


}
//SYSTEM
if echelle = 1 {
//soleil
draw_set_alpha(0.1);
draw_set_color(ds_grid_get(planetary,30,systemstellairenow));
draw_circle(room_width/2,room_height/2,45,false);
draw_set_blend_mode( bm_subtract );
draw_circle_colour(room_width/2,room_height/2,45, c_black, c_white, 0);
draw_set_blend_mode( bm_normal );
draw_set_alpha(1);
if surface_exists(surf){draw_surface(surf, 0, 0);}
draw_circle(room_width/2,room_height/2,15,false);

   if xxorbitdist1 = -2 {}else{
   xxorbit1 = room_width/2+lengthdir_x((ds_grid_get(planetary,2,xxorbitdist1)/(150000000/200))/distanceadaptsyst,randomangleorbit1)
    yyorbit1 = room_height/2+lengthdir_y((ds_grid_get(planetary,2,xxorbitdist1)/(150000000/200))/distanceadaptsyst,randomangleorbit1)
    }if xxorbitdist2 = -2 {}else{
   xxorbit2 = room_width/2+lengthdir_x((ds_grid_get(planetary,2,xxorbitdist2)/(150000000/200))/distanceadaptsyst,randomangleorbit2)
    yyorbit2 = room_height/2+lengthdir_y((ds_grid_get(planetary,2,xxorbitdist2)/(150000000/200))/distanceadaptsyst,randomangleorbit2)
    }if xxorbitdist3 = -2 {}else{
   xxorbit3 = room_width/2+lengthdir_x((ds_grid_get(planetary,2,xxorbitdist3)/(150000000/200))/distanceadaptsyst,randomangleorbit3)
    yyorbit3 = room_height/2+lengthdir_y((ds_grid_get(planetary,2,xxorbitdist3)/(150000000/200))/distanceadaptsyst,randomangleorbit3)
    }if xxorbitdist4 = -2 {}else{
   xxorbit4 = room_width/2+lengthdir_x((ds_grid_get(planetary,2,xxorbitdist4)/(150000000/200))/distanceadaptsyst,randomangleorbit4)
    yyorbit4 = room_height/2+lengthdir_y((ds_grid_get(planetary,2,xxorbitdist4)/(150000000/200))/distanceadaptsyst,randomangleorbit4)
    }if xxorbitdist5 = -2 {}else{
   xxorbit5 = room_width/2+lengthdir_x((ds_grid_get(planetary,2,xxorbitdist5)/(150000000/200))/distanceadaptsyst,randomangleorbit5)
    yyorbit5 = room_height/2+lengthdir_y((ds_grid_get(planetary,2,xxorbitdist5)/(150000000/200))/distanceadaptsyst,randomangleorbit5)
    }if xxorbitdist6 = -2 {}else{
   xxorbit6 = room_width/2+lengthdir_x((ds_grid_get(planetary,2,xxorbitdist6)/(150000000/200))/distanceadaptsyst,randomangleorbit6)
    yyorbit6 = room_height/2+lengthdir_y((ds_grid_get(planetary,2,xxorbitdist6)/(150000000/200))/distanceadaptsyst,randomangleorbit6)
    }if xxorbitdist7 = -2 {}else{
   xxorbit7 = room_width/2+lengthdir_x((ds_grid_get(planetary,2,xxorbitdist7)/(150000000/200))/distanceadaptsyst,randomangleorbit7)
    yyorbit7 = room_height/2+lengthdir_y((ds_grid_get(planetary,2,xxorbitdist7)/(150000000/200))/distanceadaptsyst,randomangleorbit7)
    }if xxorbitdist8 = -2 {}else{
   xxorbit8 = room_width/2+lengthdir_x((ds_grid_get(planetary,2,xxorbitdist8)/(150000000/200))/distanceadaptsyst,randomangleorbit8)
    yyorbit8 = room_height/2+lengthdir_y((ds_grid_get(planetary,2,xxorbitdist8)/(150000000/200))/distanceadaptsyst,randomangleorbit8)
    }if xxorbitdist9 = -2 {}else{
   xxorbit9 = room_width/2+lengthdir_x((ds_grid_get(planetary,2,xxorbitdist9)/(150000000/200))/distanceadaptsyst,randomangleorbit9)
    yyorbit9 = room_height/2+lengthdir_y((ds_grid_get(planetary,2,xxorbitdist9)/(150000000/200))/distanceadaptsyst,randomangleorbit9)
    }
if device_mouse_check_button(0, mb_left) {
draw_set_color(c_red);
if idplanet[1] = xxorbitdist1 {draw_line(xxorbit1,yyorbit1,xxmouse,yymouse)}
if idplanet[1] = xxorbitdist2 {draw_line(xxorbit2,yyorbit2,xxmouse,yymouse)}
if idplanet[1] = xxorbitdist3 {draw_line(xxorbit3,yyorbit3,xxmouse,yymouse)}
if idplanet[1] = xxorbitdist4 {draw_line(xxorbit4,yyorbit4,xxmouse,yymouse)}
if idplanet[1] = xxorbitdist5 {draw_line(xxorbit5,yyorbit5,xxmouse,yymouse)}
if idplanet[1] = xxorbitdist6 {draw_line(xxorbit6,yyorbit6,xxmouse,yymouse)}
if idplanet[1] = xxorbitdist7 {draw_line(xxorbit7,yyorbit7,xxmouse,yymouse)}
if idplanet[1] = xxorbitdist8 {draw_line(xxorbit8,yyorbit8,xxmouse,yymouse)}
if idplanet[1] = xxorbitdist9 {draw_line(xxorbit9,yyorbit9,xxmouse,yymouse)}

if idplanet[2] = xxorbitdist1 {draw_line(xxorbit1,yyorbit1,xxmouse,yymouse)}
if idplanet[2] = xxorbitdist2 {draw_line(xxorbit2,yyorbit2,xxmouse,yymouse)}
if idplanet[2] = xxorbitdist3 {draw_line(xxorbit3,yyorbit3,xxmouse,yymouse)}
if idplanet[2] = xxorbitdist4 {draw_line(xxorbit4,yyorbit4,xxmouse,yymouse)}
if idplanet[2] = xxorbitdist5 {draw_line(xxorbit5,yyorbit5,xxmouse,yymouse)}
if idplanet[2] = xxorbitdist6 {draw_line(xxorbit6,yyorbit6,xxmouse,yymouse)}
if idplanet[2] = xxorbitdist7 {draw_line(xxorbit7,yyorbit7,xxmouse,yymouse)}
if idplanet[2] = xxorbitdist8 {draw_line(xxorbit8,yyorbit8,xxmouse,yymouse)}
if idplanet[2] = xxorbitdist9 {draw_line(xxorbit9,yyorbit9,xxmouse,yymouse)}

if idplanet[3] = xxorbitdist1 {draw_line(xxorbit1,yyorbit1,xxmouse,yymouse)}
if idplanet[3] = xxorbitdist2 {draw_line(xxorbit2,yyorbit2,xxmouse,yymouse)}
if idplanet[3] = xxorbitdist3 {draw_line(xxorbit3,yyorbit3,xxmouse,yymouse)}
if idplanet[3] = xxorbitdist4 {draw_line(xxorbit4,yyorbit4,xxmouse,yymouse)}
if idplanet[3] = xxorbitdist5 {draw_line(xxorbit5,yyorbit5,xxmouse,yymouse)}
if idplanet[3] = xxorbitdist6 {draw_line(xxorbit6,yyorbit6,xxmouse,yymouse)}
if idplanet[3] = xxorbitdist7 {draw_line(xxorbit7,yyorbit7,xxmouse,yymouse)}
if idplanet[3] = xxorbitdist8 {draw_line(xxorbit8,yyorbit8,xxmouse,yymouse)}
if idplanet[3] = xxorbitdist9 {draw_line(xxorbit9,yyorbit9,xxmouse,yymouse)}

if idplanet[4] = xxorbitdist1 {draw_line(xxorbit1,yyorbit1,xxmouse,yymouse)}
if idplanet[4] = xxorbitdist2 {draw_line(xxorbit2,yyorbit2,xxmouse,yymouse)}
if idplanet[4] = xxorbitdist3 {draw_line(xxorbit3,yyorbit3,xxmouse,yymouse)}
if idplanet[4] = xxorbitdist4 {draw_line(xxorbit4,yyorbit4,xxmouse,yymouse)}
if idplanet[4] = xxorbitdist5 {draw_line(xxorbit5,yyorbit5,xxmouse,yymouse)}
if idplanet[4] = xxorbitdist6 {draw_line(xxorbit6,yyorbit6,xxmouse,yymouse)}
if idplanet[4] = xxorbitdist7 {draw_line(xxorbit7,yyorbit7,xxmouse,yymouse)}
if idplanet[4] = xxorbitdist8 {draw_line(xxorbit8,yyorbit8,xxmouse,yymouse)}
if idplanet[4] = xxorbitdist9 {draw_line(xxorbit9,yyorbit9,xxmouse,yymouse)}
}
part_type_size(particle1,0.05,0.05,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(particle1,0,0,0,0);//,12,35,0.01,0);
part_type_colour1(particle1,c_white);//33023,255,65535);
part_type_direction(particle1,0,0,0,0);

if xxorbitdist1 = -2 {}else{
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxorbit1,yyorbit1,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
planetnowid = xxorbitdist1;echelle = 0;scr_asteoring();}}


part_particles_create(Sname,xxorbit1,yyorbit1,particle1,1);
draw_set_color(ds_grid_get(planetary,30,xxorbitdist1));
draw_circle(xxorbit1,yyorbit1,(ds_grid_get(planetary,7,xxorbitdist1)/1000)*distanceadaptsyst,false);}


//SOLEIL

if device_mouse_check_button_released(0, mb_left) {
if point_distance(room_width/2,room_height/2,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}

planetnowid = systemstellairenow;echelle = 0;scr_asteoring();
modesun = 1
}}





if xxorbitdist2 = -2 {}else{
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxorbit2,yyorbit2,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
planetnowid = xxorbitdist2;echelle = 0;scr_asteoring();}}
part_particles_create(Sname,xxorbit2,yyorbit2,particle1,1);
draw_set_color(ds_grid_get(planetary,30,xxorbitdist2));
draw_circle(xxorbit2,yyorbit2,(ds_grid_get(planetary,7,xxorbitdist2)/1000)*distanceadaptsyst,false);}

if xxorbitdist3 = -2 {}else{
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxorbit3,yyorbit3,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
planetnowid = xxorbitdist3;echelle = 0;scr_asteoring();}}
part_particles_create(Sname,xxorbit3,yyorbit3,particle1,1);
draw_set_color(ds_grid_get(planetary,30,xxorbitdist3));
draw_circle(xxorbit3,yyorbit3,(ds_grid_get(planetary,7,xxorbitdist3)/1000)*distanceadaptsyst,false);}

if xxorbitdist4 = -2 {}else{
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxorbit4,yyorbit4,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
planetnowid = xxorbitdist4;echelle = 0;scr_asteoring();}}
part_particles_create(Sname,xxorbit4,yyorbit4,particle1,1);
draw_set_color(ds_grid_get(planetary,30,xxorbitdist4));
draw_circle(xxorbit4,yyorbit4,(ds_grid_get(planetary,7,xxorbitdist4)/1000)*distanceadaptsyst,false);}

if xxorbitdist5 = -2 {}else{
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxorbit5,yyorbit5,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
planetnowid = xxorbitdist5;echelle = 0;scr_asteoring();}}
part_particles_create(Sname,xxorbit5,yyorbit5,particle1,1);
draw_set_color(ds_grid_get(planetary,30,xxorbitdist5));
draw_circle(xxorbit5,yyorbit5,(ds_grid_get(planetary,7,xxorbitdist5)/1000)*distanceadaptsyst,false);}

if xxorbitdist6 = -2 {}else{
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxorbit6,yyorbit6,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
planetnowid = xxorbitdist6;echelle = 0;scr_asteoring();}}
part_particles_create(Sname,xxorbit6,yyorbit6,particle1,1);
draw_set_color(ds_grid_get(planetary,30,xxorbitdist6));
draw_circle(xxorbit6,yyorbit6,(ds_grid_get(planetary,7,xxorbitdist6)/1000)*distanceadaptsyst,false);}

if xxorbitdist7 = -2 {}else{
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxorbit7,yyorbit7,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
planetnowid = xxorbitdist7;echelle = 0;scr_asteoring();}}
part_particles_create(Sname,xxorbit7,yyorbit7,particle1,1);
draw_set_color(ds_grid_get(planetary,30,xxorbitdist7));
draw_circle(xxorbit7,yyorbit7,(ds_grid_get(planetary,7,xxorbitdist7)/1000)*distanceadaptsyst,false);}

if xxorbitdist8 = -2 {}else{
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxorbit8,yyorbit8,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
planetnowid = xxorbitdist8;echelle = 0;scr_asteoring();}}
part_particles_create(Sname,xxorbit8,yyorbit8,particle1,1);
draw_set_color(ds_grid_get(planetary,30,xxorbitdist8));
draw_circle(xxorbit8,yyorbit8,(ds_grid_get(planetary,7,xxorbitdist8)/1000)*distanceadaptsyst,false);}

if xxorbitdist9 = -2 {}else{
if device_mouse_check_button_released(0, mb_left) {
if point_distance(xxorbit9,yyorbit9,xxmouse,yymouse) &lt; 40 {
if surface_exists(surf){
surface_set_target(surf);
draw_set_color(c_black);
draw_rectangle(0,room_width,0,room_height,true);
surface_reset_target();
surface_free(surf);}
planetnowid = xxorbitdist9;echelle = 0;scr_asteoring();}}
part_particles_create(Sname,xxorbit9,yyorbit9,particle1,1);
draw_set_color(ds_grid_get(planetary,30,xxorbitdist9));
draw_circle(xxorbit9,yyorbit9,(ds_grid_get(planetary,7,xxorbitdist9)/1000)*distanceadaptsyst,false);}


draw_sprite_ext(spr_buttonsolarsyst,1,room_width/2,50,0.3,0.3,0,c_white,1)
if device_mouse_check_button_released(0, mb_left) &amp;&amp; menuplanet = 0 &amp;&amp; menuhelp = 0{
if point_distance(room_width/2,50,xxmouse,yymouse) &lt; 40 &amp;&amp; menuplanet = 0  &amp;&amp; menuhelp = 0{
surface_free(surf);
echelle = 2;}}

if alarm[5] &gt; 0 {
draw_set_alpha(alarm[5]/100);
if xxorbitdist1 = -2 {}else{
textinfo = ""
if ds_grid_get(planetary,32,xxorbitdist1) = 2 {textinfo = "Dominion"}else
if ds_grid_get(planetary,32,xxorbitdist1) = 3 {textinfo = "Xahor"}else
if ds_grid_get(planetary,32,xxorbitdist1) = 4 {textinfo = "Céhènyth"}else
if ds_grid_get(planetary,32,xxorbitdist1) = global.idfixe {textinfo = global.name}else
if ds_grid_get(planetary,32,xxorbitdist1) &gt; 5 {textinfo = ds_grid_get(planetary,230,xxorbitdist1)}

colortext = ds_grid_get(planetary,31,xxorbitdist1)
draw_set_colour(colortext);
draw_text(xxorbit1,yyorbit1,textinfo);}
if xxorbitdist2 = -2 {}else{

textinfo = ""
//if ds_grid_get(planetary,32,xxorbitdist2) = global.idfixe {textinfo = "Your faction"}else
if ds_grid_get(planetary,32,xxorbitdist2) = 2 {textinfo = "Dominion"}else
if ds_grid_get(planetary,32,xxorbitdist2) = 3 {textinfo = "Xahor"}else
if ds_grid_get(planetary,32,xxorbitdist2) = 4 {textinfo = "Céhènyth"}else
if ds_grid_get(planetary,32,xxorbitdist2) = global.idfixe {textinfo = global.name}else
if ds_grid_get(planetary,32,xxorbitdist2) &gt; 5 {textinfo = ds_grid_get(planetary,230,xxorbitdist2)}
colortext = ds_grid_get(planetary,31,xxorbitdist2)
draw_set_colour(colortext);
draw_text(xxorbit2,yyorbit2,textinfo);}
if xxorbitdist3 = -2 {}else{
textinfo = ""
//if ds_grid_get(planetary,32,xxorbitdist3) = global.idfixe {textinfo = "Your faction"}else
if ds_grid_get(planetary,32,xxorbitdist3) = 2 {textinfo = "Dominion"}else
if ds_grid_get(planetary,32,xxorbitdist3) = 3 {textinfo = "Xahor"}else
if ds_grid_get(planetary,32,xxorbitdist3) = 4 {textinfo = "Céhènyth"}else
if ds_grid_get(planetary,32,xxorbitdist3) = global.idfixe {textinfo = global.name}else
if ds_grid_get(planetary,32,xxorbitdist3) &gt; 5 {textinfo = ds_grid_get(planetary,230,xxorbitdist3)}
colortext = ds_grid_get(planetary,31,xxorbitdist3)
draw_set_colour(colortext);
draw_text(xxorbit3,yyorbit3,textinfo);}
if xxorbitdist4 = -2 {}else{
textinfo = ""
//if ds_grid_get(planetary,32,xxorbitdist4) = global.idfixe {textinfo = "Your faction"}else
if ds_grid_get(planetary,32,xxorbitdist4) = 2 {textinfo = "Dominion"}else
if ds_grid_get(planetary,32,xxorbitdist4) = 3 {textinfo = "Xahor"}else
if ds_grid_get(planetary,32,xxorbitdist4) = 4 {textinfo = "Céhènyth"}else
if ds_grid_get(planetary,32,xxorbitdist4) = global.idfixe {textinfo = global.name}else
if ds_grid_get(planetary,32,xxorbitdist4) &gt; 5 {textinfo = ds_grid_get(planetary,230,xxorbitdist4)}
colortext = ds_grid_get(planetary,31,xxorbitdist4)
draw_set_colour(colortext);
draw_text(xxorbit4,yyorbit4,textinfo);}
if xxorbitdist5 = -2 {}else{

textinfo = ""
//if ds_grid_get(planetary,32,xxorbitdist5) = global.idfixe {textinfo = "Your faction"}else
if ds_grid_get(planetary,32,xxorbitdist5) = 2 {textinfo = "Dominion"}else
if ds_grid_get(planetary,32,xxorbitdist5) = 3 {textinfo = "Xahor"}else
if ds_grid_get(planetary,32,xxorbitdist5) = 4 {textinfo = "Céhènyth"}else
if ds_grid_get(planetary,32,xxorbitdist5) = global.idfixe {textinfo = global.name}else
if ds_grid_get(planetary,32,xxorbitdist5) &gt; 5 {textinfo = ds_grid_get(planetary,230,xxorbitdist5)}
colortext = ds_grid_get(planetary,31,xxorbitdist5)
draw_set_colour(colortext);
draw_text(xxorbit5,yyorbit5,textinfo);}
if xxorbitdist6 = -2 {}else{

textinfo = ""
//if ds_grid_get(planetary,32,xxorbitdist6) = global.idfixe {textinfo = "Your faction"}else
if ds_grid_get(planetary,32,xxorbitdist6) = 2 {textinfo = "Dominion"}else
if ds_grid_get(planetary,32,xxorbitdist6) = 3 {textinfo = "Xahor"}else
if ds_grid_get(planetary,32,xxorbitdist6) = 4 {textinfo = "Céhènyth"}else
if ds_grid_get(planetary,32,xxorbitdist6) = global.idfixe {textinfo = global.name}else
if ds_grid_get(planetary,32,xxorbitdist6) &gt; 5 {textinfo = ds_grid_get(planetary,230,xxorbitdist6)}
colortext = ds_grid_get(planetary,31,xxorbitdist6)
draw_set_colour(colortext);
draw_text(xxorbit6,yyorbit6,textinfo);}
if xxorbitdist7 = -2 {}else{

textinfo = ""
//if ds_grid_get(planetary,32,xxorbitdist7) = global.idfixe {textinfo = "Your faction"}else
if ds_grid_get(planetary,32,xxorbitdist7) = 2 {textinfo = "Dominion"}else
if ds_grid_get(planetary,32,xxorbitdist7) = 3 {textinfo = "Xahor"}else
if ds_grid_get(planetary,32,xxorbitdist7) = 4 {textinfo = "Céhènyth"}else
if ds_grid_get(planetary,32,xxorbitdist7) = global.idfixe {textinfo = global.name}else
if ds_grid_get(planetary,32,xxorbitdist7) &gt; 5 {textinfo = ds_grid_get(planetary,230,xxorbitdist7)}
colortext = ds_grid_get(planetary,31,xxorbitdist7)
draw_set_colour(colortext);
draw_text(xxorbit7,yyorbit7,textinfo);}
if xxorbitdist8 = -2 {}else{

textinfo = ""
//if ds_grid_get(planetary,32,xxorbitdist8) = global.idfixe {textinfo = "Your faction"}else
if ds_grid_get(planetary,32,xxorbitdist8) = 2 {textinfo = "Dominion"}else
if ds_grid_get(planetary,32,xxorbitdist8) = 3 {textinfo = "Xahor"}else
if ds_grid_get(planetary,32,xxorbitdist8) = 4 {textinfo = "Céhènyth"}else
if ds_grid_get(planetary,32,xxorbitdist8) = global.idfixe {textinfo = global.name}else
if ds_grid_get(planetary,32,xxorbitdist8) &gt; 5 {textinfo = ds_grid_get(planetary,230,xxorbitdist8)}
colortext = ds_grid_get(planetary,31,xxorbitdist8)
draw_set_colour(colortext);
draw_text(xxorbit8,yyorbit8,textinfo);}
if xxorbitdist9 = -2 {}else{

textinfo = ""
//if ds_grid_get(planetary,32,xxorbitdist9) = global.idfixe {textinfo = "Your faction"}else
if ds_grid_get(planetary,32,xxorbitdist9) = 2 {textinfo = "Dominion"}else
if ds_grid_get(planetary,32,xxorbitdist9) = 3 {textinfo = "Xahor"}else
if ds_grid_get(planetary,32,xxorbitdist9) = 4 {textinfo = "Céhènyth"}else
if ds_grid_get(planetary,32,xxorbitdist9) = global.idfixe {textinfo = global.name}else
if ds_grid_get(planetary,32,xxorbitdist9) &gt; 5 {textinfo = ds_grid_get(planetary,230,xxorbitdist9)}
colortext = ds_grid_get(planetary,31,xxorbitdist9)
draw_set_colour(colortext);
draw_text(xxorbit9,yyorbit9,textinfo);}

draw_set_alpha(1);
}

}else{
part_particles_clear(particle1);
}


///PLANET 
if echelle = 0 {
//draw_set_color(planetarycolor-150);
//draw_set_alpha(0.2);

if modesun = 1 {

rotaplanet += ds_grid_get(planetary,13,planetnowid)/110000
dsgrid[1] = (ds_grid_get(planetary,205,planetnowid)/25)
dsgrid[2] = (ds_grid_get(planetary,19,planetnowid)*100)


xwidth = room_width/2
ywidth = room_height/2

draw_set_color(planetarycolor-150);
draw_set_alpha(0.3);

draw_circle(room_width/2,room_height/2,((dsgrid[1]*optiportabletaille)+(dsgrid[2]*optiportabletaille))*2,false);
draw_set_blend_mode(bm_subtract);
draw_circle_colour(room_width/2,room_height/2, ((dsgrid[1]*optiportabletaille)+(dsgrid[2]*optiportabletaille))*2, c_black, c_white, 0);
//if surface_exists(surf2){draw_surface(surf2,0,0);}
draw_set_blend_mode(bm_normal);

draw_set_alpha(1);

if surface_exists(surf){draw_surface(surf, 0, 0);}

if dsgrid[1] &gt; 0 {//SINON BUG , TROU NOIR ?
dsgrid[5] = ds_grid_get(planetary,210,planetnowid)
if dsgrid[5] &gt; 0 {
if instance_exists(obj_gate){}else{
with(instance_create(x,y,obj_gate)){mode = 1}
with(instance_create(x,y,obj_gate)){mode = 2}
with(instance_create(x,y,obj_gate)){mode = 3}
with(instance_create(x,y,obj_gate)){mode = 4}
with(instance_create(x,y,obj_gate)){mode = 5}
}

}

planetarycolor = ds_grid_get(planetary,30,planetnowid)
planetarycolor2 = ds_grid_get(planetary,31,planetnowid)
draw_set_color(planetarycolor);

part_type_shape(particles,pt_shape_flare);
part_type_color3(particles,planetarycolor-100,planetarycolor2-50,planetarycolor);//33023,255,65535);
part_type_alpha2(particles,0.9,1);
part_type_life(particles,14,15);
part_type_blend(particles,1);
part_type_size(particles,0.28,0.31,0,0);//0.3,0.4,0.1,);//
part_type_speed(particles,0,choose(0,0,0,0),0,0);//,12,35,0.01,0);
dsgrid[0] = ds_grid_get(planetary,205,planetnowid)/25
var randomdirsun;
for (randomdirsun = 0; randomdirsun &lt; 360; randomdirsun += random_range(2,5))
   {
randomdirsun2 = random(360)
lengthvar = choose(0,0,0,0,0,0,0,dsgrid[0]/4)
dirsun = point_direction(xwidth,ywidth,xwidth+lengthdir_x(20,randomdirsun2),ywidth+lengthdir_y(20,randomdirsun2))
xsolpart = xwidth+lengthdir_x(random_range(lengthvar,dsgrid[0]/3)*optiportabletaille,dirsun)
ysolpart = ywidth+lengthdir_y(random_range(lengthvar,dsgrid[0]/3)*optiportabletaille,dirsun)
//part_type_direction(particles,randomdirsun2-30,randomdirsun2+30,0,0);
part_particles_create(Snames,xsolpart,ysolpart,particles,1);
}

//PARTICLE GATE
part_type_shape(particleg,pt_shape_sphere);
part_type_color3(particleg,planetarycolor-100,planetarycolor2-50,planetarycolor);//33023,255,65535);
part_type_alpha2(particleg,0.2,1);
part_type_life(particleg,60*optiportabletaille,60*optiportabletaille);
part_type_blend(particleg,1);
part_type_size(particleg,0.18*optiportabletaille,0.20*optiportabletaille,-0.002,0);//0.3,0.4,0.1,);//
part_type_speed(particleg,dsgrid[5]/5,choose(dsgrid[5]/3),0,0);//,12,35,0.01,0);
//dirsun = point_direction(xwidth,ywidth,xwidth+lengthdir_x(20,randomdirsun2),ywidth+lengthdir_y(20,randomdirsun2))
randomgatedir = random_range(-5,5)
xsolpart = xwidth+lengthdir_x(dsgrid[0]/3*optiportabletaille,rotaplanet+randomgatedir)
ysolpart = ywidth+lengthdir_y(dsgrid[0]/3*optiportabletaille,rotaplanet+randomgatedir)
part_type_direction(particleg,rotaplanet,rotaplanet,0,0);
part_particles_create(Snameg,xsolpart,ysolpart,particleg,5);



//CHAINE D'ASTEORIDE ANNEAU

for (i = 0; i &lt; ds_grid_get(planetary,202,planetnowid); i += 1)
   {
   draw_sprite_ext(spr_asteorid,subring[i],room_width/2+lengthdir_x(((dsgrid[1]+distring[i])*optiportabletaille),dirring[i]+rotaplanet),
   room_height/2+lengthdir_y(((dsgrid[1]+distring[i])*optiportabletaille),dirring[i]+rotaplanet)
   ,(scalering[i]*optiportabletaille)/3,(scalering[i]*optiportabletaille)/3,anglering[i]+dirring[i]+rotaplanet,planetarycolor,1)
   anglering[i] += vitessering[i]
   }

//FIN CHAINE D'ASTEORIDE ANNEAU

}
//draw_circle_colour(room_width/2,room_height/2, (dsgrid[1]*optiportabletaille), c_orange, c_red, 0);
//}else{part_type_destroy(particlec);
}else{
draw_set_color(planetarycolor-150);
draw_set_alpha(0.2);
if destroyplanetnow = 0 {
draw_circle(room_width/2,room_height/2,(dsgrid[1]*optiportabletaille)+(dsgrid[2]*optiportabletaille),false);
draw_set_blend_mode(bm_subtract);
draw_circle_colour(room_width/2,room_height/2, (dsgrid[1]*optiportabletaille)+(dsgrid[2]*optiportabletaille), c_black, c_white, 0);
//if surface_exists(surf2){draw_surface(surf2,0,0);}
draw_set_blend_mode(bm_normal);}else{
draw_circle(room_width/2,room_height/2,((dsgrid[1]*optiportabletaille)+(dsgrid[2]*optiportabletaille))*3,false);
draw_set_blend_mode(bm_subtract);
draw_circle_colour(room_width/2,room_height/2, ((dsgrid[1]*optiportabletaille)+(dsgrid[2]*optiportabletaille))*3, c_black, c_white, 0);
//if surface_exists(surf2){draw_surface(surf2,0,0);}
draw_set_blend_mode(bm_normal);
}



draw_set_alpha(1);
rotaplanet += ds_grid_get(planetary,13,planetnowid)/110000
dsgrid[1] = (ds_grid_get(planetary,7,planetnowid)/25)
dsgrid[2] = (ds_grid_get(planetary,19,planetnowid)*100)
//ATHMOSPHERE
//draw_circle(room_width/2,room_height/2,(dsgrid[1]*optiportabletaille)+(dsgrid[2]*optiportabletaille),false);
//draw_set_blend_mode( bm_subtract );
//draw_circle_colour(room_width/2,room_height/2, (dsgrid[1]*optiportabletaille)+(dsgrid[2]*optiportabletaille), c_black, c_white, 0);
//draw_set_blend_mode( bm_normal );
//draw_circle(room_width/2,room_height/2,(dsgrid[1]*optiportabletaille)+((ds_grid_get(planetary,19,planetnowid)*2)*optiportabletaille),false);
draw_set_alpha(1);

//LUNE CALCUL 
luneangle1 += ds_grid_get(planetary,13,planetnowid)/110000
xxlune1 = room_width/2+lengthdir_x((((ds_grid_get(planetary,7,planetnowid)/25)+ds_grid_get(planetary,84,planetnowid))*optiportabletaille),luneangle1)
yylune1 = room_height/2+lengthdir_y((((ds_grid_get(planetary,7,planetnowid)/25)+ds_grid_get(planetary,84,planetnowid))*optiportabletaille),luneangle1)
draw_set_halign(fa_center);


if shipencible = 1 {
if idplanet[1] = planetnowid or idplanet[2] = planetnowid or 
idplanet[3] = planetnowid or idplanet[4] = planetnowid {}else{
    if destroyplanetnow = 0 {
if point_distance(room_width/2,room_height/2,xxmouse,yymouse) &lt; (dsgrid[1]*optiportabletaille) {
draw_set_color(c_red);
draw_set_halign(fa_center);
if ds_grid_get(planetary,32,planetnowid) = 0 {
draw_text(room_width/2,room_height-(room_height/15),"Colonize with Ship Type-V")}
if ds_grid_get(planetary,32,planetnowid) = global.idfixe or ds_grid_get(planetary,242,planetnowid) = global.idguild {
draw_text(room_width/2,room_height-(room_height/15),"Send spaceships")}
if ds_grid_get(planetary,32,planetnowid) &lt; 5 &amp;&amp; ds_grid_get(planetary,32,planetnowid) &gt; 0 {
draw_text(room_width/2,room_height-(room_height/15),"Attack !")}
draw_set_alpha(0.2);
draw_circle(room_width/2,room_height/2,(dsgrid[1]*optiportabletaille)+150,false);

}}}
if point_distance(xxlune1,yylune1,xxmouse,yymouse) &lt; ((ds_grid_get(planetary,83,planetnowid)/25)*optiportabletaille) {
if ds_grid_get(planetary,32,planetnowid) = global.idfixe {
draw_text(room_width/2,room_height-(room_height/15),"Colonize with Ship Type-V")}
}

}
draw_set_halign(fa_left);
draw_set_alpha(1);

if surface_exists(surf){draw_surface(surf, 0, 0);}


planetarycolor = ds_grid_get(planetary,30,planetnowid)
planetarycolor2 = ds_grid_get(planetary,31,planetnowid)

//EVENT
if ds_grid_get(planetary,32,planetnowid) = global.idfixe {
if ds_grid_get(planetary,221,planetnowid) &lt; 80 {
xxevent = room_width/2+lengthdir_x((ds_grid_get(planetary,217,planetnowid)*optiportabletaille)+(dsgrid[1]*optiportabletaille),ds_grid_get(planetary,218,planetnowid))
yyevent = room_height/2+lengthdir_y((ds_grid_get(planetary,217,planetnowid)*optiportabletaille)+(dsgrid[1]*optiportabletaille),ds_grid_get(planetary,218,planetnowid))

if instance_exists(obj_ship){with(obj_ship){
if planetparent = other.planetnowid {
if point_distance(xx,yy,other.xxevent,other.yyevent) &lt; 300*other.optiportabletaille {
if ds_grid_get(other.planetary,222,other.planetnowid) = 0 {
if ds_grid_get(other.planetary,32,planetparent) = enemy {
ds_grid_set(other.planetary,222,other.planetnowid,1) 
}}}}
}}

/*if instance_exists(obj_shipcommand){with(obj_shipcommand){
if planetparent = other.planetnowid {
if point_distance(xx,yy,other.xxevent,other.yyevent) &lt; 300*other.optiportabletaille {
if ds_grid_get(other.planetary,222,other.planetnowid) = 0 {
if ds_grid_get(other.planetary,32,planetparent) = enemy {
ds_grid_set(other.planetary,222,other.planetnowid,1) 
}}}}
}}*/

//EVENT TYPE 1 ENEMY
if ds_grid_get(planetary,219,planetnowid) = 1 {
if ds_grid_get(planetary,222,planetnowid) = 1 {
ds_grid_set(planetary,222,planetnowid,2) 
repeat(ds_grid_get(planetary,220,planetnowid)){
with(instance_create(x,y,obj_ship)){
eventenemy = 1
randomize();
mode = choose(1,2,3,4,5)//other.modeship
colorship = ds_grid_get(other.planetary,34,other.planetnowid)
enemy = ds_grid_get(obj_planetary.planetary,34,other.planetnowid);
planetparent = other.planetnowid
attakguy = 1
rotaaleatdecol = random(360)
xx = other.xxevent+random_range(-220*other.optiportabletaille,220*other.optiportabletaille)
yy = other.yyevent+random_range(-220*other.optiportabletaille,220*other.optiportabletaille)
vargetdsgrid[1] = ds_grid_get(obj_planetary.planetary,51,other.planetnowid)
vargetdsgrid[2] = ds_grid_get(obj_planetary.planetary,34,other.planetnowid)
vargetdsgrid[3] = (ds_grid_get(obj_planetary.planetary,7,other.planetnowid)/25)*other.optiportabletaille
vargetdsgrid[4] = ds_grid_get(obj_planetary.planetary,32,other.planetnowid)
}

}
if ds_grid_get(planetary,221,planetnowid) &gt; 10 {ds_grid_set(planetary,221,planetnowid,10)}
}
}

//EVENT TYPE 2 RESSOURCE
if ds_grid_get(planetary,219,planetnowid) = 2 {
if ds_grid_get(planetary,222,planetnowid) = 1 {
ds_grid_set(planetary,222,planetnowid,2) 

repeat(ds_grid_get(planetary,220,planetnowid)){
with(instance_create(
xxevent+random_range((-220*1)*obj_planetary.optiportabletaille,(220*1)*obj_planetary.optiportabletaille),
yyevent+random_range((-220*1)*obj_planetary.optiportabletaille,(220*1)*obj_planetary.optiportabletaille),obj_debris)){
size = random_range(0.3,0.5)*(1+(0.2))
angle = random(360)
dist = (point_distance(room_width/2,room_height/2,other.xxevent,other.yyevent)+random_range(-70,70))/obj_planetary.optiportabletaille
rotaplanet = (point_direction(room_width/2,room_height/2,other.xxevent,other.yyevent)+random_range(-5,5))-obj_planetary.rotaplanet
vitangle = random_range(0.5,1.5)
c = choose(1,2)
sub = choose(0,1,2,3,4,5)
planetparent = other.planetnowid
}
}
if ds_grid_get(planetary,221,planetnowid) &gt; 10 {ds_grid_set(planetary,221,planetnowid,10)}

}
}



//EVENT TYPE 3 colons
if ds_grid_get(planetary,219,planetnowid) = 3 {
if ds_grid_get(planetary,222,planetnowid) = 1 {
ds_grid_set(planetary,222,planetnowid,2) 
mode = choose(1,2,3,4,5)//other.modeship
if planetnowid != 0 {
    with(obj_highscore){
        var hiscore_map, i, str;
        hiscore_map = ds_map_create();
        ds_map_set(hiscore_map,'id', other.planetnowid);
        ds_map_set(hiscore_map,'cat', other.mode);
        ds_map_set(hiscore_map,'nbr', ds_grid_get(obj_planetary.planetary,220,other.planetnowid));
        ds_map_set(hiscore_map,'cu', global.idfixe);
        str = json_encode(hiscore_map);
        ds_map_destroy(hiscore_map); 
        post = http_post_string(addr+"universe/addshipmultipleship" , str);
    }
}
    
repeat(ds_grid_get(planetary,220,planetnowid)){
with(instance_create(x,y,obj_ship)){
if other.planetnowid = 0 {
ds_grid_add(other.planetary,42+other.mode,other.planetnowid,1)
}
ds_grid_add(other.planetary,53+other.mode,other.planetnowid,1)
ds_grid_add(other.planetary,53,other.planetnowid,1)


colorship = ds_grid_get(other.planetary,32,other.planetnowid)
enemy = ds_grid_get(obj_planetary.planetary,32,other.planetnowid);
planetparent = other.planetnowid
rotaaleatdecol = random(360)
xx = other.xxevent+random_range(-220*other.optiportabletaille,220*other.optiportabletaille)
yy = other.yyevent+random_range(-220*other.optiportabletaille,220*other.optiportabletaille)
vargetdsgrid[1] = ds_grid_get(obj_planetary.planetary,51,other.planetnowid)
vargetdsgrid[2] = ds_grid_get(obj_planetary.planetary,34,other.planetnowid)
vargetdsgrid[3] = (ds_grid_get(obj_planetary.planetary,7,other.planetnowid)/25)*other.optiportabletaille
vargetdsgrid[4] = ds_grid_get(obj_planetary.planetary,32,other.planetnowid)
}

}
if ds_grid_get(planetary,221,planetnowid) &gt; 10 {ds_grid_set(planetary,221,planetnowid,10)}

}
}


if ds_grid_get(other.planetary,222,other.planetnowid) = 0 {//show_message(xxevent)
subevent += 0.05
draw_sprite_ext(spr_event,subevent,xxevent,yyevent,1.5*optiportabletaille,1.5*optiportabletaille,0,planetarycolor,1)
}else{
}
}
}

draw_set_color(planetarycolor);

///LUNE //DRAW
if destroyplanetnow = 0 {
draw_circle(xxlune1,yylune1,((ds_grid_get(planetary,83,planetnowid)/25)*optiportabletaille),false);
draw_circle_colour(xxlune1,yylune1, ((ds_grid_get(planetary,83,planetnowid)/27)*optiportabletaille), planetarycolor, planetarycolor2, 0);

 
var i;
for (i = 0; i &lt; 360; i += 30)
   {xscale = 0.3 
   subimgvar = ds_grid_get(planetary,99+(i/5),planetnowid)
   draw_sprite_ext(spr_build,subimgvar,xxlune1+lengthdir_x((((ds_grid_get(planetary,83,planetnowid)/25)-2)*optiportabletaille),i+rotaplanet)
   ,yylune1+lengthdir_y((((ds_grid_get(planetary,83,planetnowid)/25)-2)*optiportabletaille),i+rotaplanet)
   ,xscale*optiportabletaille,xscale*optiportabletaille,i+rotaplanet,planetarycolor2,1)
   
   xscale = 0.2 
   subimgvar = ds_grid_get(planetary,99+((i+15)/5),planetnowid)
   draw_sprite_ext(spr_build,subimgvar,xxlune1+lengthdir_x((((ds_grid_get(planetary,83,planetnowid)/25)-2)*optiportabletaille),(i+15)+rotaplanet)
   ,yylune1+lengthdir_y((((ds_grid_get(planetary,83,planetnowid)/25)-2)*optiportabletaille),(i+15)+rotaplanet)
   ,xscale*optiportabletaille,xscale*optiportabletaille,(i+15)+rotaplanet,planetarycolor,1)
   }
   
   if instance_exists(obj_turretmoon){}else{
   with(instance_create(x,y,obj_turretmoon)){mode = 1}
   with(instance_create(x,y,obj_turretmoon)){mode = 2}
   with(instance_create(x,y,obj_turretmoon)){mode = 3}
   with(instance_create(x,y,obj_turretmoon)){mode = 4}
   }

 }
   /*for (i = 0; i &lt; 360; i += 30)
   {
   subimgvar = ds_grid_get(planetary,99+(i/5),planetnowid)
   draw_sprite_ext(spr_build,subimgvar,xxlune1+lengthdir_x((((ds_grid_get(planetary,83,planetnowid)/25)-2)*optiportabletaille),i+rotaplanet)
   ,yylune1+lengthdir_y((((ds_grid_get(planetary,83,planetnowid)/25)-2)*optiportabletaille),i+rotaplanet)
   ,xscale*optiportabletaille,xscale*optiportabletaille,i+rotaplanet,planetarycolor2,1)
   }
xscale = 0.2  
   var i;
for (i = 15; i &lt; 360; i += 30)
   {
   subimgvar = ds_grid_get(planetary,99+(i/5),planetnowid)   
   draw_sprite_ext(spr_build,subimgvar,xxlune1+lengthdir_x((((ds_grid_get(planetary,83,planetnowid)/25)-2)*optiportabletaille),i+rotaplanet),
   yylune1+lengthdir_y((((ds_grid_get(planetary,83,planetnowid)/25)-2)*optiportabletaille),i+rotaplanet)
   ,xscale*optiportabletaille,xscale*optiportabletaille,i+rotaplanet,planetarycolor,1)
   }*/

//FIN LUNE

   

//CHAINE D'ASTEORIDE ANNEAU

for (i = 0; i &lt; ds_grid_get(planetary,202,planetnowid); i += 1)
   {
   draw_sprite_ext(spr_asteorid,subring[i],room_width/2+lengthdir_x(((dsgrid[1]+distring[i])*optiportabletaille),dirring[i]+rotaplanet),
   room_height/2+lengthdir_y(((dsgrid[1]+distring[i])*optiportabletaille),dirring[i]+rotaplanet)
   ,scalering[i]*optiportabletaille,scalering[i]*optiportabletaille,anglering[i]+dirring[i]+rotaplanet,planetarycolor,1)
   anglering[i] += vitessering[i]
   }

//FIN CHAINE D'ASTEORIDE ANNEAU


//draw_circle_colour(room_width/2,room_height/2,(dsgrid[1]*optiportabletaille), planetarycolor2, planetarycolor, 0);
if ds_grid_get(planetary,204,planetnowid) &lt;= 0 { destroyplanetnow = 1}else{destroyplanetnow = 0}

if destroyplanetnow = 0 {
draw_circle(room_width/2,room_height/2,(dsgrid[1]*optiportabletaille),false)
draw_set_alpha(1);
if colorrect29 = c_white {
draw_circle_colour(room_width/2,room_height/2, ((ds_grid_get(planetary,7,planetnowid)/26)*optiportabletaille), c_white, planetarycolor2, 0);
}else{
draw_circle_colour(room_width/2,room_height/2, ((ds_grid_get(planetary,7,planetnowid)/26)*optiportabletaille), planetarycolor, planetarycolor2, 0);
}
var i;
for (i = 0; i &lt; 360; i += 10)
   {xscale = 0.7
   subimgvar = ds_grid_get(planetary,99+(i/5),planetnowid)
   draw_sprite_ext(spr_build,subimgvar,room_width/2+lengthdir_x(((dsgrid[1]-5)*optiportabletaille),i+rotaplanet),room_height/2+lengthdir_y(((dsgrid[1]-5)*optiportabletaille),i+rotaplanet),xscale*optiportabletaille,xscale*optiportabletaille,i+rotaplanet,planetarycolor2,1)
   xscale = 0.5  
   subimgvar = ds_grid_get(planetary,99+((i+5)/5),planetnowid)   
   draw_sprite_ext(spr_build,subimgvar,room_width/2+lengthdir_x(((dsgrid[1]-5)*optiportabletaille),(i+5)+rotaplanet),room_height/2+lengthdir_y(((dsgrid[1]-5)*optiportabletaille),(i+5)+rotaplanet),xscale*optiportabletaille,xscale*optiportabletaille,(i+5)+rotaplanet,planetarycolor,1)
   }
   
   }else{
   //PLANET DETRUIS
   for (i = 0; i &lt; ds_grid_get(planetary,7,planetnowid)/50; i += 1)
   {
   draw_sprite_ext(spr_asteorid,subring[i],room_width/2+lengthdir_x(((0+distring[i])*optiportabletaille),dirring[i]+rotaplanet),
   room_height/2+lengthdir_y(((0+distring[i])*optiportabletaille),dirring[i]+rotaplanet)
   ,(scalering[i])*optiportabletaille,(scalering[i])*optiportabletaille,anglering[i]+dirring[i]+rotaplanet,colorring[i],1)
   anglering[i] += vitessering[i]
   }
   }
 
  
   /*xscale = 0.7
var i;
for (i = 0; i &lt; 360; i += 10)
   {
   subimgvar = ds_grid_get(planetary,99+(i/5),planetnowid)
   draw_sprite_ext(spr_build,subimgvar,room_width/2+lengthdir_x(((dsgrid[1]-5)*optiportabletaille),i+rotaplanet),room_height/2+lengthdir_y(((dsgrid[1]-5)*optiportabletaille),i+rotaplanet),xscale*optiportabletaille,xscale*optiportabletaille,i+rotaplanet,planetarycolor2,1)
   }
xscale = 0.5   
   var i;
for (i = 5; i &lt; 360; i += 10)
   {
   subimgvar = ds_grid_get(planetary,99+(i/5),planetnowid)   
   draw_sprite_ext(spr_build,subimgvar,room_width/2+lengthdir_x(((dsgrid[1]-5)*optiportabletaille),i+rotaplanet),room_height/2+lengthdir_y(((dsgrid[1]-5)*optiportabletaille),i+rotaplanet),xscale*optiportabletaille,xscale*optiportabletaille,i+rotaplanet,planetarycolor,1)
   }*/
   }
   draw_sprite_ext(spr_buttonsolarsyst,0,room_width/2,50,0.2,0.2,0,c_white,1)
if device_mouse_check_button_released(0, mb_left) &amp;&amp; menuplanet = 0  &amp;&amp; menuhelp = 0 {
if point_distance(room_width/2,50,xxmouse,yymouse) &lt; 50 {
modesun = 0
planetnowid = systemstellairenow
if surface_exists(surf){surface_free(surf);}
scr_echelle1();

  
echelle = 1}}

}else{
if part_type_exists(particles)
    {part_type_clear(particles);}
if part_type_exists(particleg)
    {part_type_clear(particleg);}}
}



   }else{
   if echelle = 2 {
   scr_surface();
   }else{
   scr_surface();
   }
   
  }
  
  
  /*if modesun = 1 &amp;&amp; !instance_exists(obj_deathstar)
  {
      with(instance_create(room_width/2,room_height/2,obj_deathstar)){
        test = 1;
      }
  }*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if maitredeslieu = 1 {
ds_grid_set(planetary,221,0,random_range(55,69))
ds_grid_set(planetary,217,0,random_range(600,2100))//5000,15000)//dist
ds_grid_set(planetary,218,0,random(360))
ds_grid_set(planetary,219,0,choose(1,2,3))
ds_grid_set(planetary,220,0,random_range(5,75))
ds_grid_set(planetary,222,0,0)
//alarm[1] = 2;
//show_message(instance_number(obj_shipcommerce));
//show_message(ds_grid_get(planetary,205,planetnowid))
//scr_addinfo(ds_grid_get(planetary,8,0),5,0)


//ds_grid_add(planetary,210,1,1)
/*
ini_open("working_directory+save.ini");
//ds_grid_write(planetary, ini_read_string("planetary", "grid", 0));
ds_grid_clear(planetary,0);
ini_write_string("planetary", "grid", ds_grid_write(planetary));
//ds_grid_read(questgrid, ini_read_string("quest", "grid", ""));
ini_close();
game_end();
*/}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//planetnowid = choose(0,1,2,3)
if maitredeslieu = 1 {
ds_grid_add(planetary,90,0,1000000000)
ds_grid_add(planetary,91,0,1000000000)
ds_grid_add(planetary,92,0,1000000000)
ds_grid_add(planetary,93,0,1000000000)
ds_grid_add(planetary,94,0,1000000000)
ds_grid_add(planetary,95,0,1000000000)
ds_grid_add(planetary,96,0,1000000000)
ds_grid_add(planetary,97,0,1000000000)
ds_grid_add(planetary,98,0,1000000000)

ds_grid_add(planetary,258,0,100)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if maitredeslieu = 1 {ds_grid_set(planetary,51,planetnowid,1)}
if maitredeslieu = 1 {ds_grid_set(planetary,52,planetnowid,1)}
/*with(instance_create(x,y,obj_ship)){
mode = choose(1,2,3,4,5)
colorship = ds_grid_get(other.planetary,34,other.planetnowid)
enemy = ds_grid_get(obj_planetary.planetary,34,other.planetnowid)
planetparent = other.planetnowid
//attaquant = 0
}//}
//repeat(choose(1,2,3)){
if ds_grid_get(planetary,36,planetnowid) &gt; 1 {//vaisseau allie
with(instance_create(x,y,obj_ship)){
mode = choose(1,2,3,4,5)
colorship = ds_grid_get(other.planetary,32,other.planetnowid)
enemy = ds_grid_get(obj_planetary.planetary,32,other.planetnowid);
planetparent = other.planetnowid
rotaaleatdecol = random(360)
xx = room_width/2+lengthdir_x((ds_grid_get(obj_planetary.planetary,7,0)/25),rotaaleatdecol)
yy = room_height/2+lengthdir_y((ds_grid_get(obj_planetary.planetary,7,0)/25),rotaaleatdecol)}
}*/

/*with(instance_create(x,y,obj_ship)){enemy = 2
planetparent = 0
}
with(instance_create(x,y,obj_ship)){enemy = 1;
planetparent = 0
rotaaleatdecol = random(360)
xx = room_width/2+lengthdir_x((ds_grid_get(obj_planetary.planetary,7,0)/25),rotaaleatdecol)
yy = room_height/2+lengthdir_y((ds_grid_get(obj_planetary.planetary,7,0)/25),rotaaleatdecol)}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//show_message(ds_grid_get(planetary,81,buildaffect))
//show_message(date_current_datetime()*10000)
///ASTEORID



if maitredeslieu = 1 {
coter = choose(1,2,3,4)
xxa = 0
yya = 0
if coter = 1 {xxa = random_range(-500,room_width+500);yya = -500}
if coter = 2 {xxa = random_range(-500,room_width+500);yya = room_height+500}
if coter = 3 {xxa = -500;yya = random_range(-500,room_height+500)}
if coter = 4 {xxa = room_width+500;yya = random_range(-500,room_height+500)}
with(instance_create(xxa,yya,obj_asteorid)){planetparent = other.planetnowid
image_angle = point_direction(x,y,room_width/2,room_height/2)+random_range(90,-90)
}

alarm[6] = random_range(10,ds_grid_get(planetary,71,planetnowid))
/*
systemstellairenow = choose(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19)

xxorbitdist1 = -2
xxorbitdist2 = -2
xxorbitdist3 = -2
xxorbitdist4 = -2
xxorbitdist5 = -2
xxorbitdist6 = -2
xxorbitdist7 = -2
xxorbitdist8 = -2
xxorbitdist9 = -2

var i;
for (i = 0; i &lt; ds_grid_height(planetary)-1; i += 1)
   {
   if xxorbitdist1 = -2 {if ds_grid_get(planetary,28,i) = systemstellairenow {xxorbitdist1 = i}
   }else if xxorbitdist2 = -2 {if ds_grid_get(planetary,28,i) = systemstellairenow {xxorbitdist2 = i}
   }else if xxorbitdist3 = -2 {if ds_grid_get(planetary,28,i) = systemstellairenow {xxorbitdist3 = i}
   }else if xxorbitdist4 = -2 {if ds_grid_get(planetary,28,i) = systemstellairenow {xxorbitdist4 = i}
   }else if xxorbitdist5 = -2 {if ds_grid_get(planetary,28,i) = systemstellairenow {xxorbitdist5 = i}
   }else if xxorbitdist6 = -2 {if ds_grid_get(planetary,28,i) = systemstellairenow {xxorbitdist6 = i}
   }else if xxorbitdist7 = -2 {if ds_grid_get(planetary,28,i) = systemstellairenow {xxorbitdist7 = i}
   }else if xxorbitdist8 = -2 {if ds_grid_get(planetary,28,i) = systemstellairenow {xxorbitdist8 = i}
   }else if xxorbitdist9 = -2 {if ds_grid_get(planetary,28,i) = systemstellairenow {xxorbitdist9 = i;
   i = ds_grid_height(planetary)+2}
   }

   }*/
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if menuplanet = 3 {}else{
if menuplanet = 2 {menuplanet = 0}else{
echelle = 0 
menuplanet = 2
planetnowid = 0
systemstellairenow = 1
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboardcheck = 0 {
global.name = keyboard_string;
keyboardcheck = 1;
keyboard_string = "";
}
if keyboardcheck2 = 0 {
keyboardcheck2 = 1;
with(obj_highscore){
    var hiscore_map, i, str;
    hiscore_map = ds_map_create();
    //ds_map_set(hiscore_map,'id', global.travel);
    ds_map_set(hiscore_map,'cu', global.idfixe);
    ds_map_set(hiscore_map,'cun', global.name);
    ds_map_set(hiscore_map,'cur', obj_planetary.scoreressvalid);
    ds_map_set(hiscore_map,'cus', obj_planetary.scoreshipsvalid);
    ds_map_set(hiscore_map,'cut', obj_planetary.scoresciencevalid);
    ds_map_set(hiscore_map,'cud', obj_planetary.scoredefvalid);
    ds_map_set(hiscore_map,'n', keyboard_string);
    str = json_encode(hiscore_map);
    ds_map_destroy(hiscore_map); 
    postGuild = http_post_string(addr+"universe/addguild" , str);
}
scr_addinfo2(19,"",planetnowid)
keyboard_string = "";
}

if menuplanet = 3 {
if menuplanet3 &gt; 0 {
//show_message(menuplanet3)
if keyboard_string = "" or keyboard_string = " " {}else{
/*if keyboardcheck = 1 &amp;&amp; keyboardcheck2 = 1 {
if menuplanet3 = 2 {send_message(keyboard_string,global.lastprivatemessage,floor(date_current_datetime()*100000),global.idfixe,"",global.name,menuplanet3)}
else if menuplanet3 = 3 {send_message(keyboard_string,global.idguild,floor(date_current_datetime()*100000),global.idfixe,"",global.name,menuplanet3)}
else {send_message(keyboard_string,global.idfixe,floor(date_current_datetime()*100000),global.idfixe,"",global.name,menuplanet3)}
}*/}
//keyboard_string = "";
if menuplanet3 = 3 {get_chat(global.idguild,menuplanet3);}
if menuplanet3 &gt; 0 {
roll = 450

with(obj_highscore){
    var hiscore_map, i, str;
    hiscore_map = ds_map_create();
    ds_map_set(hiscore_map,'id', other.buildaffect);
    ds_map_set(hiscore_map,'by', global.idfixe);
    ds_map_set(hiscore_map,'byn', global.name);
    if obj_planetary.menuplanet3 = 2 {
        ds_map_set(hiscore_map,'to', global.lastprivatemessage);
    }
    
    if obj_planetary.menuplanet3 = 3 {
        ds_map_set(hiscore_map,'g', global.idguild);
    }else{
        ds_map_set(hiscore_map,'g', "");
    }
    ds_map_set(hiscore_map,'m', keyboard_string);
    ds_map_set(hiscore_map,'t', 1);
    str = json_encode(hiscore_map);
    ds_map_destroy(hiscore_map); 
    post2 = http_post_string(addr+"universe/addMessage" , str);
}
 

   get_chat(0,menuplanet3);}else{
get_chat(global.idfixe,menuplanet3);}
//showInputText("Title Text", "OK", "Cancel")
}
with(obj_planetary){if scoreshipsvalid &gt; 0 {if global.name = "" or global.name = " " {}else{
//update_score(global.name,scoretotal,global.idfixe,scoreressvalid,scoreshipsvalid,scoresciencevalid,scoredefvalid,global.idguildname,global.idguild,global.grade);
}}}
//if instance_exists(obj_highscore){with(obj_highscore){instance_destroy();}}
}else
if statschoosemenu = 5 {
if keyboard_string = "" or keyboard_string = " " {}else{
if keyboardcheck = 1 &amp;&amp; keyboardcheck2 = 1 {

global.clickss = 0
if global.to &gt; 500 {global.to = 500}else if global.to &lt; 0 {global.to = 0}
if global.to != 0 &amp;&amp; global.to != planetnowid {
    with(obj_highscore){
        var hiscore_map, i, str;
        hiscore_map = ds_map_create();
        ds_map_set(hiscore_map,'id', global.to);
        ds_map_set(hiscore_map,'sr', ds_grid_get(obj_planetary.planetary,39,global.to));
        ds_map_set(hiscore_map,'ss', ds_grid_get(obj_planetary.planetary,40,global.to));
        ds_map_set(hiscore_map,'st', ds_grid_get(obj_planetary.planetary,41,global.to));
        ds_map_set(hiscore_map,'sd', ds_grid_get(obj_planetary.planetary,42,global.to));
        ds_map_set(hiscore_map,'cu', global.idfixe);
        str = json_encode(hiscore_map);
        ds_map_destroy(hiscore_map); 
        post = http_post_string(addr+"universe/loadbyid" , str);
    }
}
if real(global.ssc1) &gt; ds_grid_get(planetary,43,planetnowid)-10{global.ssc1 = ds_grid_get(planetary,43,planetnowid)-10
}else if real(global.ssc1) &lt; 0 {global.ssc1 = 0}
if real(global.ssc2) &gt; ds_grid_get(planetary,44,planetnowid){global.ssc2 = ds_grid_get(planetary,44,planetnowid)
}else if real(global.ssc2) &lt; 0 {global.ssc2 = 0}
if real(global.ssc3) &gt; ds_grid_get(planetary,45,planetnowid){global.ssc3 = ds_grid_get(planetary,45,planetnowid)
}else if real(global.ssc3) &lt; 0 {global.ssc3 = 0}
if real(global.ssc4) &gt; ds_grid_get(planetary,46,planetnowid){global.ssc4 = ds_grid_get(planetary,46,planetnowid)
}else if real(global.ssc4) &lt; 0 {global.ssc4 = 0}
if real(global.ssc5) &gt; ds_grid_get(planetary,47,planetnowid){global.ssc5 = ds_grid_get(planetary,47,planetnowid)
}else if real(global.ssc5) &lt; 0 {global.ssc5 = 0}
if real(global.ssc6) &gt; ds_grid_get(planetary,48,planetnowid){global.ssc6 = ds_grid_get(planetary,48,planetnowid)
}else if real(global.ssc6) &lt; 0 {global.ssc6 = 0}
if real(global.ssc7) &gt; ds_grid_get(planetary,49,planetnowid){global.ssc7 = ds_grid_get(planetary,49,planetnowid)
}else if real(global.ssc7) &lt; 0 {global.ssc7 = 0}
if real(global.r) &gt; maxRessourceSended{global.r = maxRessourceSended
}else if real(global.r) &lt; 0 {global.r = 0}
}
}
keyboard_string = "";
}
/*if menuplanet = 3 {
if menuplanet3 &gt; 0 {
send_message(keyboard_string,global.idfixe,floor(date_current_datetime()*100000),global.idfixe,"",global.name,menuplanet3)
keyboard_string = "";
get_chat(global.idfixe,menuplanet3);}}*/




keyboard_string = "";


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if menuplanet = 3 {}else{
if menuplanet = 2 {menuplanet = 0}else{
echelle = 0 
menuplanet = 2
planetnowid = 0
systemstellairenow = 1
}
}

*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
