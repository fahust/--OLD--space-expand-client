<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite23</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Decolage
plusdecol = 0
toutcequeturate = 1
rotaaleatdecol = random(360)
vardist = 0
planetparent = 0
enemy = 0
randomize();
//coter = choose(1,2,3,4)
alarm[5] = 1
alarm[6] = 30
i2 = 0
firstqt = 0
mode = 1
view = 0
colorship = 0
stationaire = 0
modeplus = 0
suislepatron = 0
partir = 0
destinationship = 0
type = 0
xxcursor = 0
yycursor = 0
rotanow = 0
scale = 1
modenow = 0
soute = 0
vargetdsgrid[1] = 0
vargetdsgrid[2] = 0
vargetdsgrid[3] = 0
vargetdsgrid[4] = 0
vargetdsgrid[5] = 0
vargetdsgrid[6] = 0
vargetdsgrid[7] = 0
vargetdsgrid[8] = 0
colorshiprgb = c_white
//alarm[8] = random_range(1,10)
okdraw = 0
alarmshootvar = 3
alarm[4] = 1
trace = 1
tracelerp = 1
hp = 30
vitesseship = random_range(0.5,1)
accellerationship = 0.009
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red
distdetir = 250
distenemy = 30000
fuyard = 0

dir = 0
xx = 0
yy = 0
/*if coter = 1 {xx = random_range(0,room_width);yy = 0}
if coter = 2 {xx = random_range(0,room_width);yy = room_height}
if coter = 3 {xx = 0;yy = random_range(0,room_height)}
if coter = 4 {xx = room_width;yy = random_range(0,room_height)}*/
xx2 = 0
yy2 = 0
image_xscale = 0
image_yscale = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//remet les ship au sol
//if partir = 0 {
ds_grid_add(obj_planetary.planetary,53,planetparent,-1)
ds_grid_add(obj_planetary.planetary,53+type,planetparent,-1)

if soute &gt; 0 {
ds_grid_add(obj_planetary.planetary,35,planetparent,floor((soute*100)*8))
ds_grid_add(obj_planetary.planetary,90,planetparent,floor((soute*100)))
ds_grid_add(obj_planetary.planetary,91,planetparent,floor((soute*100)))
ds_grid_add(obj_planetary.planetary,92,planetparent,floor((soute*100)))
ds_grid_add(obj_planetary.planetary,93,planetparent,floor((soute*100)))
ds_grid_add(obj_planetary.planetary,94,planetparent,floor((soute*100)))
ds_grid_add(obj_planetary.planetary,95,planetparent,floor((soute*100)))
ds_grid_add(obj_planetary.planetary,96,planetparent,floor((soute*100)))
ds_grid_add(obj_planetary.planetary,97,planetparent,floor((soute*100)))
ds_grid_add(obj_planetary.planetary,98,planetparent,floor((soute*100)))
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ALARM OPTI
alarmopti = 5

vargetdsgrid[3] = ((ds_grid_get(obj_planetary.planetary,7,planetparent)/25)*obj_planetary.optiportabletaille)
if alarm[1] &gt; 0 {plusdecol += floor(((vitesseship*toutcequeturate)*vargetdsgrid[7])*trace)}else{plusdecol -= floor((vitesseship*toutcequeturate)*trace)}
toutcequeturate = 1
xxdecol = room_width/2+lengthdir_x((vargetdsgrid[3]+plusdecol)*obj_planetary.optiportabletaille,rotaaleatdecol)
yydecol = room_height/2+lengthdir_y((vargetdsgrid[3]+plusdecol)*obj_planetary.optiportabletaille,rotaaleatdecol)
if vargetdsgrid[1] &lt;= 5 &amp;&amp; enemy = 0 {alarm[0] = 1}
if plusdecol &lt; 50 &amp;&amp;  alarm[1] &lt; 0 {if alarm[0] &gt; 1 {alarm[0] = 1}}
toutcequeturate = 1
if alarm[1] &lt;= 0 {rotanow = 180}else{rotanow = 0}
scale = image_xscale*obj_planetary.optiportabletaille
modenow = mode-1
view = 0
if global.surfok = 1 {
if obj_planetary.buildaffect = planetparent or planetparent = obj_planetary.planetnowid or planetparent = 0 {
view = 1
}else{if alarm[1] &gt; 0 {toutcequeturate += alarmopti}else{toutcequeturate += alarmopti}}}

//SUPRIMER COMERCE OU PARTIR SI  GUERRE EN MEME TEMPS
if fuyard = 0 {
if ds_grid_get(obj_planetary.planetary,51,planetparent) &lt;= 10 {instance_destroy();}}

//scr_surface 
alarm[6] = alarmopti
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///demarage retard pour eviter bug


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEMARAGE MODE

//alarm[4] = random_range(1,obj_planetary.nbrdobjship)
modeplus = ((vargetdsgrid[4])-1)*5//(ds_grid_get(obj_planetary.planetary,32,planetparent)-1)*5
depth = -5



mode = choose(1,1,1,1,1,1,1,1,1,1,1,1,
2,2,2,2,2,2,2,2,
3,3,3,3,3,
4,4,
5)

if modeplus &gt; 30 {

}else{
mode += modeplus}

distdetir = 250
if mode = 1 {
particlelife = 0.2
type = 1
hp = 30
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red
distdetir = 250}

if mode = 2 {particlelife = 0.3
type = 2
hp = 50
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.012*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red}
if mode = 3 {particlelife = 0.7
type = 3
hp = 70
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 2}
if mode = 4 {particlelife = 1
type = 4
hp = 210
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.005*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 3
colorshoot = c_red}
if mode = 5 {particlelife = 1.3
type = 5
hp = 550
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.001*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 10
colorshoot = c_red}

//dominion
if mode = 6 {particlelife = 0.2
type = 1
hp = 30
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red
distdetir = 250}
if mode = 7 {particlelife = 0.3
type = 2
hp = 50
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.012*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red}
if mode = 8 {particlelife = 0.7
type = 3
hp = 70
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 2}
if mode = 9 {particlelife = 1
type = 4
hp = 210
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.005*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 3
colorshoot = c_red}
if mode = 10 {particlelife = 1.3
type = 5
hp = 550
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.001*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 10
colorshoot = c_red}

//alien hostile
if mode = 11 {particlelife = 0.2
type = 1
hp = 30
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red
distdetir = 250}
if mode = 12 {particlelife = 0.3
type = 2
hp = 50
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.012*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red}
if mode = 13 {particlelife = 0.7
type = 3
hp = 70
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 2}
if mode = 14 {particlelife = 1
type = 4
hp = 210
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.005*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 3
colorshoot = c_red}
if mode = 15 {particlelife = 1.3
type = 5
hp = 550
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.001*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 10
colorshoot = c_red}

//alien passif
if mode = 16 {particlelife = 0.2
type = 1
hp = 30
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red
distdetir = 250}
if mode = 17 {particlelife = 0.3
type = 2
hp = 50
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.012*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 0
colorshoot = c_red}
if mode = 18 {particlelife = 0.7
type = 3
hp = 70
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.009*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 2}
if mode = 9 {particlelife = 1
type = 4
hp = 210
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.005*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 3
colorshoot = c_red}
if mode = 20 {particlelife = 1.3
type = 5
hp = 550
vitesseship = 2*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
accellerationship = 0.001*(1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vitessedetir = 10
tourelleauto = 10
colorshoot = c_red}


 vargetdsgrid[1] = ds_grid_get(obj_planetary.planetary,51,planetparent)
vargetdsgrid[2] = ds_grid_get(obj_planetary.planetary,34,planetparent)
vargetdsgrid[3] = ((ds_grid_get(obj_planetary.planetary,7,planetparent)/25)*obj_planetary.optiportabletaille)
//vargetdsgrid[4] = ds_grid_get(obj_planetary.planetary,32,planetparent)

vargetdsgrid[5] = ds_grid_get(obj_planetary.planetary,72,planetparent)
vargetdsgrid[6] = ds_grid_get(obj_planetary.planetary,73,planetparent)
vargetdsgrid[7] = (1+(ds_grid_get(obj_planetary.planetary,74,planetparent)/50))
vargetdsgrid[8] = ds_grid_get(obj_planetary.planetary,75,planetparent)

colorshiprgb = ds_grid_get(obj_planetary.planetary,30,planetparent)
//ds_grid_add(obj_planetary.planetary,53+mode,planetparent,1)
sprite_index = spr_ship
image_index = mode-1
image_xscale = 1
image_yscale = 1

if fuyard = 0 {
ds_grid_add(obj_planetary.planetary,53+type,planetparent,1)
if ds_grid_get(obj_planetary.planetary,53+type,planetparent) &gt;
 ds_grid_get(obj_planetary.planetary,42+type,planetparent) {
 instance_destroy();
 }}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///RETURN
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///FIN DE COMMERCE
//if ds_grid_get(obj_planetary.planetary,32,planetparent) = enemy
//if alarm[1] &gt; 0 {
ds_grid_add(obj_planetary.planetary,35,planetparent,floor((random_range(1,1.1)*vardist)*(type*5)*8))
ds_grid_add(obj_planetary.planetary,90,planetparent,floor((random_range(1,1.1)*vardist)*(type*5)))
ds_grid_add(obj_planetary.planetary,91,planetparent,floor((random_range(1,1.1)*vardist)*(type*5)))
ds_grid_add(obj_planetary.planetary,92,planetparent,floor((random_range(1,1.1)*vardist)*(type*5)))
ds_grid_add(obj_planetary.planetary,93,planetparent,floor((random_range(1,1.1)*vardist)*(type*5)))
ds_grid_add(obj_planetary.planetary,94,planetparent,floor((random_range(1,1.1)*vardist)*(type*5)))
ds_grid_add(obj_planetary.planetary,95,planetparent,floor((random_range(1,1.1)*vardist)*(type*5)))
ds_grid_add(obj_planetary.planetary,96,planetparent,floor((random_range(1,1.1)*vardist)*(type*5)))
ds_grid_add(obj_planetary.planetary,97,planetparent,floor((random_range(1,1.1)*vardist)*(type*5)))
ds_grid_add(obj_planetary.planetary,98,planetparent,floor((random_range(1,1.1)*vardist)*(type*5)))
//}
/*if ds_grid_get(obj_planetary.planetary,53,planetparent) &gt; 0 {
ds_grid_add(obj_planetary.planetary,53,planetparent,-1)}*/

instance_destroy();
//if floor(random_range(1,100)) = 9 {ds_grid_add(obj_planetary.planetary,36,planetparent,-1)}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_asteorid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///



if enemy = other.enemy  {}else{
if planetparent = other.planetparent {
hp -= 20*other.image_xscale
if hp &lt;= 0 {//ATTAQUANT
if enemy = ds_grid_get(obj_planetary.planetary,34,planetparent) {if ds_grid_get(obj_planetary.planetary,34,planetparent) = global.idfixe {
ds_grid_add(obj_planetary.planetary,52,planetparent,-1)
ds_grid_add(obj_planetary.planetary,36,0,-1)//PERDS VAISSEAU DE LA PLANETE MERE QUAND C TOI QUI ATTAQUE
ds_grid_add(obj_planetary.planetary,42+type,0,-1)//shiptype
//si plu de vaisseau sur planete maire arreter bataille
if ds_grid_get(obj_planetary.planetary,36,0) &lt; 3 {
prochaineguerre = floor(random_range(1000,50000))
ds_grid_set(obj_planetary.planetary,51,planetparent,prochaineguerre)//fin de guerre relancer tout
ds_grid_set(obj_planetary.planetary,52,planetparent,prochaineguerre/100)
}
}else{
//if ds_grid_get(obj_planetary.planetary,36,planetparent) &gt; 2 {
ds_grid_add(obj_planetary.planetary,52,planetparent,-1)//}
}
}
//DEFENSEUR
if enemy = ds_grid_get(obj_planetary.planetary,32,planetparent) {if ds_grid_get(obj_planetary.planetary,36,planetparent) &gt; 2 {
if ds_grid_get(obj_planetary.planetary,32,planetparent) &gt; 0 {//si planet parent = planete mere
ds_grid_add(obj_planetary.planetary,36,planetparent,-1)
ds_grid_add(obj_planetary.planetary,42+type,planetparent,-1)
/*}else{
ds_grid_add(obj_planetary.planetary,52,planetparent,-mode)
//ds_grid_add(obj_planetary.planetary,36,0,-mode)
}*/}}}//allie

if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,c_red,c_orange,c_white);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,10,50);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.01,0.05,-0.001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,0.1*particlelife,1*particlelife,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);

//ANNEAU
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,c_blue,c_white,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,80,100);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.01,0.05,-0.0005,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.9*particlelife,2*particlelife,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);

//explosion
part_type_shape(obj_planetary.particle3,pt_shape_explosion);
part_type_color3(obj_planetary.particle3,c_orange,c_red,c_orange);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,3,20);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.1,0.2,-0.001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.5*particlelife,2*particlelife,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);
}}
//part_type_color3(obj_planetary.particle3,c_blue,c_white,c_blue);
//vague bleue
/*part_type_shape(obj_planetary.particle3,pt_shape_explosion);
part_type_color3(obj_planetary.particle3,c_blue,c_aqua,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,80,120);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.1,0.3,-0.001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.5,2,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,100);*/
/*
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,0,0,0);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,1,10);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.05,0.1,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1,10,0,0);//,12,35,0.01,0);
part_type_colour1(obj_planetary.particle3,c_white);//33023,255,65535);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,100);

part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,0,0,0);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,1,10);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.05,0.1,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1,10,0,0);//,12,35,0.01,0);
part_type_colour1(obj_planetary.particle3,c_yellow);//33023,255,65535);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,100);
*/

instance_destroy();}
//with(other){instance_destroy();}
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_laser">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///



if enemy = other.enemy  {}else{
if planetparent = other.planetparent {
hp -= 1
if hp &lt;= 0 {//ATTAQUANT
if enemy = ds_grid_get(obj_planetary.planetary,34,planetparent) {if ds_grid_get(obj_planetary.planetary,34,planetparent) = global.idfixe {
ds_grid_add(obj_planetary.planetary,52,planetparent,-1)
ds_grid_add(obj_planetary.planetary,36,0,-1)//PERDS VAISSEAU DE LA PLANETE MERE QUAND C TOI QUI ATTAQUE
ds_grid_add(obj_planetary.planetary,42+type,0,-1)//shiptype
//si plu de vaisseau sur planete maire arreter bataille
if ds_grid_get(obj_planetary.planetary,36,0) &lt; 3 {
prochaineguerre = floor(random_range(1000,50000))
ds_grid_set(obj_planetary.planetary,51,planetparent,prochaineguerre)//fin de guerre relancer tout
ds_grid_set(obj_planetary.planetary,52,planetparent,prochaineguerre/100)
}
}else{
//if ds_grid_get(obj_planetary.planetary,36,planetparent) &gt; 2 {
ds_grid_add(obj_planetary.planetary,52,planetparent,-1)//}
}
}
//DEFENSEUR
if enemy = ds_grid_get(obj_planetary.planetary,32,planetparent) {if ds_grid_get(obj_planetary.planetary,36,planetparent) &gt; 2 {
if ds_grid_get(obj_planetary.planetary,32,planetparent) &gt; 0 {//si planet parent = planete mere
ds_grid_add(obj_planetary.planetary,36,planetparent,-1)
ds_grid_add(obj_planetary.planetary,42+type,planetparent,-1)
/*}else{
ds_grid_add(obj_planetary.planetary,52,planetparent,-mode)
//ds_grid_add(obj_planetary.planetary,36,0,-mode)
}*/}}}//allie

if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,c_red,c_orange,c_white);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,10,50);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.01,0.05,-0.001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,0.1*particlelife,1*particlelife,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);

//ANNEAU
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,c_blue,c_white,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,80,100);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.01,0.05,-0.0005,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.9*particlelife,2*particlelife,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);

//explosion
part_type_shape(obj_planetary.particle3,pt_shape_explosion);
part_type_color3(obj_planetary.particle3,c_orange,c_red,c_orange);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,3,20);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.1,0.2,-0.001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.5*particlelife,2*particlelife,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);
}}
//part_type_color3(obj_planetary.particle3,c_blue,c_white,c_blue);
//vague bleue
/*part_type_shape(obj_planetary.particle3,pt_shape_explosion);
part_type_color3(obj_planetary.particle3,c_blue,c_aqua,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,80,120);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.1,0.3,-0.001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.5,2,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,100);*/
/*
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,0,0,0);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,1,10);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.05,0.1,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1,10,0,0);//,12,35,0.01,0);
part_type_colour1(obj_planetary.particle3,c_white);//33023,255,65535);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,100);

part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,0,0,0);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,1,10);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.05,0.1,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1,10,0,0);//,12,35,0.01,0);
part_type_colour1(obj_planetary.particle3,c_yellow);//33023,255,65535);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,100);
*/

instance_destroy();}
with(other){instance_destroy();}
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if view = 1 {audio_sound_gain(snd_quantum2,1*obj_planetary.optiportabletaille,0)
if alarm[1] &gt; 0 {plusdecol += ((vitesseship*toutcequeturate)*vargetdsgrid[7])*trace;distvitmax = 5000;distvitmin = 750}else{plusdecol -= ((vitesseship*toutcequeturate)*vargetdsgrid[7])*trace;distvitmax = 8000;distvitmin = 3000};toutcequeturate = 1
if point_distance(xxdecol,yydecol,room_width/2,room_height/2) &gt; distvitmin*obj_planetary.optiportabletaille &amp;&amp; 
point_distance(xxdecol,yydecol,room_width/2,room_height/2) &lt; distvitmax*obj_planetary.optiportabletaille{
tracelerp = (1+ds_grid_get(obj_planetary.planetary,74,planetparent))*2}else{tracelerp = 1}
if obj_planetary.planetnowid = planetparent &amp;&amp; obj_planetary.echelle = 0 {trace = lerp(trace,tracelerp,0.1);
if point_distance(xxdecol,yydecol,room_width/2,room_height/2) &gt; (distvitmin-170)*obj_planetary.optiportabletaille  {
if obj_planetary.echelle = 0 &amp;&amp; obj_planetary.planetnowid = planetparent &amp;&amp; firstqt = 0 {
if (1+ds_grid_get(obj_planetary.planetary,74,planetparent))*2 &gt; 6 {
if audio_is_playing(snd_quantum2){}else{audio_play_sound(snd_quantum2,3,false);}}firstqt = 1 }
}
if trace &gt; 2 {

part_type_shape(obj_planetary.particlec,pt_shape_flare);
part_type_color3(obj_planetary.particlec,c_white,c_blue,c_white);//33023,255,65535);
part_type_alpha2(obj_planetary.particlec,0.4,0.8);
part_type_life(obj_planetary.particlec,10,15);
part_type_blend(obj_planetary.particlec,1);
part_type_size(obj_planetary.particlec,0.02*obj_planetary.optiportabletaille,0.3*obj_planetary.optiportabletaille,-0.01,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particlec,3,4,0,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particlec,rotaaleatdecol+177,rotaaleatdecol+183,0,0);
part_particles_create(obj_planetary.Snamec,xxdecol,yydecol,obj_planetary.particlec,trace);}
xxdecol = room_width/2+lengthdir_x((vargetdsgrid[3]+plusdecol)*obj_planetary.optiportabletaille,rotaaleatdecol)
yydecol = room_height/2+lengthdir_y((vargetdsgrid[3]+plusdecol)*obj_planetary.optiportabletaille,rotaaleatdecol)
draw_sprite_ext(spr_ship,modenow,xxdecol,yydecol,scale,scale,rotaaleatdecol+rotanow,colorshiprgb,1)}}





</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
