<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mode = 0
alarm[0] = 10
i2 = 1
objprocheid[1] = 0
    objprocheid[2] = 0
    objprocheid[3] = 0
    objprocheid[4] = 0
    objprocheid[5] = 0
    objprocheid[6] = 0
    objprocheid[7] = 0
    objprocheid[8] = 0
    objprocheid[9] = 0
    objprocheid[10] = 0
    objprocheid[11] = 0
    planetparent = 0
    enemy = 0
    varxshoot = 0
    varyshoot = 0
    xx = 0
    yy = 0
    xx2 = 0
    yy2 = 0
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SHOOT
if ds_grid_get(obj_planetary.planetary,210+mode,obj_planetary.planetnowid) &gt; 1 {

enemy = ds_grid_get(obj_planetary.planetary,32,obj_planetary.planetnowid)
if instance_exists(obj_ship){

    /*if i2 &lt;= 1 { i2 += 1}else{i2 = 1
    objprocheid[1] = 0
    objprocheid[2] = 0
    objprocheid[3] = 0
    objprocheid[4] = 0
    objprocheid[5] = 0
    objprocheid[6] = 0
    objprocheid[7] = 0
    objprocheid[8] = 0
    objprocheid[9] = 0
    objprocheid[10] = 0
    objprocheid[11] = 0
    
    with(obj_ship){
    if other.planetparent = obj_planetary.planetnowid {
    if other.enemy = enemy or enemy = 0
    or other.id = id 
    {}else{if  point_distance(xx,yy,other.xx,other.yy) &lt; 700*obj_planetary.optiportabletaille {
    if other.objprocheid[1] = 0 {other.objprocheid[1] = id}else
    if other.objprocheid[2] = 0 {other.objprocheid[2] = id}else
    if other.objprocheid[3] = 0 {other.objprocheid[3] = id}else
    if other.objprocheid[4] = 0 {other.objprocheid[4] = id}else
    if other.objprocheid[5] = 0 {other.objprocheid[5] = id}else
    if other.objprocheid[6] = 0 {other.objprocheid[6] = id}else
    if other.objprocheid[7] = 0 {other.objprocheid[7] = id}else
    if other.objprocheid[8] = 0 {other.objprocheid[8] = id}else
    if other.objprocheid[9] = 0 {other.objprocheid[9] = id}else
    if other.objprocheid[10] = 0 {other.objprocheid[10] = id}else
    if other.objprocheid[11] = 0 {other.objprocheid[11] = id}
    }}}}
    
    }*/
    
    i2 = 1 
    objprocheid[1] = 0
    distenemy = 300000
     with(obj_ship){
    if planetparent = obj_planetary.planetnowid {
    if other.enemy = enemy or enemy = 0
    or other.id = id 
    {}else{if  point_distance(xx,yy,other.xx,other.yy) &lt; 600*obj_planetary.optiportabletaille  {
    if  point_distance(xx,yy,other.xx,other.yy) &lt; other.distenemy {
    other.objprocheid[1] = id;other.distenemy = point_distance(xx,yy,other.xx,other.yy)}
    }}}}
    
    if objprocheid[i2] &gt; 0 &amp;&amp; instance_exists(objprocheid[i2]){
    varxshoot = objprocheid[i2].xx+((objprocheid[i2].xx2*obj_planetary.optiportabletaille)*20)
    varyshoot = objprocheid[i2].yy+((objprocheid[i2].yy2*obj_planetary.optiportabletaille)*20)
    xxshootlength = xx+lengthdir_x((2.5)*obj_planetary.optiportabletaille,(36*i2))
    yyshootlength = yy+lengthdir_y((2.5)*obj_planetary.optiportabletaille,(36*i2))
    if (abs(angle_difference(point_direction(xxshootlength,yyshootlength,
    varxshoot,varyshoot), image_angle)) &lt; 6) {
    with(instance_create(xxshootlength,yyshootlength,obj_laser)){
    vitesse = 30
    dgt = 20
    fat = 1.5
    planetparent = other.planetparent
    enemy = other.enemy
    image_angle = other.image_angle//point_direction(other.xxshootlength,other.yyshootlength,
    //other.varxshoot,other.varyshoot)
    alarm[0] = 40
    }}}
 }
 
 
}

alarm[0] = 15
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_laser">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///



if enemy = other.enemy  {}else{
if planetparent = other.planetparent {
if ds_grid_get(obj_planetary.planetary,210+mode,planetparent) &gt; 0 {
//hp -= 1*other.dgt
ds_grid_add(obj_planetary.planetary,210+mode,planetparent,-1);
if ds_grid_get(obj_planetary.planetary,210+mode,planetparent) &lt;= 1 {//ATTAQUANT
if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,c_red,c_orange,c_white);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,10,50);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.01,0.05,-0.001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,0.1*1,1*1,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);

//ANNEAU
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,c_blue,c_white,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,80,100);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.01,0.05,-0.0005,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.9*1,2*1,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);

//explosion
part_type_shape(obj_planetary.particle3,pt_shape_explosion);
part_type_color3(obj_planetary.particle3,c_orange,c_red,c_orange);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,3,20);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.1,0.2,-0.001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.5*1,2*obj_planetary.optiportabletaille,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);
}}
//part_type_color3(obj_planetary.particle3,c_blue,c_white,c_blue);
//vague bleue
/*part_type_shape(obj_planetary.particle3,pt_shape_explosion);
part_type_color3(obj_planetary.particle3,c_blue,c_aqua,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,80,120);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.1,0.3,-0.001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.5,2,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,100);*/
/*
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,0,0,0);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,1,10);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.05,0.1,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1,10,0,0);//,12,35,0.01,0);
part_type_colour1(obj_planetary.particle3,c_white);//33023,255,65535);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,100);

part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,0,0,0);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,1,10);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.05,0.1,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1,10,0,0);//,12,35,0.01,0);
part_type_colour1(obj_planetary.particle3,c_yellow);//33023,255,65535);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,100);
*/

}
with(other){instance_destroy();}
}}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>planetparent = obj_planetary.planetnowid
enemy = 0
if obj_planetary.echelle = 0 {
if ds_grid_get(obj_planetary.planetary,210+mode,obj_planetary.planetnowid) &gt; 1 {
enemy = ds_grid_get(obj_planetary.planetary,32,planetparent)


x = xx
y = yy

if mode = 1 {
with(obj_planetary){
other.xx = xxlune1+lengthdir_x(((ds_grid_get(planetary,83,planetnowid)/25)*optiportabletaille),0)
other.yy = yylune1+lengthdir_y(((ds_grid_get(planetary,83,planetnowid)/25)*optiportabletaille),0)
   
   draw_sprite_ext(spr_turretmoon,11,xxlune1+lengthdir_x(((ds_grid_get(planetary,83,planetnowid)/25)*optiportabletaille),0)
,yylune1+lengthdir_y(((ds_grid_get(planetary,83,planetnowid)/25)*optiportabletaille),0),0.7*optiportabletaille,0.7*optiportabletaille,other.image_angle,planetarycolor,1)
   
}
dir = point_direction(xx,yy,varxshoot,varyshoot)
image_angle += sin(degtorad(dir - image_angle)) * (random_range(1,2)*5);
sprite_index = spr_turretmoon
image_index = 11
image_xscale = 0.7*obj_planetary.optiportabletaille
image_yscale = image_xscale
}

if mode = 2 {
with(obj_planetary){
other.xx = xxlune1+lengthdir_x(((ds_grid_get(planetary,83,planetnowid)/25)*optiportabletaille),90)
other.yy = yylune1+lengthdir_y(((ds_grid_get(planetary,83,planetnowid)/25)*optiportabletaille),90)
   
   draw_sprite_ext(spr_turretmoon,11,other.xx,other.yy,0.7*optiportabletaille,0.7*optiportabletaille,other.image_angle,planetarycolor,1)
   
}
dir = point_direction(xx,yy,varxshoot,varyshoot)
image_angle += sin(degtorad(dir - image_angle)) * (random_range(1,2)*5);
sprite_index = spr_turretmoon
image_index = 11
image_xscale = 0.7*obj_planetary.optiportabletaille
image_yscale = image_xscale
}

if mode = 3 {
with(obj_planetary){
other.xx = xxlune1+lengthdir_x(((ds_grid_get(planetary,83,planetnowid)/25)*optiportabletaille),180)
other.yy = yylune1+lengthdir_y(((ds_grid_get(planetary,83,planetnowid)/25)*optiportabletaille),180)
   
   draw_sprite_ext(spr_turretmoon,11,other.xx,other.yy,0.7*optiportabletaille,0.7*optiportabletaille,other.image_angle,planetarycolor,1)
  
}
dir = point_direction(xx,yy,varxshoot,varyshoot)
image_angle += sin(degtorad(dir - image_angle)) * (random_range(1,2)*5);
sprite_index = spr_turretmoon
image_index = 11
image_xscale = 0.7*obj_planetary.optiportabletaille
image_yscale = image_xscale
}

if mode = 4 {
with(obj_planetary){
other.xx = xxlune1+lengthdir_x(((ds_grid_get(planetary,83,planetnowid)/25)*optiportabletaille),270)
other.yy = yylune1+lengthdir_y(((ds_grid_get(planetary,83,planetnowid)/25)*optiportabletaille),270)
   
   draw_sprite_ext(spr_turretmoon,11,other.xx,other.yy,0.7*optiportabletaille,0.7*optiportabletaille,other.image_angle,planetarycolor,1)

}
dir = point_direction(xx,yy,varxshoot,varyshoot)
image_angle += sin(degtorad(dir - image_angle)) * (random_range(1,2)*5);
sprite_index = spr_turretmoon
image_index = 11
image_xscale = 0.7*obj_planetary.optiportabletaille
image_yscale = image_xscale
}
}else{
if ds_grid_get(obj_planetary.planetary,210+mode,obj_planetary.planetnowid) = 1 {
//BOOOOM EXPLOSIOOOOON
ds_grid_set(obj_planetary.planetary,210+mode,obj_planetary.planetnowid,0)
}
}}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
