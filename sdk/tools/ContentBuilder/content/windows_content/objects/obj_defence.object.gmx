<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>zone = 0
planetparent = 0
hpshield = 1000
xx = 0
yy = 0
xx2 = 0
yy2 = 0
enemy = 2
dir = 0
distenemy = 0
hp = 100
alarm[0] = random_range(10,15)
particlelife = 5
i2 = 1
mode = 1
dgt = 2
rotaleat = random(360)
image_xscale = 0
image_yscale = 0
vargetdsgrid[0] = 0
vargetdsgrid[1] = 0
vargetdsgrid[2] = 0
vargetdsgrid[3] = 0
vargetdsgrid[4] = 0
vargetdsgrid[5] = 0
vargetdsgrid[6] = 0
vargetdsgrid[7] = 0
vargetdsgrid[8] = 0
alarm[4] = 1
objprocheid[1] = 0
    objprocheid[2] = 0
    objprocheid[3] = 0
    objprocheid[4] = 0
    objprocheid[5] = 0
    objprocheid[6] = 0
    objprocheid[7] = 0
    objprocheid[8] = 0
    objprocheid[9] = 0
    objprocheid[10] = 0
    objprocheid[11] = 0
    ausol = 0

    
xx2 = 0
yy2 = 0
distenemy = 30000
sprite_index = spr_turretplanet
image_xscale = 0.5*obj_planetary.optiportabletaille
image_yscale = 0.5*obj_planetary.optiportabletaille
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hp &lt;= 0 {
if ds_grid_get(obj_planetary.planetary,34,planetparent) = global.idfixe  or ds_grid_get(obj_planetary.planetary,32,planetparent) &lt; 7 or ds_grid_get(obj_planetary.planetary,34,planetparent) &lt; 7{
            with(obj_highscore){
                var hiscore_map, i, str;
                hiscore_map = ds_map_create();
                ds_map_set(hiscore_map,'id', other.planetparent);
                ds_map_set(hiscore_map,'cu', global.idfixe);
                str = json_encode(hiscore_map);
                ds_map_destroy(hiscore_map); 
                post = http_post_string(addr+"universe/deleteDefense" , str);
            }
            //defensseur
        }else if ds_grid_get(obj_planetary.planetary,32,planetparent) = global.idfixe  or ds_grid_get(obj_planetary.planetary,32,planetparent) &lt; 7 or ds_grid_get(obj_planetary.planetary,34,planetparent) &lt; 7{
            with(obj_highscore){
                var hiscore_map, i, str;
                hiscore_map = ds_map_create();
                ds_map_set(hiscore_map,'id', other.planetparent);
                ds_map_set(hiscore_map,'cu', global.idfixe);
                str = json_encode(hiscore_map);
                ds_map_destroy(hiscore_map); 
                post = http_post_string(addr+"universe/deleteDefense" , str);
            }
        }
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if enemy = global.idfixe{
hp = hp*(1+(obj_planetary.techArray[5]/25))
dgt = dgt*(1+(obj_planetary.techArray[1]/25))
hpshield = hp*(1+(obj_planetary.techArray[4]/25))
}else{
hp = hp*(1+(ds_grid_get(obj_planetary.planetary,73,planetparent)/25))
dgt = dgt*(1+(ds_grid_get(obj_planetary.planetary,72,planetparent)/25))
hpshield = hp*(1+(ds_grid_get(obj_planetary.planetary,89,planetparent)/25))
}
//dir = ((zone*36)+obj_planetary.rotaplanet)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SHOOT
if ausol = 1 {
disttir = 570}else{
disttir = 450}

if obj_planetary.planetnowid = planetparent {}else{
with(obj_planetary){
if other.ausol = 1 {
other.image_angle += sin(degtorad(other.dir - other.image_angle)) * (random_range(1,2)*2);
other.xx = room_width/2+lengthdir_x((other.vargetdsgrid[3]+4)*optiportabletaille,(other.zone*36)+rotaplanet)
other.yy = room_height/2+lengthdir_y((other.vargetdsgrid[3]+4)*optiportabletaille,(other.zone*36)+rotaplanet)
}else{
other.xx = room_width/2+lengthdir_x((other.vargetdsgrid[3]+120)*optiportabletaille,(other.zone*36)+rotaplanet)
other.yy = room_height/2+lengthdir_y((other.vargetdsgrid[3]+120)*optiportabletaille,(other.zone*36)+rotaplanet)
}
}

x = xx
y = yy}

//if //obj_planetary.planetnowid = planetparent &amp;&amp; 
//obj_planetary.echelle = 0 {
ang2 = ((zone*36)+obj_planetary.rotaplanet)
if ausol = 1 {ipaplus = 1}else{ipaplus = 5}
if i2 &lt; ipaplus { i2 += 1}else{i2 = 1
objprocheid[1] = 0;objprocheid[2] = 0;objprocheid[3] = 0;objprocheid[4] = 0;objprocheid[5] = 0;//objprocheid[6] = 0;objprocheid[7] = 0;objprocheid[8] = 0;objprocheid[9] = 0;objprocheid[10] = 0;objprocheid[11] = 0
if instance_exists(obj_ship){
    with(obj_ship){
    if other.planetparent = planetparent {if other.enemy = enemy or enemy = 0
    {}else{if  point_distance(xx,yy,other.xx,other.yy) &lt; other.disttir*obj_planetary.optiportabletaille {
    ang1 = point_direction(other.xx,other.yy,xx,yy)
    if abs(angle_difference(ang1, other.ang2)) &lt; 70 or other.ausol = 0  {
    if other.objprocheid[1] = 0 {other.objprocheid[1] = id}else
    if other.objprocheid[2] = 0 {other.objprocheid[2] = id}else
    if other.objprocheid[3] = 0 {other.objprocheid[3] = id}else
    if other.objprocheid[4] = 0 {other.objprocheid[4] = id}
    }}}}}}
    
    if instance_exists(obj_shipcommand){
    with(obj_shipcommand){
    if other.planetparent = planetparent {if other.enemy = enemy or enemy = 0
    {}else{if  point_distance(xx,yy,other.xx,other.yy) &lt; other.disttir*obj_planetary.optiportabletaille {
    ang1 = point_direction(other.xx,other.yy,xx,yy)
    if abs(angle_difference(ang1, other.ang2)) &lt; 70 or other.ausol = 0  {
    if other.objprocheid[1] = 0 {other.objprocheid[1] = id}else
    if other.objprocheid[2] = 0 {other.objprocheid[2] = id}else
    if other.objprocheid[3] = 0 {other.objprocheid[3] = id}else
    if other.objprocheid[4] = 0 {other.objprocheid[4] = id}
    }}}}}}
    
    if planetparent = obj_planetary.planetnowid {
    if instance_exists(obj_asteorid){
    with(obj_asteorid){
    if other.planetparent = planetparent {
    if  point_distance(xx,yy,other.xx,other.yy) &lt; other.disttir*obj_planetary.optiportabletaille  {
    ang1 = point_direction(other.xx,other.yy,xx,yy)
    if abs(angle_difference(ang1, other.ang2)) &lt; 70 or other.ausol = 0 {
    if other.objprocheid[1] = 0 {other.objprocheid[1] = id}else
    if other.objprocheid[2] = 0 {other.objprocheid[2] = id}else
    if other.objprocheid[3] = 0 {other.objprocheid[3] = id}else
    if other.objprocheid[4] = 0 {other.objprocheid[4] = id}
    }}}}}
    }
    
    }
    
    if objprocheid[i2] &gt; 0 {if instance_exists(objprocheid[i2]){
    varxshoot = objprocheid[i2].xx
    varyshoot = objprocheid[i2].yy
    xxshootlength = xx+lengthdir_x(20*obj_planetary.optiportabletaille,image_angle)
    yyshootlength = yy+lengthdir_y(20*obj_planetary.optiportabletaille,image_angle)
    
    dir = point_direction(xxshootlength,yyshootlength,
    varxshoot,varyshoot)
    if obj_planetary.echelle = 0 &amp;&amp; planetparent = obj_planetary.planetnowid {
    lasersound = choose(snd_lasera)//,snd_laserb,snd_laserc,snd_laserd,snd_lasere,snd_laserf,snd_laserg,snd_laserh,snd_laseri,snd_laserj)
    global.shootaudio += 2//(1+(global.shootaudio/50))
    audio_sound_gain(lasersound,(1/(1+(global.shootaudio/20)))*obj_planetary.optiportabletaille,0)
    audio_play_sound(lasersound,2,false);
    }
    if ausol = 1 {
    with(instance_create(xxshootlength,yyshootlength,obj_rocket)){//show_message("tir")
    dgt = other.dgt
    planetparent = other.planetparent
    enemy = other.enemy
    image_angle = other.image_angle//point_direction(other.xxshootlength,other.yyshootlength,
    //other.varxshoot,other.varyshoot)
    alarm[0] = 200
    }
    }else{
    with(instance_create(xxshootlength,yyshootlength,obj_laser)){//show_message("tir")
    dgt = other.dgt
    planetparent = other.planetparent
    enemy = other.enemy
    image_angle = point_direction(other.xxshootlength,other.yyshootlength,
    other.varxshoot,other.varyshoot)
    alarm[0] = 30
    }
    }
    }}else{dir = ((zone*36)+obj_planetary.rotaplanet)}
if ausol = 1 {alarm[0] = random_range(40,100)}else{alarm[0] = 3}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_asteorid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///



if enemy = other.enemy  {}else{
if planetparent = other.planetparent {
if hpshield &gt; 0 {
if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
part_type_shape(obj_planetary.particlesh,pt_shape_flare);
part_type_color3(obj_planetary.particlesh,c_blue,c_blue,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particlesh,0.8,1);
part_type_life(obj_planetary.particlesh,8*obj_planetary.optiportabletaille,14*obj_planetary.optiportabletaille);
part_type_blend(obj_planetary.particlesh,1);
part_type_size(obj_planetary.particlesh,0.06*obj_planetary.optiportabletaille,0.1*obj_planetary.optiportabletaille,-0.001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particlesh,0.3*obj_planetary.optiportabletaille,0.25*obj_planetary.optiportabletaille,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particlesh,other.image_angle+90,other.image_angle-90,0,0);
part_particles_create(obj_planetary.Snamesh,other.x,other.y,obj_planetary.particlesh,10);}}
hpshield -= 20*other.image_xscale
}else{
hp -= 20*other.image_xscale}
//hp -= 20*other.image_xscale
if hp &lt;= 0 {
if ausol = 1 {
ds_grid_add(obj_planetary.planetary,269+zone,planetparent,-1)
}else{
ds_grid_add(obj_planetary.planetary,60+zone,planetparent,-1)}

if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,c_red,c_orange,c_white);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,10*1,50*1);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.01*obj_planetary.optiportabletaille,0.05*obj_planetary.optiportabletaille,-0.001*obj_planetary.optiportabletaille,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,0.1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,-0.002*obj_planetary.optiportabletaille,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);

//ANNEAU
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,c_blue,c_white,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,80*1,100*1);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.01*obj_planetary.optiportabletaille,0.05*obj_planetary.optiportabletaille,-0.0005*obj_planetary.optiportabletaille,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.9*obj_planetary.optiportabletaille,2*obj_planetary.optiportabletaille,-0.002*obj_planetary.optiportabletaille,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);

//explosion
part_type_shape(obj_planetary.particle3,pt_shape_explosion);
part_type_color3(obj_planetary.particle3,c_orange,c_red,c_orange);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,3*1,20*1);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.1*obj_planetary.optiportabletaille,0.2*obj_planetary.optiportabletaille,-0.001*obj_planetary.optiportabletaille,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.5*obj_planetary.optiportabletaille,2*obj_planetary.optiportabletaille,-0.002*obj_planetary.optiportabletaille,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);
}}
//part_type_color3(obj_planetary.particle3,c_blue,c_white,c_blue);
//vague bleue
/*part_type_shape(obj_planetary.particle3,pt_shape_explosion);
part_type_color3(obj_planetary.particle3,c_blue,c_aqua,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,80,120);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.1,0.3,-0.001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.5,2,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,100);*/
/*
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,0,0,0);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,1,10);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.05,0.1,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1,10,0,0);//,12,35,0.01,0);
part_type_colour1(obj_planetary.particle3,c_white);//33023,255,65535);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,100);

part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,0,0,0);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,1,10);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.05,0.1,-0.00001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1,10,0,0);//,12,35,0.01,0);
part_type_colour1(obj_planetary.particle3,c_yellow);//33023,255,65535);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,100);
*/

instance_destroy();}
//with(other){instance_destroy();}
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_laser">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///
if enemy = other.enemy {}else{
if planetparent = other.planetparent {
if hpshield &gt; 0 {
if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
part_type_shape(obj_planetary.particlesh,pt_shape_flare);
part_type_color3(obj_planetary.particlesh,c_blue,c_blue,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particlesh,0.8,1);
part_type_life(obj_planetary.particlesh,15*obj_planetary.optiportabletaille,18*obj_planetary.optiportabletaille);
part_type_blend(obj_planetary.particlesh,1);
part_type_size(obj_planetary.particlesh,0.01*obj_planetary.optiportabletaille,0.05*obj_planetary.optiportabletaille,-0.001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particlesh,0.3*obj_planetary.optiportabletaille,0.9*obj_planetary.optiportabletaille,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particlesh,other.image_angle+90,other.image_angle-90,0,0);
part_particles_create(obj_planetary.Snamesh,other.x,other.y,obj_planetary.particlesh,10);}}
hpshield -= 1*other.dgt
}else{
hp -= 1*other.dgt}
if hp &lt;= 0 {
//if enemy = 1 {ds_grid_add(planetary,52,planetparent,-1)}
if ausol = 1 {
ds_grid_add(obj_planetary.planetary,269+zone,planetparent,-1)
}else{
ds_grid_add(obj_planetary.planetary,60+zone,planetparent,-1)}
//if enemy = 2 {ds_grid_add(obj_planetary.planetary,38,planetparent,-10)}//allie


if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,c_red,c_orange,c_white);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,10*1,50*1);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.01*obj_planetary.optiportabletaille,0.05*obj_planetary.optiportabletaille,-0.001*obj_planetary.optiportabletaille,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,0.1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,-0.002*obj_planetary.optiportabletaille,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);

//ANNEAU
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,c_blue,c_white,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,80*1,100*1);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.01*obj_planetary.optiportabletaille,0.05*obj_planetary.optiportabletaille,-0.0005*obj_planetary.optiportabletaille,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.9*obj_planetary.optiportabletaille,2*obj_planetary.optiportabletaille,-0.002*obj_planetary.optiportabletaille,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);

//explosion
part_type_shape(obj_planetary.particle3,pt_shape_explosion);
part_type_color3(obj_planetary.particle3,c_orange,c_red,c_orange);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,3*1,20*1);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.1*obj_planetary.optiportabletaille,0.2*obj_planetary.optiportabletaille,-0.001*obj_planetary.optiportabletaille,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.5*obj_planetary.optiportabletaille,2*obj_planetary.optiportabletaille,-0.002*obj_planetary.optiportabletaille,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);
}}


instance_destroy();}
with(other){instance_destroy();}
}}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_rocket">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///
if enemy = other.enemy {}else{
if planetparent = other.planetparent {

if hpshield &gt; 0 {
if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
part_type_shape(obj_planetary.particlesh,pt_shape_flare);
part_type_color3(obj_planetary.particlesh,c_blue,c_blue,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particlesh,0.8,1);
part_type_life(obj_planetary.particlesh,8*obj_planetary.optiportabletaille,14*obj_planetary.optiportabletaille);
part_type_blend(obj_planetary.particlesh,1);
part_type_size(obj_planetary.particlesh,0.06*obj_planetary.optiportabletaille,0.1*obj_planetary.optiportabletaille,-0.001,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particlesh,0.3*obj_planetary.optiportabletaille,0.25*obj_planetary.optiportabletaille,-0.002,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particlesh,other.image_angle+90,other.image_angle-90,0,0);
part_particles_create(obj_planetary.Snamesh,other.x,other.y,obj_planetary.particlesh,10);}}
hpshield -= 2*other.dgt
}else{
hp -= 2*other.dgt}
if hp &lt;= 0 {
//if enemy = 1 {ds_grid_add(planetary,52,planetparent,-1)}
if ausol = 1 {
ds_grid_add(obj_planetary.planetary,269+zone,planetparent,-1)
}else{
ds_grid_add(obj_planetary.planetary,60+zone,planetparent,-1)}
//if enemy = 2 {ds_grid_add(obj_planetary.planetary,38,planetparent,-10)}//allie


if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,c_red,c_orange,c_white);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,10*1,50*1);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.01*obj_planetary.optiportabletaille,0.05*obj_planetary.optiportabletaille,-0.001*obj_planetary.optiportabletaille,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,0.1*obj_planetary.optiportabletaille,1*obj_planetary.optiportabletaille,-0.002*obj_planetary.optiportabletaille,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);

//ANNEAU
part_type_shape(obj_planetary.particle3,pt_shape_flare);
part_type_color3(obj_planetary.particle3,c_blue,c_white,c_blue);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,80*1,100*1);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.01*obj_planetary.optiportabletaille,0.05*obj_planetary.optiportabletaille,-0.0005*obj_planetary.optiportabletaille,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.9*obj_planetary.optiportabletaille,2*obj_planetary.optiportabletaille,-0.002*obj_planetary.optiportabletaille,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);

//explosion
part_type_shape(obj_planetary.particle3,pt_shape_explosion);
part_type_color3(obj_planetary.particle3,c_orange,c_red,c_orange);//33023,255,65535);
part_type_alpha2(obj_planetary.particle3,0.8,1);
part_type_life(obj_planetary.particle3,3*1,20*1);
part_type_blend(obj_planetary.particle3,1);
part_type_size(obj_planetary.particle3,0.1*obj_planetary.optiportabletaille,0.2*obj_planetary.optiportabletaille,-0.001*obj_planetary.optiportabletaille,0);//0.3,0.4,0.1,);
part_type_speed(obj_planetary.particle3,1.5*obj_planetary.optiportabletaille,2*obj_planetary.optiportabletaille,-0.002*obj_planetary.optiportabletaille,0);//,12,35,0.01,0);
part_type_direction(obj_planetary.particle3,0,360,0,0);
part_particles_create(obj_planetary.Sname3,xx,yy,obj_planetary.particle3,150);
}}


instance_destroy();}
with(other){instance_destroy();}
}}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//vargetdsgrid[1] = ds_grid_get(obj_planetary.planetary,51,planetparent)
//vargetdsgrid[2] = ds_grid_get(obj_planetary.planetary,34,planetparent)
//vargetdsgrid[3] = floor(ds_grid_get(obj_planetary.planetary,51,planetparent))
if ds_grid_get(obj_planetary.planetary,28,planetparent) = obj_planetary.systemstellairenow {
}else{instance_destroy();}

if obj_planetary.echelle = 0 {
if obj_planetary.planetnowid = planetparent {
vargetdsgrid[3] = (ds_grid_get(obj_planetary.planetary,7,planetparent)/25)
vargetdsgrid[4] = ds_grid_get(obj_planetary.planetary,32,planetparent)
enemy = vargetdsgrid[4]
if global.surfok = 1{
with(obj_planetary){if other.ausol = 1 {other.image_angle += sin(degtorad(other.dir - other.image_angle)) * (random_range(1,2)*2);
other.xx = room_width/2+lengthdir_x((other.vargetdsgrid[3]+4)*optiportabletaille,(other.zone*36)+rotaplanet)
other.yy = room_height/2+lengthdir_y((other.vargetdsgrid[3]+4)*optiportabletaille,(other.zone*36)+rotaplanet)}else{
other.xx = room_width/2+lengthdir_x((other.vargetdsgrid[3]+120)*optiportabletaille,(other.zone*36)+rotaplanet)
other.yy = room_height/2+lengthdir_y((other.vargetdsgrid[3]+120)*optiportabletaille,(other.zone*36)+rotaplanet)}
if other.ausol = 1 {
draw_sprite_ext(spr_turretplanet,0,other.xx,other.yy,other.image_xscale,other.image_yscale,other.image_angle,planetarycolor2,1)
draw_sprite_ext(spr_turretplanet,1,other.xx,other.yy,other.image_xscale,other.image_yscale,(other.zone*36)+rotaplanet,planetarycolor,1)}else{
draw_sprite_ext(spr_turretplanet,2,other.xx,other.yy,other.image_xscale,other.image_yscale,other.rotaleat+rotaplanet,planetarycolor2,1)}
}}
x = xx
y = yy
image_xscale = 0.5*obj_planetary.optiportabletaille
image_yscale = 0.5*obj_planetary.optiportabletaille
}}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
